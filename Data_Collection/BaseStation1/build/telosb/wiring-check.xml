<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6e0d9b2a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6e0d9712b0"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6e0d9712b0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6e0d7b4590"/></to>
    </wire>
    <wire loc="14:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0d9a7b50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d794020"/></to>
    </wire>
    <wire loc="16:SenseAppC.nc">
      <from><interface-ref name="Control1" scoped="" ref="0x7f6e0da2d470"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cff7760"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cff7760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cfcb2f0"/></to>
    </wire>
    <wire loc="17:SenseAppC.nc">
      <from><interface-ref name="AMSend1" scoped="" ref="0x7f6e0d9bd650"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6e0d52aca0"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:SenseAppC.nc">
      <from><interface-ref name="Packet1" scoped="" ref="0x7f6e0d9b3230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0d528630"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6e0d528630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0d4bc720"/></to>
    </wire>
    <wire loc="19:SenseAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0da31020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0c2998b0"/></to>
    </wire>
    <wire loc="66:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0c2998b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0bc80c30"/></to>
    </wire>
    <wire loc="21:SenseAppC.nc">
      <from><interface-ref name="Control2" scoped="" ref="0x7f6e0da32060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0d52ec70"/></to>
    </wire>
    <wire loc="61:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6e0d52ec70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0d4b54e0"/></to>
    </wire>
    <wire loc="22:SenseAppC.nc">
      <from><interface-ref name="Packet2" scoped="" ref="0x7f6e0d9be020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0c29cc30"/></to>
    </wire>
    <wire loc="65:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6e0c29cc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0bc80020"/></to>
    </wire>
    <wire loc="23:SenseAppC.nc">
      <from><interface-ref name="AMSend2" scoped="" ref="0x7f6e0d9cd350"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6e0c29c020"/></to>
    </wire>
    <wire loc="64:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6e0c29c020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6e0bc813b0"/></to>
    </wire>
    <wire loc="24:SenseAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0d9c65b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0c28e910"/></to>
    </wire>
    <wire loc="25:SenseAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0d9c65b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0d528020"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0c28e910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0cff3b20"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:SenseC.nc">
      <from><interface-ref name="sendData" scoped="" ref="0x7f6e0d9a15c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:SenseC.nc">
      <from><interface-ref name="sendChangeFreq" scoped="" ref="0x7f6e0d998380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c380dd0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c40ab50"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c429750"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c449080"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c589110"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c68a620"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c77a820"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0ce567d0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0ba88a40"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0cb3d020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0cf07510"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0bcc9ca0"/></to>
    </wire>
    <wire loc="59:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d4b8e50"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6e0d7b4c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6e0dec93a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6e0dec93a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6e0da74140"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6e0d7a46c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d970640"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0d970640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d96b8b0"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d7a4dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f6e0d968020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f6e0d969be0"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f6e0d969be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d94ab50"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f6e0d968700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d96aa10"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f6e0d968de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d76cc40"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0d94ab50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d931b60"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6e0d93f510"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6e0d92f350"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6e0db4c4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6e0d92e680"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f6e0d8eb5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d8296d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f6e0d8d9020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d821b30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f6e0d8e2700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d82e160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f6e0d8c6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d808cb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f6e0d8e9aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d82f480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f6e0d8cd020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d808020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f6e0d8c3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d7f0cb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f6e0d8d45a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d801220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f6e0d8ecb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d87e9d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f6e0d8c9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d8172f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f6e0d8cf3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d818610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f6e0d8d85a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d819220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f6e0d8e1700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d8277a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f6e0d8c5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d7ff2f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f6e0d8d7be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d8116d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f6e0d8e8890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d828ac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f6e0d8fc060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d88dc80"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f6e0d8cdda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d800610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f6e0d8f30c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d830020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f6e0d8d3a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d7fa6d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f6e0d8dc6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d837a90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f6e0d8c7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d80f7a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f6e0d8e5cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d838de0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f6e0d8ce1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d810ac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f6e0d8c4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d7f87a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f6e0d8d50c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d80ab30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f6e0d8ccb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d7f9ac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f6e0d8caa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0d81fcb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f6e0d8cba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d7f0020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f6e0d8d0570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6e0d81f020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f6e0d8d1020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6e0d7f3b30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f6e0d88bc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d88b5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6e0d88a2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f6e0d7eba90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6e0d88a940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f6e0d7e8260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d836930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d88dc80"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d833020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d88b5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d82d020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d88dc80"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d82c7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d88b5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d826610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d88dc80"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d825c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d88b5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f6e0d884c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6e0d8832f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f6e0d7e89f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6e0d883940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f6e0d7e7240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d81eb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d81c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d816160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d8157a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d80e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d80dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d807b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d8052f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d7fe160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d7fd7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d7f7610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d7f6c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0d7efb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6e0d7ed2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0da72040"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f6e0da6e490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f6e0de603b0"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0d76cc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d7978d0"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f6e0d78c7b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f6e0d76f360"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f6e0d76f360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0d554020"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f6e0d792980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f6e0d76e6a0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f6e0d76e6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0d540b90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f6e0d791ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f6e0d76d9c0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f6e0d76d9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0d53b710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0d5432f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f6e0d714200"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f6e0d714200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5f1740"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0d53fde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f6e0d712200"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f6e0d712200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5ec100"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0d53a930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f6e0d710200"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f6e0d710200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5e8d10"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f6e0d756020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d68a100"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f6e0d741020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d65bd10"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f6e0d6f8560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d64cd10"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f6e0d6d3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5c1100"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f6e0d6f6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d647740"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f6e0d73d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d650100"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f6e0d729200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d621e00"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f6e0d704200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5cbd10"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f6e0d6f0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d63ed10"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f6e0d6df570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5dd100"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f6e0d6cb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5bcd10"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f6e0d750020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d67c100"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f6e0d6ed580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d639740"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f6e0d74b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d672740"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f6e0d737020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d642100"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f6e0d723200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d613d10"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f6e0d70e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5e2740"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f6e0d6fe200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5bcd10"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f6e0d75a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d694d10"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f6e0d745020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d664860"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f6e0d731020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d634100"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f6e0d6fa580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d64cd10"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f6e0d6d9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5cf100"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f6e0d6cd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5bcd10"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f6e0d6e5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5f6d10"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f6e0d72d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d62aa60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f6e0d718200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5fa100"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f6e0d708200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5d4740"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f6e0d6d7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5cbd10"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f6e0d6eb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d604d10"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f6e0d754020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d686d10"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f6e0d73f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d656740"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f6e0d70c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5dd100"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f6e0d73b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d64cd10"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f6e0d727200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d61c740"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f6e0d702200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5c6740"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f6e0d6e7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5fa100"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f6e0d767020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d69e6d0"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f6e0d749020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d66d100"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f6e0d735020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d63ed10"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f6e0d721200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d60e740"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f6e0d6e3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d634100"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f6e0d6dd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5d9d10"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f6e0d6d1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5bcd10"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f6e0d71c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d604d10"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f6e0d6e1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d630d10"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f6e0d758020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d68f740"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f6e0d743020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d65f270"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f6e0d72f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d630d10"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f6e0d6e9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5ff740"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f6e0d6d5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5c6740"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f6e0d72b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d625460"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f6e0d716200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5f6d10"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f6e0d706200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5cf100"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f6e0d752020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d681740"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f6e0d70a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5d9d10"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f6e0d74d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d677d10"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f6e0d739020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d647740"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f6e0d725200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d617100"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f6e0d700200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5c1100"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f6e0d75c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d698100"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f6e0d747020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d669d10"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f6e0d733020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d639740"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f6e0d71e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d608100"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f6e0d6f2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d642100"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f6e0d6db570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5d4740"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f6e0d6f4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d642100"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f6e0d71a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5ff740"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f6e0d6cf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5c1100"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f6e0d6c9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d5e2740"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f6e0d6fc1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6e0d650100"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6e0d4b54e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0d4a52f0"/></to>
    </wire>
    <wire loc="63:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6e0d52aca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6e0d51cb40"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0d528020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0d4bf9e0"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0d51d4c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0d4bb400"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0d5272d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0d4be020"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0d4b8e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0d4a6c30"/></to>
    </wire>
    <wire loc="60:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0d4b2940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d51de40"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6e0d4bbd90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0d4b3020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6e0d4baa50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0d4b44c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f6e0d4b2020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f6e0d0808c0"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6e0d4b3020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0d374de0"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0d4b44c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0d3746c0"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f6e0d373c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f6e0d4b2020"/></to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0d4a18e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d4b2940"/></to>
    </wire>
    <wire loc="71:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0d371920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d4b2940"/></to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0d367cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d4b2940"/></to>
    </wire>
    <wire loc="74:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f6e0d372590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f6e0d49a5c0"/></to>
    </wire>
    <wire loc="75:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f6e0d372e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f6e0d49e130"/></to>
    </wire>
    <wire loc="77:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f6e0d4948e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f6e0d36ce00"/></to>
    </wire>
    <wire loc="78:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f6e0d4908a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6e0d342080"/></to>
    </wire>
    <wire loc="17:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6e0d342080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6e0d093080"/></to>
    </wire>
    <wire loc="80:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f6e0d35dd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f6e0d342890"/></to>
    </wire>
    <wire loc="13:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f6e0d342890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f6e0d099440"/></to>
    </wire>
    <wire loc="332:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f6e0d43d6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f6e0d4744f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f6e0d441c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f6e0d43aa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f6e0d36f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f6e0d36f800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f6e0d340020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f6e0d098440"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f6e0d098440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f6e0d2d5210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f6e0d099440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f6e0d2d9b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d097020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d0938e0"/></to>
    </wire>
    <wire loc="19:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0d092020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0d09a020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0d09a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0d2dc320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0d09ac70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bd4c5d0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bd4c5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0d161d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d2d3600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d097020"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0bd467c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d2d7dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6e0d2d4370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0bd4d880"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0bd4d880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0d162a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0d2cebe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0bd46020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0bd46020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6e0d165cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d2d7dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d245e70"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f6e0d2d5210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f6e0d243890"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f6e0d2d9b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f6e0d244790"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0d2dc320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0d2450d0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d2413e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d2d3600"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6e0d2425b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f6e0d2d4370"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0d23b5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0d2cebe0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f6e0d241a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0d22cd30"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0d22cd30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f6e0d224550"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0d23a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0d196080"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0d196080"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6e0d190210"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0d238120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0d228860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6e0d21f130"/></to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0d22c500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0d227bc0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f6e0d21fa00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f6e0d6e9580"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f6e0d21d990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f6e0d6e7580"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f6e0d21b990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f6e0d6e5580"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f6e0d219990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f6e0d6e1580"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f6e0d217990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f6e0d6e3580"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6e0d190210"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0d18b2a0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0d17d450"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0bd4b5a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0d22cd30"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0bd4cd70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d160590"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d160590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d0ce400"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d15e370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0bd467c0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0d161d50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0d0cf020"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0d0cf020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bcc43a0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f6e0d165cd0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6e0d15b0d0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0d162a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0d0d0210"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0d0d0210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0bcc5540"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d0ce400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0bcc38b0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f6e0d14a0a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0d228860"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d0cecd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d15e370"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d148020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d0ce400"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0d0b39d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0d0cf7a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0d0cf7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0bcc4b20"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0d0c9b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0d22c500"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0bcc2210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d0cecd0"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6e0bcc29d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6e0bcc8330"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6e0bcc0c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0bc8f3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0d0c9b20"/></to>
    </wire>
    <wire loc="82:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6e0bc8fb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6e0d0b3400"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0bc8e0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0d0b39d0"/></to>
    </wire>
    <wire loc="85:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0bc8ed00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d0b2720"/></to>
    </wire>
    <wire loc="63:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6e0bc813b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6e0bc75e40"/></to>
    </wire>
    <wire loc="64:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6e0bc80020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0cff0020"/></to>
    </wire>
    <wire loc="65:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0bc80c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cff0c90"/></to>
    </wire>
    <wire loc="67:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6e0c297020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6e0bc7e2b0"/></to>
    </wire>
    <wire loc="66:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6e0bc7e2b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cfee4e0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6e0cff0020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0cfc6020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cff0c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cfc8800"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cfee4e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cfc5020"/></to>
    </wire>
    <wire loc="60:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6e0bc74ad0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0d0481d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0bc73720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cff0c90"/></to>
    </wire>
    <wire loc="53:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6e0d0481d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0cfffb00"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6e0cffea40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6e0cff47f0"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6e0cff47f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6e0cfca320"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cffc720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cff0c90"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6e0cffbd60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0cff0020"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f6e0cffaa90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f6e0cff92f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cfcb2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cfa2020"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6e0cfca320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6e0c345e80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6e0cff2880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6e0cfc81d0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6e0cfc81d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6e0c341db0"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6e0cfc6020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0c33fa80"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0cfe46b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0c605550"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0c605550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0c5f7a80"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0cfd75b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0cfbb170"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0cfbb170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0cf9b700"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0cff3b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0cfc9510"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0cfc9510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0c3411d0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cfc5020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cf9c670"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cfc8800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0c340430"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6e0cfe3840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6e0c601660"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6e0c601660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6e0c5f3af0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cfa2020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0c374b80"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0cfc42c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0c33d8b0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f6e0cfab1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f6e0c33ece0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0cfbc0f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0cf9d670"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0cf9d670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c60a660"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0cf9b700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0c374080"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cf9c670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6e0c6076e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6e0cfa7430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6e0cf9a2e0"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6e0cf9a2e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6e0c35f020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0cfb8170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0cf9b080"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0cf9b080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0c606a70"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f6e0c3340f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cfa11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6e0c33c860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6e0cf9e170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f6e0cf9e170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6e0c3ddc90"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c33a690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6e0cf9d020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f6e0cf9d020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6e0c3dca50"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6e0c3364d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6e0c82cb20"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c33ace0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c60a660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c60a660"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c5fcd10"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c339b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c5f8640"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0c338610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0cf10dc0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0cf10dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0cf06970"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f6e0c3351f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0cf94990"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0cf94990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0cf8e020"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0c334d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6e0c374b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f6e0c371d90"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0c606a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0c5f7020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6e0c35f020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6e0c35d400"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f6e0c3ddc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6e0c3d2a20"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0c374080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0c36c2d0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f6e0cfa0d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0c3dd5e0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0c3dd5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f6e0c3d2370"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6e0c6076e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6e0c5f9c50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0cfa11d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c3dfbe0"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0c3dfbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c3d47b0"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f6e0cfa0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0c3de8e0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6e0c3de8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f6e0c3d34d0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f6e0cf9f420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f6e0c3da170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f6e0c3da170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f6e0c3d0020"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f6e0c3dca50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6e0c3d1840"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6e0c371d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cf989e0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cf989e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cf90690"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6e0c3d96b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0c42e220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6e0c42e220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0c42ca10"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6e0c42d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0c362340"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6e0c362340"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6e0c35fd70"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6e0c35fd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0c378ce0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6e0c378ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6e0c372860"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6e0c372860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0cf95600"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6e0cf95600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0cf8f2e0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c3d9020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0c375980"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0c375980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c371690"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c371690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0c411a90"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0c411a90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0c40de20"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c40e950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0cf94300"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0cf94300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0c68e7c0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6e0c68e7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6e0c687020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0cf8ee60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cf20950"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0cf20950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cf07b80"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f6e0cf853f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f6e0cf1bbf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f6e0cf1bbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f6e0cf04740"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6e0cf8c6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6e0c7846c0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6e0cf8c6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6e0c6915c0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6e0c6915c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6e0c68aca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6e0c7846c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6e0c779020"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6e0cf7c2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6e0c781020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6e0c781020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6e0c7798c0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f6e0cf84060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0c781cb0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0c781cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0c778650"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0cf79330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c60a660"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0cf71920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6e0cf78420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6e0c44fa20"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6e0c44fa20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6e0c448a20"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f6e0cf75110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0c451aa0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6e0c451aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0cb42280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0cf78bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f6e0cf67b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f6e0cf69ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f6e0cf6ac20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f6e0cf0c0c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f6e0cf03b40"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f6e0cef7d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6e0ce53220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6e0ce53220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6e0ce4d2e0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6e0cef4060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6e0cd6a370"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6e0cd6a370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd5c1b0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6e0cef3380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f6e0cd67ce0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6e0cd67ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd4e710"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f6e0cef26a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f6e0cd64380"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f6e0cd64380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd44d70"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f6e0cef00e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f6e0cd2b210"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f6e0cd2b210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6e0cc10a30"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6e0ceda1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c8b7e20"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0c8b7e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cbc3950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6e0ced92b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f6e0c8b47b0"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6e0c8b47b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0ced99c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c8b3ae0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c8b3ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0cedba40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c8b5ad0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c8b5ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0cedb120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c8b1160"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c8b1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0cedfb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c8a9870"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c8a9870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0cee63d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c8a7880"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c8a7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0cee6c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c8a60a0"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c8a60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0cee25f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c8aee50"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c8aee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0cede020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c8ad670"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c8ad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6e0ceeb520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f6e0c899500"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6e0c899500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0cee3a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c89ace0"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c89ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0cede8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c8aae50"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c8aae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6e0cedd1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f6e0c8ade50"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6e0c8ade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0cedda70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c8abe50"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c8abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f6e0ced7d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c885a80"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0c885a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cbc3950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f6e0ced7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c8589e0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0c8589e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cbc3950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6e0cee8810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6e0c82cb20"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6e0ceff020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6e0c82bd20"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6e0c82bd20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6e0c810310"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f6e0cecc820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f6e0cecd940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0ce567d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0ce4ea20"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0ce4ea20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0bc0e9d0"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6e0ce4d2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6e0bc0d260"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0bc0e9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0bc07a10"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6e0bc0d260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6e0bc005f0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0bc07a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0bbea510"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f6e0bbfad20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6e0bc052a0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6e0bc052a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6e0bbeada0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0bbfc9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0cdda020"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0cdda020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0cdd45f0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0bbe5020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0bbef1b0"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0bbef1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0bbe4760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0bbee8f0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0bbee8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0bbe3a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0bbedc10"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0bbedc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f6e0d8d9020"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f6e0d8d0570"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f6e0d8d7be0"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f6e0d8ce1f0"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f6e0d8d50c0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f6e0d8cd020"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f6e0d8d45a0"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f6e0d8cdda0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f6e0d8d3a50"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f6e0d8ccb80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f6e0d8d1020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f6e0d8cba20"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f6e0cdb7950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6e0d190210"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f6e0cd696a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd58d70"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f6e0cd689d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd53b70"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f6e0cd6b0e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd62710"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f6e0cd65020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd491b0"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd61930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6e0d756020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd5b480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f6e0d729200"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd56020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f6e0d758020"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd52de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6e0d767020"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd4d930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f6e0d721200"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd47480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f6e0d72b200"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd42020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f6e0d723200"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f6e0cd285a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6e0cd13020"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6e0cd2be30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6e0cc01a70"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0cd13ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f6e0d8d85a0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f6e0cd12da0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f6e0d8c9a20"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd11c20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f6e0d72b200"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f6e0cc0f610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6e0cd02c40"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f6e0cd02c40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6e0cceea30"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f6e0cc00610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6e0cd04e70"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f6e0cd04e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6e0ccf49c0"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f6e0ccf7bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f6e0cce4bc0"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f6e0ccffbc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f6e0cceba30"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f6e0ccfdbc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f6e0cce9a30"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f6e0cd08d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f6e0ccf0a30"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f6e0ccf9bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f6e0cce6a30"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f6e0cd01bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f6e0cceda30"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f6e0ccf6bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f6e0cce3bc0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f6e0ccfbbc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f6e0cce8a30"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f6e0cd03c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f6e0ccefa30"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f6e0ccf8c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f6e0cce5bc0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f6e0cd00bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f6e0cceca30"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f6e0ccfebc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f6e0cceaa30"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f6e0cd09dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f6e0ccf1a30"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f6e0ccfabc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f6e0cce7a30"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c8b4160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c8a8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c8a00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c8a70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c894500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6e0c896500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c8b3490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6e0c89c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c898500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c8a2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6e0c8a30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c8b6a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbc0670"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbc0670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbba920"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c8b1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6e0c8b0490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c89bc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c8b0be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c898ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c89c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c8ab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c89d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c8a0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c89d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c895ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6e0c896ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6e0c8a3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c89f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c899ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c8a6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c894ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6e0c8b5480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6e0c8ae670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c8aa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c8a10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c8a1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c8a80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c8af2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6e0c8ae020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c8b17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c89a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6e0c895500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c8a20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c89f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6e0c8b4e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c8a40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6e0c8af940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c8a4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c89b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c8939b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbb6bb0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbb3020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbb3db0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0cbc3950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cbb7810"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbb2ba0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f6e0cbae020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0cb46770"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6e0cb46770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0cb42280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6e0cbb1400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cb25c40"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0cb25c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0bb0de70"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cbaf080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cb248f0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cb248f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6e0bb092c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0cba6680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0c8dd020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0c8dd020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0bb08440"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0cbaedf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f6e0cba1120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6e0cb42280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0cb3db70"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0bb08440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0cb0f850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6e0bb092c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cb10020"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0bb0de70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cb12430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bb0aaf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bb005d0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bb005d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0c9bc2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cb10020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cab3a10"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6e0bb098d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6e0cb106a0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6e0cb106a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6e0cab2060"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6e0cb0da40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6e0bb08be0"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0baf2a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0cb116b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6e0cb0e690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0bb01860"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0bb01860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c9bd020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0cb0b2a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0bafa020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0bafa020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6e0c9bf4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0cb116b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0cab3250"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0cb0f850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0cab2c50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0cb12430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cab4470"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6e0cab03e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6e0cb0da40"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6e0cab15b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f6e0cb0e690"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0caab480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0cb0b2a0"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f6e0cab0a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0caa0020"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0caa0020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f6e0ca9ac70"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0caabc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f6e0caa82f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6e0ca9b5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6e0ca92150"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0ca9cd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6e0ca93780"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f6e0ca64bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f6e0d6fa580"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f6e0ca62b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f6e0d6f6580"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f6e0ca60b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f6e0d6f4580"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f6e0ca5eb20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f6e0d6ed580"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f6e0ca5cb20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f6e0d6f0580"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f6e0ca69d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f6e0c99b430"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6e0bafa7c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6e0c9be3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6e0bafadd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6e0c9a7530"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6e0c9a7530"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f6e0c99b430"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0baff5a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0caa0020"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0bb00d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9bcad0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9bcad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9afc30"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0c9ba8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0baf2a80"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0c9bc2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0c9b0850"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0c9b0850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0ba83020"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f6e0c9bf4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6e0c9b8060"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0c9bd020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c9b2a80"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0c9b2a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0ba84270"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6e0c9be3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6e0c9b8990"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9afc30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0ba80400"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0c9ae570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0c9ba8a0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9b7e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9afc30"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f6e0c9b7060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0ca9cd10"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f6e0c9b7840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6e0ca9b5e0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0c9af020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0ba837a0"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0ba80cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0c9ae570"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6e0ba7f500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6e0ba870a0"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6e0ba7d7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f6e0c994250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f6e0ca9ac70"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f6e0c990d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f6e0d6fa580"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f6e0c98ecb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f6e0d6f4580"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c878c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c883da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c87bb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c875670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c86ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c875e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c8622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6e0c8642f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c880120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6e0c86a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c8652f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6e0c87ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c879c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c870670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6e0c872e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c874670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c884760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbc0670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c87faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6e0c87e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c869a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c87e870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c865ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c880dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c86be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c879480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c87a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c883750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c86ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c86d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c86b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c863ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6e0c864ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6e0c871670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c86de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c866ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c873670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c862ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6e0c883100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6e0c87b370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c878480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c870e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c874e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c86e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c877670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6e0c881450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c877e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c87d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6e0c87dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6e0c8662f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c867ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c87f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c8672f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6e0c8632f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c871e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c86c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6e0c881aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c880770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c873e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6e0c87d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c872670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c86ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c8607a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c84bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c856da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c84fb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c849670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c842e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c849e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c8352f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6e0c8372f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c854120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6e0c83d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c8392f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6e0c84ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c84cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c843670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6e0c845e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c848670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c857760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbc0670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c852aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6e0c851120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c83ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c851870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c839ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c854dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c83ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c84c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c84e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c856750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c83fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c841670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c83e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c836ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6e0c837ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6e0c844670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c841e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c83aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c847670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c835ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6e0c856100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6e0c84f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c84b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c843e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c848e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c842670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c84a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6e0c855450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c84ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c850020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6e0c850cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6e0c83a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c83bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c852450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c83b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6e0c8362f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c844e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c83f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6e0c855aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c854770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c847e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6e0c850670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c845670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c83de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c8347a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f6e0c80d880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f6e0c802020"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f6e0c802020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f6e0c7fd140"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f6e0c7f9bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f6e0c801c50"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f6e0c801c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f6e0c7e4150"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f6e0c7fc530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6e0c79ba10"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f6e0c7e8540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f6e0c7e9590"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f6e0c7e9590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0c7999e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f6e0c7df910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f6e0c7e6c90"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f6e0c7e6c90"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f6e0c7bca90"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f6e0c7e49f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f6e0c7e8540"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0c7ac020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6e0c7a6530"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6e0c7a6530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0c7a3e50"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0c79f020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f6e0d8fc060"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0c798c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f6e0d745020"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6e0c77d990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6e0c7775e0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f6e0c77f150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f6e0c777d70"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f6e0c7767f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6e0ce53220"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f6e0c768500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f6e0cd6b0e0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6e0c762820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6e0cd6a370"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f6e0c761b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f6e0cd65020"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f6e0c76a880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f6e0cd285a0"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6e0c75f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c6c1c30"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0c6c1c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cbc3950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c75fd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c6c08f0"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c6c08f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbc0670"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6e0c75b6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f6e0c6bf2f0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6e0c6bf2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6e0c75bde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f6e0c6becc0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6e0c6becc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c75a530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c6bd370"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c6bd370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c75ac60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c6bcd00"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c6bcd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c75ce00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c6b5c60"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c6b5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c75e780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c69d7a0"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c69d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c75c550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c6a22f0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c6a22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c7593e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c6b7480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c6b7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c7585e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c6b3e50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c6b3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c757020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c6b2670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c6b2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6e0c759e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f6e0c6b97b0"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6e0c6b97b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c7569c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c69fad0"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c69fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6e0c757890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f6e0c6a02f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6e0c6a02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6e0c756130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f6e0c6a0ad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6e0c6a0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f6e0c74fd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f6e0c691df0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f6e0c691df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f6e0c688550"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c772a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c60a660"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c7709a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6e0c76f7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0c605550"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6e0c763b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6e0c5fd480"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6e0c5fd480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6e0c5ef8b0"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0c7526c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c6b4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c6be020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c6b8c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c6abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c6b2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c69e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6e0c6a6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6e0c6b7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c6ac670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6e0c6aee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c6b1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6e0c6ba370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c6a5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c6baac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c6a2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c6bc060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c6a7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c6b5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c6bf940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c6a9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c6aa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c6a7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6e0c6ad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c6aae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c6a3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c6b0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c69ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6e0c6b8490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c6b4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c6ace50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c6b1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c6ab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c6b3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6e0c6be670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c6b9160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6e0c6b9e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6e0c6a32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c6a4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c6bc6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c6a42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6e0c69f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c6ade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c6a9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c6bd9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c6b0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c6ae670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c6a6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f6e0c68d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f6e0c6877c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6e0c672150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6e0c686020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6e0cd6a370"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f6e0c685380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f6e0cd696a0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f6e0c6846b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f6e0cd689d0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6e0c683a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6e0cd2be30"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6e0c6826e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0c49dd00"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6e0c49dd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6e0cbc3950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c681530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c47aad0"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c47aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c680ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c4976b0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c4976b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6e0c6803a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f6e0c496370"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6e0c496370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c67f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c60a660"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c67e1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6e0c67cd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0c605550"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0c67eb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0cf10dc0"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c6773e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c48fe50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c48fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c677cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c48e670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c48e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c678b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c495160"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c495160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c6756d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c47a2f0"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c47a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6e0c676590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f6e0c47c2f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6e0c47c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6e0c676e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f6e0c47cad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6e0c47cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c674020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c47dad0"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c47dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6e0c6748b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f6e0c49b300"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6e0c49b300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f6e0c6679d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0c5907c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0cdda020"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f6e0c5ea820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6e0c5994e0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f6e0c5ecb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6e0c57ab80"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f6e0c57ab80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6e0c4bf2b0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6e0c5887d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0c4ce150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0c589110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c5492a0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0c5492a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0b9589d0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f6e0c4c8640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6e0c51d830"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6e0c518cd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6e0c549af0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6e0c549af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6e0b9515f0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0c4be690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0c565080"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0c565080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0c561cd0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0b9589d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0b93b360"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f6e0b94bd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6e0b957260"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6e0b957260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6e0b93bbf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6e0b94e9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6e0c565080"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0b938dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0b941020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0b941020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0b936440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0b940760"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0b940760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0b934760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0b93fa80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0b93fa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f6e0c55d0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6e0d190210"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f6e0c513020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f6e0c4c3a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6e0c4b58c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6e0c4ac2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6e0c4ac2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6e0c5887d0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c490c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c49a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c494c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c487e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c48ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c498370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6e0c482670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c47d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6e0c492c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c491c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c488670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6e0c48ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c48d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c49c970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbc0670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c497d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c481a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c496ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c497060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c483e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c491480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c492480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c49b950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c484e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c485670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c483670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c47bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6e0c489670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c485e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c47fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c48b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6e0c494490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c490480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c488e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c48de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c487670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c48f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6e0c49a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6e0c495e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6e0c47f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c480ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c4802f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6e0c47b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c489e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c484670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6e0c49acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c4989c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c48be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6e0c4957b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c48a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c482e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c4797a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f6e0c44d920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f6e0c449940"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6e0c453990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6e0c449080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6e0c429e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6e0c42d020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6e0c428ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0c42a690"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6e0c42a690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0cb42280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6e0c4278f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6e0c44fa20"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c425170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6e0c40e200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6e0c40a550"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c4093f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c40e950"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c409a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6e0c3d0d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6e0c3d96b0"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c3cfb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c3d9020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c3ce2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c60a660"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c3cc170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6e0c3ccb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6e0c37f410"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f6e0c3a0db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f6e0c373800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0c36e580"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6e0c36e580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6e0cb42280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0c35a1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cf9c670"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6e0c28d020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6e0cff0020"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6e0c28dc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cff0c90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="9:SenseC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.AMSenderC" loc="47(SenseAppC.AMSenderC):../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.AMSenderC.SenderC" loc="47(SenseAppC.AMSenderC.SenderC):../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SenseAppC.AMSenderC.SenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da34870"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6e0da34be0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da34870"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6e0da34be0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.AMReceiverC" loc="43(SenseAppC.AMReceiverC):../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f6e0d8be230" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f6e0d8be5d0" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f6e0d8be980" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f6e0d8bed00" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f6e0d8bd0d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f6e0d8bd440" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f6e0d8bd7d0" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f6e0d8bdb60" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f6e0d8bc020" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f6e0d880950" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f6e0d880d20" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f6e0d6c49f0" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f6e0d6c4da0" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f6e0d6c31a0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f6e0d6c3550" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f6e0d6c38c0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6e0d18a460" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6e0d18a460"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f6e0d1469b0" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f6e0d13a910" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f6e0d11b020" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6e0d070cc0" loc="47:../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6e0d069820" loc="47:../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f6e0d05f2e0" loc="43:../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f6e0d046550" loc="45:../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6e0ce0f9c0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6e0ce0f9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6e0cdd6ba0" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6e0cdd6ba0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6e0cdd33b0" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6e0cdd33b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6e0cdd37a0" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6e0cdd37a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6e0cdd1020" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6e0cdd1020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6e0cdd13f0" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f6e0cdd1bf0" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f6e0cdd1bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6e0cddbdc0" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6e0cddbdc0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6e0cdb0600" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6e0cdb0600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6e0cdb09f0" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6e0cdb09f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6e0cdaf210" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6e0cdaf210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6e0cdaf5e0" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0c7ba020" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0c7ba020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6e0c7ba7b0" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0c7ba7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0c59ba50" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0c59ba50"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0c542160" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0c542160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0c511730" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0c511730"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f6e0c511a60" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f6e0c2932c0" loc="43:../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMPacket" ref="0x7f6e0da31020" loc="13:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0da31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0da313a0"/>
        <function-ref name="source" scoped="" ref="0x7f6e0da31530"/>
        <function-ref name="address" scoped="" ref="0x7f6e0da316c0"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0da31850"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0da319e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0da31b70"/>
        <function-ref name="type" scoped="" ref="0x7f6e0da31d00"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0da2b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0da2b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0da2b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0da2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend1" ref="0x7f6e0d9bd650" loc="15:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend1" scoped="" ref="0x7f6e0d9bd650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d9bd9d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d9bdb60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d9bdcf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0d9bde80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d9cd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet1" ref="0x7f6e0d9b3230" loc="17:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet1" scoped="" ref="0x7f6e0d9b3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d9b35b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0d9b3740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d9b38d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d9b3a60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0d9b3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f6e0d9b2a20" loc="19:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6e0d9b2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6e0d9b2da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendData" ref="0x7f6e0d9a15c0" loc="37:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendData" scoped="" ref="0x7f6e0d9a15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0d9a1940"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0d9a1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet2" ref="0x7f6e0d9be020" loc="18:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet2" scoped="" ref="0x7f6e0d9be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d9be3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0d9be530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d9be6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d9be850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0d9be9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend2" ref="0x7f6e0d9cd350" loc="16:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend2" scoped="" ref="0x7f6e0d9cd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d9cd6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d9cd860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d9cd9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0d9cdb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d9cdd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f6e0d9c65b0" loc="14:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0d9c65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0d9c6930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendChangeFreq" ref="0x7f6e0d998380" loc="60:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendChangeFreq" scoped="" ref="0x7f6e0d998380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0d998700"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0d998890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0d9a7b50" loc="20:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d9a7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d9b4020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d9b41b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d9b4340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d9b44d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d9b4660"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d9b47f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d9b4980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d9b1020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d9b4b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d9b4ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d9b4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control1" ref="0x7f6e0da2d470" loc="11:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control1" scoped="" ref="0x7f6e0da2d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0da2d7f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0da2d980"/>
        <function-ref name="start" scoped="" ref="0x7f6e0da2db10"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0da2dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control2" ref="0x7f6e0da32060" loc="12:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control2" scoped="" ref="0x7f6e0da32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0da323e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0da32570"/>
        <function-ref name="start" scoped="" ref="0x7f6e0da32700"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0da32890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f6e0d96e760" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d96e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d96eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6e0d9712b0" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6e0d9712b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6e0d971630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0d970640" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d970640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d9709c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f6e0d968700" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f6e0d968700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d968a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0d96b8b0" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d96b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d96bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f6e0d968020" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f6e0d968020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d9683a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f6e0d968de0" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f6e0d968de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d967180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0d96aa10" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d96aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d96ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f6e0d969be0" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f6e0d969be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d94a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f6e0d93f510" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6e0d93f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6e0d9464d0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6e0d93fa20"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6e0d93fbb0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6e0d93fd40"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6e0d93f890"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6e0d946020"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6e0d9461b0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6e0d946340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0d94ab50" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d94ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d947020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f6e0d92f350" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6e0d92f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6e0d92e340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6e0d92f860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6e0d92f9f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6e0d92fb80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6e0d92f6d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6e0d92fd10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6e0d92e020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6e0d92e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f6e0d92e680" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6e0d92e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6e0d92ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0d931b60" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d931b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d92f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f6e0d8eb5a0" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f6e0d8eb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8eb920"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8ebab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8ebc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8ebdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8ea020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8ea1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8ea340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8ea4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f6e0d8d9020" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f6e0d8d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8d93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8d9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8d96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8d9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8d99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8d9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8d9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8d8020"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f6e0d8e2700" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f6e0d8e2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8e2a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8e2c10"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8e2da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8e1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8e11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f6e0d8c6a20" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f6e0d8c6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8c6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8c5020"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8c51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8c5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8c54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f6e0d8e9aa0" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f6e0d8e9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8e9e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8e8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8e81b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8e8340"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f6e0d8cd020" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f6e0d8cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8cd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8cd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8cd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8cd850"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8cd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f6e0d8c3a20" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f6e0d8c3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8c3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8c2020"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8c21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8c2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8c24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f6e0d8d45a0" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f6e0d8d45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8d4920"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8d4ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8d4c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8d4dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8d3020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8d31b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8d3340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8d34d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f6e0d8ecb10" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f6e0d8ecb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8f4020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8f41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8f4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8f44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8f4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8f47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8f4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8f4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8f4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f6e0d8c9a20" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f6e0d8c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8c9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8c7020"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8c71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8c7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8c74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f6e0d8cf3e0" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f6e0d8cf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8cf760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8cf8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8cfa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8cfc10"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8cfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f6e0d8d85a0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f6e0d8d85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8d8a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8d8bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8d8d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8d7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8d71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8d7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8d74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8d7660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f6e0d8e1700" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f6e0d8e1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8e1a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8e1c10"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8e1da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8db020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8db1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f6e0d8c5a20" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f6e0d8c5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8c5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8c4020"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8c41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8c4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8c44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f6e0d8d7be0" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f6e0d8d7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8d6020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8d61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8d6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8d64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8d6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8d67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8d6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8d6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8d6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f6e0d8e8890" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f6e0d8e8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8e8c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8e8da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8e3020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8e31b0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f6e0d8fc060" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f6e0d8fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d8fc3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d8fc570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8fc700"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d8fc890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8fca20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8fcbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d8fcd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8fb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d8fb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d8fb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d8fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f6e0d8cdda0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f6e0d8cdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8cc180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8cc310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8cc4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8cc630"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8cc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f6e0d8f30c0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f6e0d8f30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8f3440"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8f35d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8f3760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8f38f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8f3a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8f3c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8f3da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8eb020"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f6e0d8d3a50" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f6e0d8d3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8d3dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8d2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8d21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8d2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8d24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8d2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8d27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8d2980"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8d2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f6e0d8dc6d0" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f6e0d8dc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8dca50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8dcbe0"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8dcd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8e2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8e21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f6e0d8c7a20" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f6e0d8c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8c7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8c6020"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8c61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8c6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8c64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f6e0d8e5cf0" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f6e0d8e5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8e90a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8e9230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8e93c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8e9550"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8e96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f6e0d8ce1f0" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f6e0d8ce1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8ce570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8ce700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8ce890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8cea20"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8cebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f6e0d8c4a20" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f6e0d8c4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8c4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8c3020"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8c31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8c3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8c34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f6e0d8d50c0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f6e0d8d50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8d5440"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8d55d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8d5760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8d58f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8d5a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8d5c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8d5da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8d4020"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f6e0d8db6c0" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f6e0d8db6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d8dba40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d8dbbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8dbd60"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d8da020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8da1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8da340"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d8da4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8da660"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d8da7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d8da980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d8dab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f6e0d8ccb80" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f6e0d8ccb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8cb020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8cb1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8cb340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8cb4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f6e0d8caa20" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f6e0d8caa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8cada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d8c9020"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8c91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8c9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8c94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d8c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f6e0d8cba20" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f6e0d8cba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8ca020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8ca1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8ca340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8ca4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f6e0d8d0570" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f6e0d8d0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8d08f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d8d0a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8d0c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d8d0da0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f6e0d8d1020" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f6e0d8d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8d13a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8d1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8d16c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8d1850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8d19e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8d1b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8d1d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8d0020"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f6e0d88a2f0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6e0d88a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d88a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f6e0d88bc20" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f6e0d88bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d88a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f6e0d88a940" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6e0d88a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d88acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f6e0d88b5b0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d88b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d88b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6e0d88dc80" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d88dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d88c0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d88c230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d88c3c0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d88c550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d88c6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d88c870"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d88ca00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d88cb90"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d88cd20"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d88b020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d88b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f6e0d8832f0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6e0d8832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d883670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f6e0d884c20" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f6e0d884c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d883020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f6e0d883940" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6e0d883940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d883cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f6e0d8845b0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d8845b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d884950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6e0d886c80" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d886c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d8850a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d885230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8853c0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d885550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8856e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d885870"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d885a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d885b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d885d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d884020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d8841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d837a90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d837a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d837e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d836020"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8361b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d836340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8364d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d836660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d87e9d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d87e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d87ed50"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d838020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8381b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d838340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8384d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d838660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8387f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d838980"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d838b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d833020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d833020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d838de0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d838de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d837180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d837310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8374a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d837630"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8377c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d836930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d836930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d836cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d836e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d834020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d8341b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d834340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8344d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d834660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8347f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d834980"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d834b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d834ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d82e160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d82e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d82e4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d82e670"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d82e800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d82e990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d82eb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d82ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d830020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d830020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8303a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d830530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8306c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d830850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8309e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d830b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d830d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d82f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d82f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d82c7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d82c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d82cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d82f480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d82f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d82f800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d82f990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d82fb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d82fcb0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d82fe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d82d020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d82d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d82d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d82d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d82d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d82d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d82d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d82db70"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d82dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d82c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d82c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d82c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d82c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d8277a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d8277a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d827b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d827cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d827e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d826020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8261b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d826340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d8296d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d8296d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d829a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d829be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d829d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d828020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8281b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d828340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8284d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d828660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8287f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d825c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d825c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d823020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d828ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d828ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d828e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d827020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8271b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d827340"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d826610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d826610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d826990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d826b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d826cb0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d826e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d825020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8251b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d825340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8254d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d825660"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d8257f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d825980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d81fcb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d81fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d81e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d81e230"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d81e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d81e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d81e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d81e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d821b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d821b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d820020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8201b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d820340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8204d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d820660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8207f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d820980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d820b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d820ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d81c2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d81c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d81c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d81f020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d81f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d81f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d81f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d81f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d81f850"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d81f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d81eb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d81eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d81d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d81d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d81d340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d81d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d81d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d81d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d81d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d81db10"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d81dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d81de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d81c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d8172f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d8172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d817670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d817800"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d817990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d817b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d817cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d817e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d819220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d819220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8195a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d819730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8198c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d819a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d819be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d819d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d818020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8181b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d818340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d8157a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d8157a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d815b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d818610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d818610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d818990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d818b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d818cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d818e40"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d817020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d816160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d816160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d8164e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d816670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d816800"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d816990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d816b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d816cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d816e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d815020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d8151b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d815340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d8154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d80f7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d80f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d80fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d80fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d80fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d80e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d80e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d80e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d8116d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d8116d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d811a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d811be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d811d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d810020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d8101b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d810340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d8104d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d810660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d8107f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d80dc50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d80dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d80c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d810ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d810ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d810e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d80f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d80f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d80f340"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d80f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d80e610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d80e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d80e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d80eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d80ecb0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d80ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d80d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d80d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d80d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d80d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d80d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d80d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d80d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d808cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d808cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8070a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d807230"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d8073c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d807550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d8076e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d807870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d80ab30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d80ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d809020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d8091b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d809340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d8094d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d809660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d8097f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d809980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d809b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d809ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d8052f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d8052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d805670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d808020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d808020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d8083a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d808530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d8086c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d808850"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d8089e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d807b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d807b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d806020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d8061b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d806340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d8064d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d806660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d8067f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d806980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d806b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d806ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d806e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d805020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d7ff2f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d7ff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d7ff670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d7ff800"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d7ff990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d7ffb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d7ffcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d7ffe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d801220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d801220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d8015a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d801730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d8018c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d801a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d801be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d801d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d800020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d8001b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d800340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d7fd7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d7fd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7fdb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d800610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d800610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d800990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d800b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d800cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d800e40"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d7fe160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d7fe160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d7fe4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d7fe670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d7fe800"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7fe990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d7feb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d7fecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d7fee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d7fd020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d7fd1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d7fd340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d7fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d7f87a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d7f87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d7f8b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d7f8cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d7f8e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d7f7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d7f71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d7f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d7fa6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d7fa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d7faa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d7fabe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d7fad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d7f9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d7f91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d7f9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d7f94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d7f9660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d7f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d7f6c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d7f6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d7f9ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d7f9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d7f9e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d7f8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d7f81b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d7f8340"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d7f7610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d7f7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d7f7990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d7f7b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d7f7cb0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7f7e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d7f6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d7f61b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d7f6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d7f64d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d7f6660"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d7f67f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d7f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0d7f0cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0d7f0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d7ef0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0d7ef230"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0d7ef3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d7ef550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d7ef6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0d7ef870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6e0d7f3b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6e0d7f3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0d7f1020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0d7f11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d7f1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0d7f14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0d7f1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d7f17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0d7f1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0d7f1b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0d7f1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6e0d7ed2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6e0d7ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7ed670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6e0d7f0020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6e0d7f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0d7f03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0d7f0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0d7f06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0d7f0850"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6e0d7efb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0d7efb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d7ee020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d7ee1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d7ee340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7ee4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d7ee660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d7ee7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d7ee980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d7eeb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d7eeca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d7eee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d7ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f6e0d7e7240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f6e0d7e7240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7e75c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f6e0d7eba90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f6e0d7eba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7ebe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f6e0d7e8260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f6e0d7e8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7e85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f6e0d7e89f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f6e0d7e89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d7e8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f6e0db4c4c0" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6e0db4c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6e0db4c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f6e0de603b0" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f6e0de603b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f6e0de60730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f6e0de608c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f6e0de60a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f6e0dc88bc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f6e0dc88bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6e0ddc4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f6e0d948b40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6e0d948b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6e0d7b3b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6e0d7b31b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6e0d7b3340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6e0d7b34d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6e0d7b3020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6e0d7b3660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6e0d7b37f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6e0d7b3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f6e0d7a4dc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6e0d7a4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d7a3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6e0d7b4590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6e0d7b4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6e0d7b4910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f6e0d7a46c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f6e0d7a46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d7a4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f6e0d7b4c00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6e0d7b4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d7a4020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6e0d7a41b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6e0d7a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6e0df38410" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0df38410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0df38790"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0df38920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6e0dec93a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6e0dec93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0dec9720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6e0dec98b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6e0dec9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6e0da72040" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f6e0da72040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0da723c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0da72550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f6e0da6e490" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f6e0da6e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f6e0da6e810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f6e0da6e9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f6e0da6eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6e0da74140" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6e0da74140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0da744c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6e0da74650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6e0da747e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6e0d972590" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d972590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d972910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d972aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d972c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d972dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d798020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7981b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d798340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d798980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7984d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d798660"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d7987f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f6e0d78c7b0" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f6e0d78c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d78cb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d78ccc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d78ce50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d792020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d792340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7924d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d792660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0d7978d0" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d7978d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d797c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f6e0d792980" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f6e0d792980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d792d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d791020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d7911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d791340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d791660"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7917f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d791980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6e0d794020" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d794020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d7943a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d794530"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d7946c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d794850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d7949e0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d794b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d794d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d7934d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d793020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d7931b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d793340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f6e0d791ca0" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f6e0d791ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d78b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d78b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d78b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d78b550"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d78b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d78b870"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d78ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d78bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f6e0d76f360" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f6e0d76f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d76f6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d76f870"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d76fa00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d76fb90"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d76fd20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d76e020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d76e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d76e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f6e0d76e6a0" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f6e0d76e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d76ea20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d76ebb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d76ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d76d020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d76d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d76d340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d76d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d76d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f6e0d76cc40" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d76cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d76b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f6e0d76d9c0" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f6e0d76d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d76dd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d76c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d76c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d76c340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d76c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d76c660"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d76c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d76c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6e0d756020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6e0d756020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7563a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d756530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7566c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d756850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7569e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d756b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d756d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d755020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d755340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d755660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d755a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d755c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6e0d741020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6e0d741020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d741530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7416c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d741850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7419e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d741b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d741d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d740020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d740340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d740660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d740a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d740c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f6e0d6f8560" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f6e0d6f8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6f88e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6f8a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6f8c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6f8d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6f7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6f71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6f7340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6f74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6f7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6f77f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6f7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6f7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6f7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6f6020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f6e0d6d3570" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f6e0d6d3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6d38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6d3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6d3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6d3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6d2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6d2340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6d24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6d2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6d27f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6d2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6d2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6d2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6d1020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f6e0d6f6580" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f6e0d6f6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6f6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6f6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6f6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6f6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6f5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6f51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6f5340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6f54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6f5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6f57f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6f5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6f5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6f5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6f4020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f6e0d73d020" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f6e0d73d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d73d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d73d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d73d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d73d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d73d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d73db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d73dd00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d73c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d73c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d73c340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d73c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d73c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d73c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d73ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d73cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f6e0d729200" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f6e0d729200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d729580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d729710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7298a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d729a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d729bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d729d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d728020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d728340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7284d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d728660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7287f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d728980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d728c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d728da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f6e0d714200" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f6e0d714200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d714580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d714710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d714a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d714bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d714d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d713020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7131b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d713340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7134d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d713660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7137f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d713980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d713c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d713da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f6e0d704200" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f6e0d704200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d704580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d704710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7048a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d704a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d704bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d704d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d703020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d703340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7034d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d703660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d703980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d703c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d703da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f6e0d6f0580" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f6e0d6f0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6f0900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6f0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6f0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6f0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6ee340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6ee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6ee660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6ee7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6ee980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6eeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6eeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6ed020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f6e0d6df570" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f6e0d6df570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6df8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6dfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6dfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6dfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6de020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6de340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6de4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6de660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6de7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6de980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6deb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6deca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6dd020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f6e0d6cb580" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f6e0d6cb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6cb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6cba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6cbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6cbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6ca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6ca340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6ca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6ca660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6ca7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6ca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6cab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6caca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6c9020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6e0d750020" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6e0d750020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7503a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d750530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7506c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d750850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7509e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d750b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d750d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d74f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d74f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d74f340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d74f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d74f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d74f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d74fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d74fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f6e0d6ed580" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f6e0d6ed580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6ed900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6eda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6edc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6eddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6ec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6ec340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6ec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6ec660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6ec980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6ecb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6ecca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6eb020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6e0d74b020" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6e0d74b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d74b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d74b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d74b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d74b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d74b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d74bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d74bd00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d74a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d74a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d74a340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d74a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d74a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d74a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d74aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d74ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f6e0d737020" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f6e0d737020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d737530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7376c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d737850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d737b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d737d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d736020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d736340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d736660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d736a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d736c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f6e0d723200" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f6e0d723200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d723580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d723710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7238a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d723a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d723bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d723d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d722020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7221b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d722340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7224d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d722660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7227f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d722980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d722c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d722da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f6e0d70e200" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f6e0d70e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d70e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d70e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d70e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d70ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d70ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d70ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d70d020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d70d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d70d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d70d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d70d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d70d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d70d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d70dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d70dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f6e0d6fe200" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f6e0d6fe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6fe580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6fe710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6fe8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6fea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6febc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6fed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6fd020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6fd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6fd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6fd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6fd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6fd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6fd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6fdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6e0d75a020" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6e0d75a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d75a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d75a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d75a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d75a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d75a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d75ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d75ad00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d759020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d759340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d759660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d759a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d759c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6e0d745020" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6e0d745020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7454a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d745630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7457c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d745950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d745ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d745c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d745e00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d744020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d744340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d744660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d744a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d744c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f6e0d731020" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f6e0d731020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d731530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7316c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d731850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d731b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d731d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d730020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d730340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d730660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d730a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d730c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f6e0d6fa580" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f6e0d6fa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6fa900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6faa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6fac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6fadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6f9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6f91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6f9340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6f94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6f9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6f97f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6f9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6f9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6f9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6f8020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f6e0d6d9570" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f6e0d6d9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6d98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6d9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6d9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6d9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6d8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6d8340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6d84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6d8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6d87f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6d8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6d8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6d8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6d7020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f6e0d6cd570" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f6e0d6cd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6cd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6cda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6cdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6cdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6cc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6cc340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6cc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6cc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6cc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6cc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6ccb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6ccca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6cb020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f6e0d6e5580" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f6e0d6e5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6e5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6e5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6e5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6e5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6e4340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6e44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6e4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6e47f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6e4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6e4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6e4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6e3020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f6e0d72d020" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f6e0d72d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d72d5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d72d730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d72d8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d72da50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d72dbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d72dd70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d72c020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d72c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d72c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d72c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d72c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d72c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d72c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d72cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d72cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f6e0d718200" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f6e0d718200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d718580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d718710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7188a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d718a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d718bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d718d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d717020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7171b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d717340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7174d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d717660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7177f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d717980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d717c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d717da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f6e0d708200" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f6e0d708200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d708580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d708710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7088a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d708a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d708bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d708d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d707020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d707340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7074d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d707660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d707980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d707c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d707da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f6e0d6d7570" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f6e0d6d7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6d78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6d7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6d7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6d7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6d6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6d6340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6d64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6d6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6d67f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6d6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6d6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6d6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6d5020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f6e0d6eb570" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f6e0d6eb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6eb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6eba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6ebc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6ebda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6ea340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6ea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6ea660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6ea7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6ea980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6eab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6eaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6e9020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6e0d754020" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6e0d754020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d754530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7546c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d754850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7549e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d754b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d754d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d753020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d753340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d753660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d753a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d753c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6e0d73f020" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6e0d73f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d73f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d73f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d73f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d73f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d73f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d73fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d73fd00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d73e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d73e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d73e340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d73e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d73e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d73e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d73ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d73ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f6e0d70c200" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f6e0d70c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d70c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d70c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d70c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d70ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d70cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d70cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d70b020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d70b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d70b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d70b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d70b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d70b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d70b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d70bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d70bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f6e0d73b020" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f6e0d73b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d73b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d73b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d73b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d73b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d73b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d73bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d73bd00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d73a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d73a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d73a340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d73a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d73a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d73a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d73aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d73ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f6e0d727200" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f6e0d727200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d727580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d727710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7278a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d727a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d727bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d727d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d726020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7261b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d726340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7264d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d726660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7267f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d726980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d726c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d726da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f6e0d712200" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f6e0d712200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d712580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d712710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7128a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d712a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d712bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d712d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d711020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7111b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d711340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7114d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d711660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d711980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d711c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d711da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f6e0d702200" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f6e0d702200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d702580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d702710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7028a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d702a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d702bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d702d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d701020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d701340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7014d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d701660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d701980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d701c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d701da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f6e0d6e7580" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f6e0d6e7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6e7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6e7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6e7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6e7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6e6340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6e64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6e6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6e67f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6e6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6e6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6e6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6e5020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6e0d767020" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6e0d767020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d767530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7676c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d767850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d767b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d767d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d766020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d766340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d766660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d766a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d766c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6e0d749020" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6e0d749020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7493a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d749530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7496c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d749850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7499e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d749b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d749d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d748020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d748340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d748660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d748a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d748c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f6e0d735020" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f6e0d735020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d735530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7356c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d735850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d735b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d735d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d734020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d734340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d734660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d734a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d734c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f6e0d721200" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f6e0d721200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d721580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d721710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7218a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d721a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d721bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d721d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d720020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7201b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d720340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7204d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d720660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7207f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d720980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d720c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d720da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f6e0d6e3580" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f6e0d6e3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6e3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6e3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6e3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6e3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6e2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6e21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6e2340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6e24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6e2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6e27f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6e2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6e2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6e2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6e1020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f6e0d6dd570" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f6e0d6dd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6dd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6dda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6ddc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6ddda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6dc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6dc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6dc340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6dc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6dc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6dc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6dc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6dcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6dcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6db020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f6e0d6d1570" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f6e0d6d1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6d18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6d1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6d1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6d1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6d0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6d0340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6d04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6d0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6d07f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6d0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6d0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6d0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6cf020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f6e0d71c200" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f6e0d71c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d71c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d71c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d71c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d71ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d71cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d71cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d71b020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d71b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d71b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d71b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d71b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d71b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d71b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d71bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d71bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f6e0d6e1580" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f6e0d6e1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6e1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6e1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6e1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6e1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6e0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6e0340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6e04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6e0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6e07f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6e0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6e0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6e0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6df020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6e0d758020" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6e0d758020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d758530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7586c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d758850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7589e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d758b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d758d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d757020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d757340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d757660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d757a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d757c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6e0d743020" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6e0d743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7433a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d743530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7436c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d743850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d743b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d743d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d742020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d742340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d742660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d742a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d742c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f6e0d72f020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f6e0d72f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d72f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d72f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d72f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d72f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d72f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d72fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d72fd00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d72e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d72e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d72e340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d72e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d72e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d72e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d72ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d72ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f6e0d6e9580" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f6e0d6e9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6e9900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6e9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6e9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6e9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6e8340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6e84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6e8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6e87f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6e8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6e8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6e8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6e7020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f6e0d6d5570" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f6e0d6d5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6d58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6d5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6d5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6d5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6d4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6d41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6d4340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6d44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6d4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6d47f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6d4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6d4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6d4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6d3020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f6e0d72b200" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f6e0d72b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d72b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d72b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d72b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d72ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d72bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d72bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d72a020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d72a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d72a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d72a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d72a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d72a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d72a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d72ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d72ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f6e0d716200" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f6e0d716200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d716580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d716710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7168a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d716a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d716bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d716d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d715020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7151b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d715340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7154d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d715660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7157f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d715980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d715c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d715da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f6e0d706200" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f6e0d706200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d706580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d706710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d706a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d706bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d706d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d705020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7051b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d705340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7054d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d705660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7057f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d705980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d705c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d705da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6e0d752020" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6e0d752020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7523a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d752530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7526c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d752850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7529e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d752b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d752d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d751020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7511b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d751340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7514d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d751660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7517f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d751a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d751c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f6e0d70a200" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f6e0d70a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d70a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d70a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d70a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d70aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d70abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d70ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d709020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d709340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7094d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d709660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d709980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d709c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d709da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6e0d74d020" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6e0d74d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d74d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d74d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d74d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d74d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d74d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d74db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d74dd00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d74c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d74c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d74c340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d74c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d74c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d74c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d74ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d74cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f6e0d739020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f6e0d739020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d739530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7396c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d739850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d739b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d739d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d738020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d738340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d738660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d738a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d738c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f6e0d725200" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f6e0d725200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d725580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d725710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7258a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d725a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d725bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d725d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d724020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7241b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d724340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7244d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d724660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7247f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d724980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d724c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d724da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f6e0d710200" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f6e0d710200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d710580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d710710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7108a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d710a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d710bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d710d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d70f020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d70f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d70f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d70f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d70f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d70f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d70f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d70fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d70fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f6e0d700200" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f6e0d700200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d700580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d700710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7008a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d700a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d700bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d700d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6ff020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6ff1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6ff340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6ff4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6ff660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6ff7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6ff980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6ffc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6ffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6e0d75c020" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6e0d75c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d75c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d75c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d75c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d75c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d75c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d75cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d75cd00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d75b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d75b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d75b340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d75b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d75b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d75b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d75ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d75bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6e0d747020" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6e0d747020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d747530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7476c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d747850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7479e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d747b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d747d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d746020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d746340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d746660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d746a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d746c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f6e0d733020" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f6e0d733020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d7333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d733530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d7336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d733850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d7339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d733b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d733d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d732020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d7321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d732340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d7324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d732660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d7327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d732a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d732c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f6e0d71e200" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f6e0d71e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d71e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d71e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d71e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d71ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d71ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d71ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d71d020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d71d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d71d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d71d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d71d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d71d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d71d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d71dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d71dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f6e0d6f2560" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f6e0d6f2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6f28e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6f2a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6f2c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6f2d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6f1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6f1340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6f14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6f1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6f17f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6f1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6f1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6f1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6f0020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f6e0d6db570" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f6e0d6db570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6db8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6dba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6dbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6dbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6da020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6da1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6da340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6da4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6da660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6da7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6da980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6dab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6daca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6d9020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f6e0d6f4580" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f6e0d6f4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6f4900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6f4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6f4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6f4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6f3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6f31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6f3340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6f34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6f3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6f37f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6f3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6f3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6f3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6f2020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f6e0d71a200" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f6e0d71a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d71a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d71a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d71a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d71aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d71abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d71ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d719020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d7191b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d719340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d7194d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d719660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d7197f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d719980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d719c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d719da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f6e0d6cf570" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f6e0d6cf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6cf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6cfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6cfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6cfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6ce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6ce340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6ce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6ce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6ce7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6ce980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6ceb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6ceca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6cd020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f6e0d6c9580" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f6e0d6c9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6c9900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6c9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6c9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6c9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6c8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6c81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6c8340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6c84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6c8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6c87f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6c8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6c8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6c8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6c7020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f6e0d6fc1f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f6e0d6fc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6fc970"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d6fcb00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6fcc90"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6fce20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6fb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6fb340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6fb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6fb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d6fb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6fb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d6fbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6fbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6fa020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d69e6d0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d69e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d69ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d69ebe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d69ed70"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d69c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d69c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d69c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d69c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d69c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d69c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d69c980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d69cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d69cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d69ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d69b120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d69b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d698100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d698100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d698480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d698610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6987a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d698930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d698ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d698c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d698de0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d697020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d697340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d697660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d697a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d697c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d694d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d694d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6930e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d693270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d693400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d693590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d693720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6938b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d693a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d693bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d693d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d692020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d692340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d692760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d68f740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d68f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d68fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d68fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d68fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d68e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d68e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d68e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d68e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d68e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d68e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d68e980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d68eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d68eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d68ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d68d120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d68d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d68a100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d68a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d68a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d68a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d68a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d68a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d68aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d68ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d68ade0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d689020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6891b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d689340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6894d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d689660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d689a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d689c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d686d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d686d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6850e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d685270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d685400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d685590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d685720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6858b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d685a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d685bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d685d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d684020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6841b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d684340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6844d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d684760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d681740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d681740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d681ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d681c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d681de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d680020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6801b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d680340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6804d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d680660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6807f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d680980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d680b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d680ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d680e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d67f120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d67f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d67c100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d67c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d67c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d67c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d67c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d67c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d67cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d67cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d67cde0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d67b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d67b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d67b340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d67b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d67b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d67b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d67ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d67bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d677d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d677d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6760e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d676270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d676400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d676590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d676720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6768b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d676a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d676bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d676d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d675020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6751b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d675340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6754d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d675760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d672740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d672740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d672ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d672c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d672de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d671020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6711b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d671340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6714d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d671660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6717f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d671980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d671b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d671ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d671e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d670120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d66d100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d66d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d66d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d66d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d66d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d66d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d66dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d66dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d66dde0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d66c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d66c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d66c340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d66c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d66c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d66c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d66ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d66cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d669d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d669d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6680e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d668270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d668400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d668590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d668720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6688b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d668a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d668bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d668d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d667020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d667340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d667760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d664860" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d664860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d664be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d664d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d663020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d6631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d663340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d663660"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d6637f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d663980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d663b10"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d663ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d663e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d662020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d6622b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d662440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d65f270" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d65f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d65f5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d65f780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d65f910"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d65faa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d65fc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d65fdc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d65e020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d65e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d65e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d65e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d65e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d65e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d65e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d65ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d65eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d65bd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d65bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d65a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d65a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d65a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d65a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d65a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d65a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d65aa40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d65abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d65ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d659020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6591b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d659340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6594d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d659760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6598f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d656740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d656740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d656ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d656c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d656de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d654020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d654340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6544d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d654660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6547f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d654980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d654b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d654ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d654e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d653120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d650100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d650100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d650480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d650610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6507a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d650930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d650ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d650c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d650de0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d64f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d64f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d64f340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d64f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d64f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d64f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d64fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d64fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d64cd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d64cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d64b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d64b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d64b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d64b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d64b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d64b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d64ba40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d64bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d64bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d64a020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d64a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d64a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d64a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d64a760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d64a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d647740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d647740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d647ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d647c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d647de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d646020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6461b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d646340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6464d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d646660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d646980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d646b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d646ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d646e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d645120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d642100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d642100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d642480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d642610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6427a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d642930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d642ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d642c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d642de0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d641020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d641340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d641660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d641a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d641c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d63ed10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d63ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d63d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d63d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d63d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d63d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d63d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d63d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d63da40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d63dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d63dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d63c020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d63c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d63c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d63c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d63c760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d63c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d639740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d639740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d639ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d639c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d639de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d638020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6381b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d638340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6384d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d638660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6387f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d638980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d638b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d638ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d638e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d637120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6372b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d634100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d634100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d634480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d634610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6347a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d634930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d634ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d634c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d634de0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d633020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6331b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d633340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6334d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d633660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6337f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d633a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d633c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d630d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d630d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d62e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d62e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d62e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d62e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d62e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d62e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d62ea40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d62ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d62ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d62d020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d62d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d62d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d62d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d62d760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d62d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d62aa60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d62aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d62ade0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d629020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6291b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d629340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d6294d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d629660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6297f0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d629980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d629b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d629ca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d629e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d628020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6281b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d628440"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6285d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d625460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d625460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6257e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d625970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d625b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d625c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d625e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d624020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d6241b0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d624340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6244d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d624660"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6247f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d624980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d624b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d624da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d623020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d621e00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d621e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6201c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d620350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6204e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d620670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d620800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d620990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d620b20"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d620cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d620e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d61f020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d61f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d61f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d61f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d61f760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d61f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d61c740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d61c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d61cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d61cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d61cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d61b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d61b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d61b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d61b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d61b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d61b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d61b980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d61bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d61bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d61be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d61a120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d61a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d617100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d617100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d617480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d617610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6177a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d617930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d617ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d617c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d617de0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d616020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6161b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d616340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6164d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d616660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6167f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d616a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d616c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d613d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d613d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6120e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d612270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d612400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d612590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d612720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6128b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d612a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d612bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d612d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d611020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6111b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d611340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6114d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d611760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6118f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d60e740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d60e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d60eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d60ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d60ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d60d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d60d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d60d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d60d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d60d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d60d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d60d980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d60db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d60dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d60de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d60c120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d60c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d608100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d608100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d608480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d608610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d6087a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d608930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d608ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d608c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d608de0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d607020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d6071b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d607340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6074d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d607660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6077f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d607a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d607c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d604d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d604d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d6030e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d603270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d603400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d603590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d603720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d6038b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d603a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d603bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d603d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d602020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d6021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d602340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d6024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d602760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d6028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5ff740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5ffac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5ffc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5ffde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5fe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5fe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5fe4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5fe660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5fe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5fe980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5feb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5feca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5fee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5fd120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5fa100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5fa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5fa480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5fa610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5fa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5fa930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5faac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5fac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5fade0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5f9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5f91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5f9340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5f94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5f9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5f97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5f9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5f9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5f6d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5f6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5f50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5f5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5f5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5f5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5f5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5f58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5f5a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5f5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5f5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5f4020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5f41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5f4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5f44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5f4760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5f48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5f1740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5f1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5f1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5f1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5f1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5f01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5f0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5f04d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5f0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5f07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5f0980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5f0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5f0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5f0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5ef120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5ec100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5ec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5ec480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5ec610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5ec7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5ec930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5ecac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5ecc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5ecde0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5eb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5eb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5eb340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5eb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5eb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5eb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5eba80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5ebc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5e8d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5e8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5e60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5e6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5e6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5e6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5e6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5e68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5e6a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5e6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5e6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5e5020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5e51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5e5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5e54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5e5760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5e58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5e2740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5e2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5e2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5e2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5e11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5e1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5e14d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5e1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5e17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5e1980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5e1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5e1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5e1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5e0120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5dd100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5dd480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5dd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5dd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5dd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5ddac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5ddc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5ddde0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5dc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5dc340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5dc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5dc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5dc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5dca80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5d9d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5d9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5d80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5d8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5d8400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5d8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5d8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5d88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5d8a40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5d8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5d8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5d7020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5d7760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5d4740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5d4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5d4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5d4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5d4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5d34d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5d3980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5d3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5d3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5d3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5d2120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5cf100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5cf480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5cf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5cf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5cf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5cfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5cfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5cfde0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5ce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5ce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5ce340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5ce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5ce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5ce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5cea80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5cec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5cbd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5cbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5ca0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5ca270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5ca400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5ca590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5ca720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5ca8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5caa40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5cabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5cad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5c9020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5c9760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5c6740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5c6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5c6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5c6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5c6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5c51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5c5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5c54d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5c5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5c57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5c5980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5c5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5c5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5c5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5c4120"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5c1100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5c1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5c1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5c17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5c1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5c1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5c1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5c1de0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5bf340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5bfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6e0d5bcd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6e0d5bcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d5bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d5bb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5bb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d5bb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5bb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d5bba40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5bbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d5bbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5ba020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d5ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d5ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5ba760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d5ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0d5432f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0d5432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d543670"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d543800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d543990"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d543b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d543cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d543e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d542020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d542340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d5424d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d542660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d5427f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d542980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d542c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d542da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0d554020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0d554020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d5543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d554530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d554850"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d554b70"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d554d00"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d543020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0d53fde0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0d53fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d53e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d53e310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d53e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d53e630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d53e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d53e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d53eae0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d53ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d53ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d53d020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d53d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d53d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d53d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d53d760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d53d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0d540b90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0d540b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d53f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d53f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d53f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d53f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d53f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d53f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d53f980"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d53fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0d53a930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0d53a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d53acb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d53ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d539020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d5391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d539340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d5394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d539660"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5397f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d539980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d539b10"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d539ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d539e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d538020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d5382b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d538440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0d53b710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0d53b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d53ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d53bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d53bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d53a020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d53a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d53a340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d53a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d53a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0d52ec70" loc="46:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0d52ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0d52a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0d52a1b0"/>
        <function-ref name="start" scoped="" ref="0x7f6e0d52a340"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d52a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6e0d52aca0" loc="47:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0d52aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d5290a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d529230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d5293c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0d529550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d5296e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6e0d528630" loc="49:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0d528630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d5289b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0d528b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d528cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d528e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0d527020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0d528020" loc="48:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0d528020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0d5283a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0d51de40" loc="53:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d51de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d5251e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d525370"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d525500"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d525690"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d525820"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d5259b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d525b40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d5241b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d525cd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d525e60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d524020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6e0d51d4c0" loc="51:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0d51d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0d51d840"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0d51d9d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0d51db60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6e0d5272d0" loc="50:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0d5272d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0d527650"/>
        <function-ref name="source" scoped="" ref="0x7f6e0d5277e0"/>
        <function-ref name="address" scoped="" ref="0x7f6e0d527970"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0d527b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0d527c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0d527e20"/>
        <function-ref name="type" scoped="" ref="0x7f6e0d526020"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0d5261b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0d526340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0d5264d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0d526660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6e0d4bbd90" loc="54:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6e0d4bbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d4ba180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d4ba310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d4ba4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0d4ba630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d4ba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6e0d4baa50" loc="55:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6e0d4baa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0d4badd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6e0d51cb40" loc="47:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0d51cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d4bf020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d4bf1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d4bf340"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0d4bf4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d4bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6e0d4bc720" loc="50:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0d4bc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d4bcaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0d4bcc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d4bcdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d4bb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0d4bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0d4bf9e0" loc="48:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0d4bf9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0d4bfd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6e0d4bb400" loc="51:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0d4bb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0d4bb780"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0d4bb910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0d4bbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6e0d4be020" loc="49:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0d4be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0d4be3a0"/>
        <function-ref name="source" scoped="" ref="0x7f6e0d4be530"/>
        <function-ref name="address" scoped="" ref="0x7f6e0d4be6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0d4be850"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0d4be9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0d4beb70"/>
        <function-ref name="type" scoped="" ref="0x7f6e0d4bed00"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0d4bc020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0d4bc1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0d4bc340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0d4bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0d4b54e0" loc="50:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0d4b54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0d4b5860"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0d4b59f0"/>
        <function-ref name="start" scoped="" ref="0x7f6e0d4b5b80"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d4b5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0d4b3020" loc="52:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0d4b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6e0d9ec0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d4b33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d4b3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d4b36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0d4b3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d4b39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0d4b8e50" loc="49:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d4b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d4b5210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0d4b44c0" loc="51:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0d4b44c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6e0d9ec0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0d4b4840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0d4b2940" loc="56:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d4b2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d4b2cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d4b2e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d4b1020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d4b11b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d4b1340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d4b14d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d4b1660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d4b1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d4b17f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d4b1980"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d4b1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f6e0d4b2020" loc="55:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f6e0d4b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6e0d9ec0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f6e0d4b23a0"/>
        <function-ref name="offset" scoped="" ref="0x7f6e0d4b2530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f6e0d4b26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0d4a52f0" loc="66:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0d4a52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0d4a5670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0d4a5800"/>
        <function-ref name="start" scoped="" ref="0x7f6e0d4a5990"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d4a5b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f6e0d43d6e0" loc="332:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f6e0d43d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0d43da60"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0d43dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f6e0d4908a0" loc="74:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f6e0d4908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0d490c20"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d490db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f6e0d4744f0" loc="191:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f6e0d4744f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0d474870"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0d474a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0d4a6c30" loc="65:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0d4a6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0d4a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f6e0d48e4e0" loc="75:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f6e0d48e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f6e0d48e860"/>
        <function-ref name="flush" scoped="" ref="0x7f6e0d48e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f6e0d441c70" loc="322:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f6e0d441c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0d440020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0d4401b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f6e0d4948e0" loc="72:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f6e0d4948e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f6e0d494c60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f6e0d494df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f6e0d4a1020"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f6e0d4a11b0"/>
        <function-ref name="putData" scoped="" ref="0x7f6e0d4a1340"/>
        <function-ref name="putDone" scoped="" ref="0x7f6e0d4a14d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f6e0d4a1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0d4a18e0" loc="73:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d4a18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d4a1c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d4a1df0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d499020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d4991b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d499340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d4994d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d499660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d499ca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d4997f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d499980"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d499b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f6e0d43aa00" loc="341:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f6e0d43aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0d43ad80"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0d439020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f6e0d49e130" loc="67:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f6e0d49e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f6e0d49e4b0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f6e0d49e640"/>
        <function-ref name="startSend" scoped="" ref="0x7f6e0d49e7d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f6e0d49e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f6e0d49a5c0" loc="68:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f6e0d49a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f6e0d49a940"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f6e0d49aad0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f6e0d49ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f6e0d36f020" loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f6e0d36f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0d36f3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0d36f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0d374de0" loc="51:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0d374de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6e0d9ec0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d3731c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d373350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d3734e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0d373670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d373800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f6e0d36f800" loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f6e0d36f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0d36fb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0d36fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0d3746c0" loc="50:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0d3746c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6e0d9ec0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0d374a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f6e0d373c20" loc="54:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f6e0d373c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6e0d9ec0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f6e0d372020"/>
        <function-ref name="offset" scoped="" ref="0x7f6e0d3721b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f6e0d372340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0d371920" loc="57:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d371920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d371ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d371e30"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d370020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d3701b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d370340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d3704d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d370660"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d370ca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d370980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d3707f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d370b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f6e0d372e80" loc="56:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f6e0d372e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f6e0d371220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f6e0d3713b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f6e0d371540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f6e0d3716d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f6e0d372590" loc="55:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f6e0d372590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f6e0d372910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f6e0d372aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f6e0d372c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f6e0d35dd20" loc="50:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6e0d35dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d3670e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6e0d367270"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d367400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6e0d367590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6e0d367720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6e0d3678b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d367a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f6e0d36ce00" loc="48:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f6e0d36ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f6e0d3691c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f6e0d369350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f6e0d3694e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f6e0d369670"/>
        <function-ref name="putData" scoped="" ref="0x7f6e0d369800"/>
        <function-ref name="putDone" scoped="" ref="0x7f6e0d369990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f6e0d369b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0d367cc0" loc="51:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d367cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d3660a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d366230"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d3663c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d366550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d3666e0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d366870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d366a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d35c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d366b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d366d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d35c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f6e0d340020" loc="6:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6e0d340020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d3403a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6e0d340530"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d3406c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6e0d340850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f6e0d342890" loc="5:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6e0d342890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d342c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6e0d342da0"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d341020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6e0d3411b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6e0d341340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6e0d3414d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d341660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6e0d342080" loc="4:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6e0d342080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0d342400"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d342590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0d09ac70" loc="45:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0d09ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0d099020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0d0991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f6e0d098440" loc="47:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6e0d098440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d0987c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6e0d098950"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d098ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6e0d098c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f6e0d097020" loc="49:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d097020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6e0d0973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f6e0d099440" loc="46:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6e0d099440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d0997c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6e0d099950"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d099ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6e0d099c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6e0d099e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6e0d098020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d0981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0d09a020" loc="44:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0d09a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d09a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0d09a530"/>
        <function-ref name="request" scoped="" ref="0x7f6e0d09a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d09a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d09a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6e0d2d7dd0" loc="42:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d2d7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0d2d9180"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0d2d9310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f6e0d2d5210" loc="44:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6e0d2d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d2d5590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6e0d2d5720"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d2d58b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6e0d2d5a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f6e0d2d3600" loc="47:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d2d3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6e0d2d3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f6e0d2d9b50" loc="43:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6e0d2d9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d2d8020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6e0d2d81b0"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d2d8340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6e0d2d84d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6e0d2d8660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6e0d2d87f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d2d8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6e0d2d4370" loc="46:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6e0d2d4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d2d46f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0d2d4880"/>
        <function-ref name="request" scoped="" ref="0x7f6e0d2d4a10"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d2d4ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d2d4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0d2dc320" loc="41:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0d2dc320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d2dc6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0d2dc830"/>
        <function-ref name="request" scoped="" ref="0x7f6e0d2dc9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d2dcb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d2dcce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6e0d2cebe0" loc="48:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0d2cebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0d2d2020"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0d2d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6e0d245e70" loc="44:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d245e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0d244240"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0d2443d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f6e0d243890" loc="46:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6e0d243890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d243c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6e0d243dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d242020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6e0d2421b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f6e0d2413e0" loc="49:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d2413e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6e0d241780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f6e0d241a50" loc="50:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6e0d241a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0d241dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0d23f020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0d23f1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0d23f340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0d23f4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0d23f660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0d23f7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0d23f980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0d23fb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0d23fca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0d23fe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0d23e020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0d23e1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0d23e440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0d23e5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0d23e760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0d23e8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0d23ea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0d23ec10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0d23eda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0d23d020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0d23d1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0d23d340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0d23d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d23d660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0d23d9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0d23db80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0d23dd10"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0d23c020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0d23c1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0d23c340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0d23c4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0d23c660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0d23c7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0d23c980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0d23cb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0d23cca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0d23ce30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0d23b020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0d23b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f6e0d244790" loc="45:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6e0d244790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d244b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6e0d244cc0"/>
        <function-ref name="receive" scoped="" ref="0x7f6e0d244e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6e0d243020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6e0d2431b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6e0d243340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d2434d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6e0d23a020" loc="52:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0d23a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0d23ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d239800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d239340"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d239cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6e0d2425b0" loc="48:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6e0d2425b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d242950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0d242ae0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0d242c70"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d242e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d241020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0d2450d0" loc="43:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0d2450d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d245470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0d245600"/>
        <function-ref name="request" scoped="" ref="0x7f6e0d245790"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d245920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d245ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6e0d23b5b0" loc="51:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0d23b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0d23b950"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0d23bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0d238120" loc="53:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0d238120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0d2384a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0d238630"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0d2387c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0d238950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0d238ae0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d238c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0d238e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0d2374d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d2371b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0d237020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0d237340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6e0d228860" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0d228860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0d228be0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0d228d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f6e0d22c500" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0d22c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0d22c880"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d22ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6e0d22cd30" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0d22cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0d22f0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0d22f270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0d22f400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0d22f590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0d22f720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0d22f8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0d22fa40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0d22fbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0d22fd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0d22e020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0d22e1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0d22e340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0d22e4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0d22e760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0d22e8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0d22ea80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0d22ec10"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0d22eda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0d22a020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0d22a1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0d22a340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0d22a4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0d22a660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0d22a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d22a980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0d22ad10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0d229020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0d2291b0"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0d229340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0d2294d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0d229660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0d2297f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0d229980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0d229b10"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0d229ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0d229e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0d228020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0d2281b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0d228340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0d2284d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f6e0d21b990" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f6e0d21b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d21bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d21a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d21a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d21a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d21a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d21a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d21a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d21a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d21ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d21aca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d21ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d219020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d2191b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d219440"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d2195d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6e0d21f130" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6e0d21f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0d21f4b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0d21f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f6e0d219990" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f6e0d219990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d219d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d218020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d2181b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d218340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d2184d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d218660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d2187f0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d218980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d218b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d218ca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d218e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d217020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d2171b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d217440"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d2175d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f6e0d217990" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f6e0d217990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d217d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d216020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d2161b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d216340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d2164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d216660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d2167f0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d216980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d216b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d216ca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d216e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d215020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d2151b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d215440"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d2155d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f6e0d224550" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6e0d224550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0d2248d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0d224a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0d224bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0d224d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0d223020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0d2231b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0d223340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0d2234d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0d223660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0d2237f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0d223980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0d223b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0d223ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0d222020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0d2221b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0d222340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0d2224d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0d222660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0d2227f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0d222980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0d222b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0d222ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0d222e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0d221020"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d2211b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0d221540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0d2216d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0d221860"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0d2219f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0d221b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0d221d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0d220020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0d2201b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0d220340"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0d2204d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0d220660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0d2207f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0d220980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0d220b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0d220ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f6e0d227bc0" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0d227bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0d224020"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d2241b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f6e0d21d990" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f6e0d21d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d21dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d21c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d21c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d21c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d21c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d21c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d21c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d21c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d21cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d21cca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d21ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d21b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d21b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d21b440"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d21b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f6e0d21fa00" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f6e0d21fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0d21fd80"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0d21e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0d21e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0d21e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0d21e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0d21e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0d21e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d21e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0d21eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0d21eca0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0d21ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0d21d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0d21d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0d21d440"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0d21d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6e0d196080" loc="43:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0d196080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0d195020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d1959a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d1954e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d195e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f6e0d190210" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6e0d190210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0d18f090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d18fa10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d18f550"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d18e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6e0d17d450" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0d17d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0d17d7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0d17d960"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0d17daf0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0d17dc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0d17de10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d17c020"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0d17c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d17c340"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d17c4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0d17c660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0d17c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6e0d18b2a0" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0d18b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0d17e0d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0d17ea50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0d17e590"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0d17d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0bd4c5d0" loc="43:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bd4c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0bd4c950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0bd4cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6e0bd467c0" loc="48:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0bd467c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0bd46b40"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0bd46cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6e0bd46020" loc="46:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0bd46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0bd463a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0bd46530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0bd4d880" loc="42:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0bd4d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0bd4dc00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0bd4dd90"/>
        <function-ref name="request" scoped="" ref="0x7f6e0bd4c020"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0bd4c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0bd4c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6e0bd4b5a0" loc="45:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0bd4b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0bd4b920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0bd4bab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0bd4bc40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0bd4bdd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0bd4a020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0bd4a1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0bd4a340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0bd4a4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0bd4a660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0bd4a7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0bd4a980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0bd4ab10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0bd4aca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0bd49020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0bd491b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0bd49340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0bd494d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0bd49660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0bd497f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0bd49980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0bd49b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0bd49ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0bd49e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0bd48020"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0bd481b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0bd48540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0bd486d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0bd48860"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0bd489f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0bd48b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0bd48d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0bd47020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0bd471b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0bd47340"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0bd474d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0bd47660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0bd477f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0bd47980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0bd47b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0bd47ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6e0bd4cd70" loc="44:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0bd4cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0bd4b180"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0bd4b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0d161d50" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0d161d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0d160100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0d160290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6e0d15e370" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d15e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0d15e6f0"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0d15e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6e0d165cd0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6e0d165cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0d1620a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0d162230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0d162a60" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0d162a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d162de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0d161020"/>
        <function-ref name="request" scoped="" ref="0x7f6e0d1611b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d161340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d1614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6e0d160590" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d160590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0d160910"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0d160aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6e0d148020" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d148020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0d1483a0"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0d148530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6e0d15b0d0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6e0d15b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0d15b470"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0d15b600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f6e0d14a880" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f6e0d14a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d14ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6e0d15ba00" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6e0d15ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0d15bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f6e0d14a0a0" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f6e0d14a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0d14a420"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0d14a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0d0cf020" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0d0cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0d0cf3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0d0cf550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6e0d0cecd0" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0d0cecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0d0cd0a0"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0d0cd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6e0d0cf7a0" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0d0cf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d0cfb20"/>
        <function-ref name="requested" scoped="" ref="0x7f6e0d0cfcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d0cfe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d0ce020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0d0ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0d0d0210" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0d0d0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d0d05b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0d0d0740"/>
        <function-ref name="request" scoped="" ref="0x7f6e0d0d08d0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d0d0a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d0d0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6e0d0ce400" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d0ce400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0d0ce780"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0d0ce910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0bcc9ca0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0bcc9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0bcc80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6e0bcc8330" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6e0bcc8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6e0bcc86b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6e0bcc8840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6e0bcc89d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6e0bcc8b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0bcc43a0" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bcc43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0bcc4740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0bcc48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6e0bcc2210" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0bcc2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0bcc25b0"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0bcc2740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6e0bcc29d0" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6e0bcc29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6e0bcc2d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6e0bcc1020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6e0bcc11b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6e0bcc1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6e0bcc4b20" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0bcc4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0bcc3020"/>
        <function-ref name="requested" scoped="" ref="0x7f6e0bcc31b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0bcc3340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0bcc34d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0bcc3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0bcc1590" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0bcc1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0bcc1910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0bcc1aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0bcc1c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0bcc1dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0bcc0020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0bcc01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0bcc0340"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0bcc0980"/>
        <function-ref name="set" scoped="" ref="0x7f6e0bcc0660"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0bcc04d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0bcc07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0bcc5540" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0bcc5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0bcc58e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0bcc5a70"/>
        <function-ref name="request" scoped="" ref="0x7f6e0bcc5c00"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0bcc5d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0bcc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6e0bcc38b0" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0bcc38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0bcc3c30"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0bcc3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6e0bcc0c50" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f6e0bcc0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0bcbf020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0bcbf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6e0d0b3400" loc="72:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6e0d0b3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6e0d0b3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6e0d0b39d0" loc="73:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0d0b39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d0b3d50"/>
        <function-ref name="requested" scoped="" ref="0x7f6e0d0b2020"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d0b21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d0b2340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0d0b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f6e0d0c9b20" loc="70:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0d0c9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0d0b3020"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d0b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6e0d0b2720" loc="74:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0d0b2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0d0b2aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0d0b2c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6e0bc8fb00" loc="62:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6e0bc8fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6e0bc8fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6e0bc8e0f0" loc="63:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0bc8e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0bc8e470"/>
        <function-ref name="requested" scoped="" ref="0x7f6e0bc8e600"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0bc8e790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0bc8e920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0bc8eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f6e0bc8f3a0" loc="60:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6e0bc8f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0bc8f720"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0bc8f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6e0bc8ed00" loc="64:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0bc8ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0bc8d0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0bc8d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f6e0d0938e0" loc="3:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6e0d0938e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6e0d093c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6e0d092020" loc="4:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0d092020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0d0923a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0d092530"/>
        <function-ref name="request" scoped="" ref="0x7f6e0d0926c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0d092850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0d0929e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6e0d093080" loc="2:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6e0d093080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0d093400"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0d093590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f6e0d0808c0" loc="47:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f6e0d0808c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f6e0d080c40"/>
        <function-ref name="offset" scoped="" ref="0x7f6e0d080dd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f6e0d07d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6e0c29c020" loc="49:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0c29c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c29c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c29c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c29c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c29c850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c29c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6e0c29cc30" loc="50:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0c29cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0c299020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0c2991b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c299340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c2994d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0c299660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6e0c2998b0" loc="51:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0c2998b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0c299c30"/>
        <function-ref name="source" scoped="" ref="0x7f6e0c299dc0"/>
        <function-ref name="address" scoped="" ref="0x7f6e0c298020"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0c2981b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0c298340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0c2984d0"/>
        <function-ref name="type" scoped="" ref="0x7f6e0c298660"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0c2987f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0c298980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0c298b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0c298ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6e0c297020" loc="52:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6e0c297020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0c2973a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0c297530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0c2976c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6e0bc813b0" loc="49:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0bc813b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0bc81730"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0bc818c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0bc81a50"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0bc81be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0bc81d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6e0bc80020" loc="50:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0bc80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0bc803a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0bc80530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0bc806c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0bc80850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0bc809e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6e0bc80c30" loc="51:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0bc80c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0bc7f020"/>
        <function-ref name="source" scoped="" ref="0x7f6e0bc7f1b0"/>
        <function-ref name="address" scoped="" ref="0x7f6e0bc7f340"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0bc7f4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0bc7f660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0bc7f7f0"/>
        <function-ref name="type" scoped="" ref="0x7f6e0bc7f980"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0bc7fb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0bc7fca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0bc7fe30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0bc7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6e0bc7e2b0" loc="52:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6e0bc7e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0bc7e630"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0bc7e7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0bc7e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6e0bc75e40" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0bc75e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0bc741e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0bc74370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0bc74500"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0bc74690"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0bc74820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f6e0bc74ad0" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0bc74ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0bc74e50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0bc73020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0bc731b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0bc73340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0bc734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6e0bc73720" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0bc73720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0bc73aa0"/>
        <function-ref name="source" scoped="" ref="0x7f6e0bc73c30"/>
        <function-ref name="address" scoped="" ref="0x7f6e0bc73dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0bc72020"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0bc721b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0bc72340"/>
        <function-ref name="type" scoped="" ref="0x7f6e0bc724d0"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0bc72660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0bc727f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0bc72980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0bc72b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0d0481d0" loc="43:../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0d0481d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0d048550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0d0486e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0d048870"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0d048a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0d048b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f6e0cffea40" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0cffea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cffede0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cffc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cffc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cffc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cffc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0cfffb00" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0cfffb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cffe020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cffe1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cffe340"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cffe4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cffe660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6e0cffbd60" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0cffbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cffa180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0cffa310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cffa4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cffa630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0cffa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f6e0cffaa90" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f6e0cffaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0cffae10"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0cff9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f6e0cff92f0" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f6e0cff92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0cff9670"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0cff9800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6e0cffc720" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cffc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0cffcaa0"/>
        <function-ref name="source" scoped="" ref="0x7f6e0cffcc30"/>
        <function-ref name="address" scoped="" ref="0x7f6e0cffcdc0"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0cffb020"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0cffb1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0cffb340"/>
        <function-ref name="type" scoped="" ref="0x7f6e0cffb4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0cffb660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0cffb7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0cffb980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0cffbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0cff7760" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cff7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0cff7ae0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0cff7c70"/>
        <function-ref name="start" scoped="" ref="0x7f6e0cff7e00"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0cff4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6e0cff47f0" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0cff47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cff4b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cff4d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cff3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cff31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cff3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6e0cff2880" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6e0cff2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0cff2c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6e0cff0020" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0cff0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cff03a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0cff0530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cff06c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cff0850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0cff09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6e0cfe46b0" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0cfe46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6e0cfecce0"/>
        <function-ref name="clear" scoped="" ref="0x7f6e0cfe5460"/>
        <function-ref name="isValid" scoped="" ref="0x7f6e0cfec5b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cfe5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6e0cfd75b0" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0cfd75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6e0cfd7930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6e0cfd7ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6e0cfd7c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6e0cfd7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0cff3b20" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0cff3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0cff2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6e0cfee4e0" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cfee4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0cfee860"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0cfee9f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0cfeeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6e0cff0c90" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cff0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0cfef0a0"/>
        <function-ref name="source" scoped="" ref="0x7f6e0cfef230"/>
        <function-ref name="address" scoped="" ref="0x7f6e0cfef3c0"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0cfef550"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0cfef6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0cfef870"/>
        <function-ref name="type" scoped="" ref="0x7f6e0cfefa00"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0cfefb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0cfefd20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0cfee020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0cfee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6e0cfe3840" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6e0cfe3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6e0cfe2dd0"/>
        <function-ref name="clear" scoped="" ref="0x7f6e0cfe0540"/>
        <function-ref name="isValid" scoped="" ref="0x7f6e0cfe26a0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cfe0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0cfcb2f0" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cfcb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0cfcb670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0cfcb800"/>
        <function-ref name="start" scoped="" ref="0x7f6e0cfcb990"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0cfcbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6e0cfc42c0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0cfc42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6e0cfc4640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6e0cfc47d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6e0cfc4960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6e0cfc4af0"/>
        <function-ref name="setCca" scoped="" ref="0x7f6e0cfc4c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6e0cfc4e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6e0cfab1d0" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f6e0cfab1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6e0cfab650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6e0cfc6020" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0cfc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cfc63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0cfc6530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cfc66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cfc6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0cfc69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6e0cfca320" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0cfca320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cfca6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cfca830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cfca9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cfcab50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cfcace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6e0cfc81d0" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6e0cfc81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0cfc8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6e0cfbc0f0" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0cfbc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0cfbc470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0cfbc600"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0cfbc790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0cfbc920"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0cfbcab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0cfbcc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6e0cfbb170" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0cfbb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6e0cfbb4f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6e0cfbb680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6e0cfbb810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6e0cfbb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0cfc9510" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0cfc9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0cfc9890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6e0cfc5020" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cfc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0cfc53a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0cfc5530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0cfc56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6e0cfa7430" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6e0cfa7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6e0cfa77b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6e0cfa7940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6e0cfa7ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6e0cfa7c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6e0cfa7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6e0cfc8800" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0cfc8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0cfc8b80"/>
        <function-ref name="source" scoped="" ref="0x7f6e0cfc8d10"/>
        <function-ref name="address" scoped="" ref="0x7f6e0cfc7020"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0cfc71b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0cfc7340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0cfc74d0"/>
        <function-ref name="type" scoped="" ref="0x7f6e0cfc7660"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0cfc77f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0cfc7980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0cfc7b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0cfc7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6e0cfb8170" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0cfb8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6e0cfb84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0cfa2020" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cfa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0cfa23a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0cfa2530"/>
        <function-ref name="start" scoped="" ref="0x7f6e0cfa26c0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0cfa2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6e0cf9b080" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0cf9b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6e0cf9b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6e0cf9a2e0" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6e0cf9a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6e0cf9a660"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6e0cf9a7f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6e0cf9a980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6e0cf9ab10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6e0cf9aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6e0cf9d670" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0cf9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0cf9d9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0cf9db80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0cf9dd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0cf9c020"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0cf9c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0cf9c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6e0cf9e170" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6e0cf9e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cf9e4f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cf9e680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cf9e810"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cf9e9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cf9eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6e0cf9b700" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0cf9b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6e0cf9ba80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6e0cf9bc10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6e0cf9bda0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6e0cf9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6e0cfa0d30" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f6e0cfa0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0cf9f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6e0cf9c670" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0cf9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0cf9c9f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0cf9cb80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0cf9cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0cfa11d0" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cfa11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cfa1550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cfa16e0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cfa1870"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cfa1a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cfa1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6e0cfa0020" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f6e0cfa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cfa03a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cfa0530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cfa06c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cfa0850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cfa09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6e0cf9f420" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6e0cf9f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cf9f7a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0cf9f930"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cf9fac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cf9fc50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0cf9fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6e0cf9d020" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6e0cf9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0cf9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0cf989e0" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cf989e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0cf98d60"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0cf95020"/>
        <function-ref name="start" scoped="" ref="0x7f6e0cf951b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0cf95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6e0cf94990" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0cf94990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6e0cf94d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6e0cf93020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6e0cf931b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6e0cf93340"/>
        <function-ref name="setCca" scoped="" ref="0x7f6e0cf934d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6e0cf93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0cf95600" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0cf95600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cf95980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cf95b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cf95ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cf95e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cf94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0cf94300" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0cf94300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0cf94680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0cf90690" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0cf90690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0cf90a10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0cf90ba0"/>
        <function-ref name="start" scoped="" ref="0x7f6e0cf90d30"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0cf8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6e0cf8e020" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0cf8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6e0cf8e3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6e0cf8e530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6e0cf8e6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6e0cf8e850"/>
        <function-ref name="setCca" scoped="" ref="0x7f6e0cf8e9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6e0cf8eb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f6e0cf84060" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f6e0cf84060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6e0cf843e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6e0cf84570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6e0cf84700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6e0cf84890"/>
        <function-ref name="setCca" scoped="" ref="0x7f6e0cf84a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6e0cf84bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6e0cf79330" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0cf79330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0cf796b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0cf79840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0cf799d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0cf79b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0cf79cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0cf79e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f6e0cf7c2a0" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6e0cf7c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cf7c620"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cf7c7b0"/>
        <function-ref name="modify" scoped="" ref="0x7f6e0cf7c940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cf7cad0"/>
        <function-ref name="resend" scoped="" ref="0x7f6e0cf7cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0cf8f2e0" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0cf8f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cf8f660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cf8f7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0cf8f980"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0cf8fb10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cf8fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6e0cf78420" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6e0cf78420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6e0cf787a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6e0cf78930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6e0cf8c6f0" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f6e0cf8c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0cf8ca70"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0cf8cc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6e0cf71920" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0cf71920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0cf71ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0cf71e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0cf76020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f6e0cf853f0" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6e0cf853f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6e0cf85770"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6e0cf85900"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6e0cf85a90"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6e0cf85c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6e0cf85db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6e0cf8c020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6e0cf8c1b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6e0cf8c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0cf78bf0" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0cf78bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0cf7a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0cf7a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0cf7a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0cf7a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0cf7a660"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cf7a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0cf7a980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0cf79020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cf7ab10"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0cf7aca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0cf7ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6e0cf8ee60" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cf8ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cf8d210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cf8d3a0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cf8d530"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cf8d6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cf8d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f6e0cf75110" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f6e0cf75110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0cf75590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0cf75720"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0cf758b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0cf75a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0cf75bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0cf75d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f6e0cf67b70" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f6e0cf67b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0cf66020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0cf661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f6e0cf69ba0" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f6e0cf69ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0cf67020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0cf671b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f6e0cf6ac20" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f6e0cf6ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0cf69020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0cf691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f6e0cf10dc0" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0cf10dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6e0cf1c180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6e0cf1c310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6e0cf1c4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6e0cf1c630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6e0cf1c7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6e0cf1c950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6e0cf1cae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6e0cf1cc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6e0cf1ce00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6e0cf1b020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6e0cf1b1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6e0cf1b340"/>
        <function-ref name="sync" scoped="" ref="0x7f6e0cf1b4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6e0cf1b760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6e0cf1b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f6e0cf0c0c0" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f6e0cf0c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cf0ccb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0cf0b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f6e0cf1bbf0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6e0cf1bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6e0cf0e020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6e0cf0e1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6e0cf0e340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6e0cf0e4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6e0cf0e660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6e0cf0e7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6e0cf0e980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6e0cf0eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0cf20950" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cf20950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cf20cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cf20e60"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cf1d020"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cf1d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cf1d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f6e0cf06970" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0cf06970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6e0cf06cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6e0cf06e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6e0cf05030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6e0cf051c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6e0cf05350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6e0cf054e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6e0cf05670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6e0cf05800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6e0cf05990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6e0cf05b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6e0cf05cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6e0cf05e40"/>
        <function-ref name="sync" scoped="" ref="0x7f6e0cf04020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6e0cf042b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6e0cf04440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f6e0cede8e0" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0cede8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cedec60"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cededf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f6e0ceff020" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6e0ceff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6e0ceff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f6e0cef7d90" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f6e0cef7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0cef5670"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cefd5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0cef5020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0cefda90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0cef5b30"/>
        <function-ref name="start" scoped="" ref="0x7f6e0cefebc0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0cefd110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f6e0cee25f0" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0cee25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cee2970"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cee2b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f6e0cef3380" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f6e0cef3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cef3700"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cef3890"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cef3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cef3bb0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cef3d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cef2020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cef21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cef2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f6e0cf03b40" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f6e0cf03b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cf01750"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0cf01bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f6e0cecc820" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f6e0cecc820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0ceccba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0ceccd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f6e0cedd1c0" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6e0cedd1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cedd540"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cedd6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f6e0cedda70" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0cedda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cedddf0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cedc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f6e0cee63d0" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0cee63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cee6750"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cee68e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6e0cee8810" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6e0cee8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6e0cee8b90"/>
        <function-ref name="changed" scoped="" ref="0x7f6e0cee8d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6e0ceef020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6e0ceef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6e0cef4060" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6e0cef4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cef43e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cef4570"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cef4700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cef4890"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cef4a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cef4bb0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cef4d40"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cef3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f6e0cedb120" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0cedb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0cedb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f6e0cef26a0" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f6e0cef26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cef2a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cef2bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cef2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cef1020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cef11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cef1340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cef14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cef1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0cf07510" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0cf07510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0cf07890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f6e0cede020" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0cede020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cede3a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cede530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f6e0cedba40" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0cedba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0cedbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6e0ceda1d0" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6e0ceda1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0ceda550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0ceda6e0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0ceda870"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cedaa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cedab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f6e0ced7d90" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f6e0ced7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0ced6180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0ced6310"/>
        <function-ref name="request" scoped="" ref="0x7f6e0ced64a0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0ced6630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0ced67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f6e0cf04740" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6e0cf04740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6e0cf04ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6e0cf04c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6e0cf04de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6e0cf03020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6e0cf031b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6e0cf03340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6e0cf034d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6e0cf03660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f6e0cee6c80" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0cee6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cee20a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cee2230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f6e0cedfb00" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0cedfb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cedfe80"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cee6030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f6e0ced92b0" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6e0ced92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0ced9630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0ced6a80" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0ced6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0ced6e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0ced5020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0ced51b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0ced5340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0ced54d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0ced5660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0ced57f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0ced5e30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0ced5980"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0ced5b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0ced5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f6e0cecd940" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f6e0cecd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0cecdcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0cecde50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0cf07b80" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cf07b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cf06020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cf061b0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cf06340"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cf064d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cf06660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f6e0ceeb520" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6e0ceeb520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0ceeb8a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0ceeba30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f6e0cee3a90" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0cee3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0ceeb020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0ceeb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f6e0cef00e0" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f6e0cef00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0cef0460"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cef05f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6e0cef0780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6e0cef0910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f6e0ced7020" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f6e0ced7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0ced73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0ced7530"/>
        <function-ref name="request" scoped="" ref="0x7f6e0ced76c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0ced7850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0ced79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f6e0ced99c0" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0ced99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0ced9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0ce567d0" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0ce567d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0ce56b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f6e0ce53220" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6e0ce53220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0ce51b30"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ce52a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0ce514e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0ce51020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0ce4f020"/>
        <function-ref name="start" scoped="" ref="0x7f6e0ce52090"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0ce525a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0ce4ea20" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0ce4ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0ce4eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f6e0ce4d2e0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6e0ce4d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0cd70b30"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd72ae0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0cd704e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0cd70020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0cd6f020"/>
        <function-ref name="start" scoped="" ref="0x7f6e0cd72110"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0cd72620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6e0bc0d260" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0bc0d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0bc0bb30"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0bc0ca60"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0bc0b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0bc0b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0bc09020"/>
        <function-ref name="start" scoped="" ref="0x7f6e0bc0c090"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0bc0c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0bc0e9d0" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0bc0e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0bc0ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6e0bc052a0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0bc052a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0bc03b30"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0bc04aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0bc034e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0bc03020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0bc02020"/>
        <function-ref name="start" scoped="" ref="0x7f6e0bc040d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0bc045e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0bc07a10" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0bc07a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0bc07d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6e0bbedc10" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0bbedc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0bbec020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0bbec1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0bbec340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0bbec4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0bbec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6e0bbef1b0" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0bbef1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0bbef530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0bbef6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0bbef850"/>
        <function-ref name="get" scoped="" ref="0x7f6e0bbef9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0bbefb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0bbefd00"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0bbee020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0bbee1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0bbee340"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0bbee4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0bbee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6e0bbee8f0" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0bbee8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0bbeec70"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0bbeee00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0bbed020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0bbed1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0bbed340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0bbed4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0bbed660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0bbed7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0bbed980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6e0ce2bba0" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0ce2bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0ce2a020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0ce2a1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0ce2a340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0ce2a4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ce2a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6e0ce2f4d0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0ce2f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ce2f850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0ce2f9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0ce2fb70"/>
        <function-ref name="get" scoped="" ref="0x7f6e0ce2fd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0ce2e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0ce2e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0ce2e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0ce2e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0ce2e660"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0ce2e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0ce2e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6e0ce2c280" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0ce2c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0ce2c600"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0ce2c790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0ce2c920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0ce2cab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0ce2cc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0ce2cdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0ce2b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0ce2b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0ce2b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f6e0bbe3a80" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0bbe3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0bbe3e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0bbe2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0bbe21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0bbe2340"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0bbe24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6e0bbe5020" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0bbe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0bbe53a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0bbe5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0bbe56c0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0bbe5850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0bbe59e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0bbe5b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0bbe5d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0bbe4020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0bbe41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0bbe4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0bbe44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6e0bbeada0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0bbeada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0bbe6670"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0bbe8610"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0bbe6020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0bbe8ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0bbe6b30"/>
        <function-ref name="start" scoped="" ref="0x7f6e0bbe9bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0bbe8150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0bbea510" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0bbea510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0bbea890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6e0bbe4760" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0bbe4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0bbe4ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0bbe4c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0bbe4e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0bbe3020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0bbe31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0bbe3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0bbe34d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0bbe3660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0bbe37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6e0cdda020" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0cdda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0cddae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0cdd8800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0cdd8340"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0cdd8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f6e0cdb7950" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f6e0cdb7950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0cdb6780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0cdb4150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0cdb6c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0cdb4610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6e0cdd45f0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0cdd45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0cdb8430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0cdb8db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0cdb88f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0cdb72a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6e0bc005f0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0bc005f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0bbfde50"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0bbffe00"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0bbfd800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0bbfd340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0bbfc340"/>
        <function-ref name="start" scoped="" ref="0x7f6e0bbff430"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0bbff940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f6e0bbfad20" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f6e0bbfad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0bbf6670"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0bbf7550"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0bbf6020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0bbf7a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0bbf6b30"/>
        <function-ref name="start" scoped="" ref="0x7f6e0bbf9b60"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0bbf7090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6e0bbfc9b0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0bbfc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0bbfb7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0bbfa1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0bbfbca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0bbfa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f6e0cd696a0" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f6e0cd696a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd69a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd69bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd69d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd68020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd68340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd684d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd68660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f6e0cd689d0" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f6e0cd689d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd68d50"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd67020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd67340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd67660"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd677f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd67980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f6e0cd67ce0" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f6e0cd67ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd66230"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd663c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd66550"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd666e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd66870"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd66a00"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd66b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f6e0cd6a370" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6e0cd6a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd6a6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd6a880"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd6aa10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd6aba0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd6ad30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd69020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f6e0cd64380" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f6e0cd64380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd64700"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd64890"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd64a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd64bb0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd64d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd63020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd631b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd63340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f6e0cd6b0e0" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f6e0cd6b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd6b460"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd6b5f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd6b780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd6b910"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd6baa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd6bc30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd6bdc0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f6e0cd65020" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f6e0cd65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd65530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd656c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd65850"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd659e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd65b70"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd65d00"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0cd61930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd61930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd61cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd61e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0cd5f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd5f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd5f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0cd5f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd5f660"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd5f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0cd5f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0cd5fb10"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd5fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0cd5fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0cd5e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0cd5e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd5e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0cd62710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd62710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd62a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd62c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd62db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd61020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd61340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd614d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd61660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0cd5b480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd5b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd5b800"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd5b990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0cd5bb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd5bcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd5be40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0cd5a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd5a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd5a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0cd5a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0cd5a660"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd5a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0cd5a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0cd5ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0cd5ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0cd5c1b0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd5c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd5c530"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd5c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd5c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd5c9e0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd5cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd5cd00"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd5b020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd5b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0cd56020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd563a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd56530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0cd566c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd56850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd569e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0cd56b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd56d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0cd551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0cd55340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0cd55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0cd557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0cd55a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0cd58d70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd58d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd57180"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd57310"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd574a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd57630"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd577c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd57950"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd57ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd57c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0cd52de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd52de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd51180"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd51310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0cd514a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd51630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd517c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0cd51950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd51ae0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd51c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0cd51e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0cd50020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0cd50340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0cd504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0cd50760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0cd53b70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd53b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd52020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd521b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd52340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd524d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd52660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd527f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd52980"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd52b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0cd4d930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd4d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd4dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd4de40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0cd4c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd4c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd4c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0cd4c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd4c660"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd4c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0cd4c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0cd4cb10"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd4cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0cd4ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0cd4b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0cd4b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd4b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0cd4e710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd4e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd4ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd4ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd4edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd4d020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd4d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd4d340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd4d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd4d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0cd47480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd47480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd47800"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd47990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0cd47b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd47cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd47e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0cd46020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd461b0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd46340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0cd464d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0cd46660"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd467f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0cd46980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0cd46b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0cd46da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0cd491b0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd491b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd49530"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd496c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd49850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd499e0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd49b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd49d00"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd47020"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0cd42020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0cd42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd42530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0cd426c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd42850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0cd42b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd42d00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd41020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0cd411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0cd41340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0cd41660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0cd417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0cd41a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd41c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0cd44d70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd44d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd43180"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd43310"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd434a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd43630"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd437c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd43950"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd43ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd43c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f6e0cd285a0" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f6e0cd285a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6e0cd28920"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd28ab0"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0cd28c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6e0cd28dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f6e0cd2b210" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f6e0cd2b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd2b590"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd2b720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6e0cd2b8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6e0cd2ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f6e0cd2be30" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6e0cd2be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd271e0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd27370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6e0cd27500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6e0cd27690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f6e0cd12da0" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f6e0cd12da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0cd11180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6e0cd11310"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0cd114a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0cd11630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0cd117c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6e0cd11950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6e0cd13020" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6e0cd13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6e0cd133a0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd13530"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0cd136c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6e0cd13850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6e0cd13ae0" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0cd13ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0cd13e60"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0cd12020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0cd121b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0cd12340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0cd124d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0cd12660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0cd127f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0cd12980"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0cd12b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f6e0cd11c20" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0cd11c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0cd10020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0cd101b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0cd10340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0cd104d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0cd10660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0cd107f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0cd10980"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cd10b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0cd10ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0cd10e30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cd0f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0cd0f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0cd0f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0cd0f5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0cd0f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6e0cd02c40" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6e0cd02c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cd01020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd011b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd01340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cd014d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cd01660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cd017f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6e0ccf7bc0" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6e0ccf7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccf6020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccf61b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccf6340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccf64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccf6660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccf67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6e0ccffbc0" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6e0ccffbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccfe020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccfe1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccfe340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccfe4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccfe660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccfe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6e0ccfdbc0" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6e0ccfdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccfb020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccfb1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccfb340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccfb4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccfb660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccfb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6e0cd08d20" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6e0cd08d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cd030e0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd03270"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd03400"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cd03590"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cd03720"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cd038b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6e0ccf9bc0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6e0ccf9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccf80a0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccf8230"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccf83c0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccf8550"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccf86e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccf8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6e0cd01bc0" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6e0cd01bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cd00020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd001b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd00340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cd004d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cd00660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cd007f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6e0ccf6bc0" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6e0ccf6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccf5020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccf51b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccf5340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccf54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccf5660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccf57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6e0cd04e70" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6e0cd04e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cd09220"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd093b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd09540"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cd096d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cd09860"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cd099f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6e0ccfbbc0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6e0ccfbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccfa020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccfa1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccfa340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccfa4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccfa660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccfa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6e0cd03c80" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6e0cd03c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cd020a0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd02230"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd023c0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cd02550"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cd026e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cd02870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6e0ccf8c40" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6e0ccf8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccf7020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccf71b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccf7340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccf74d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccf7660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccf77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6e0cd00bc0" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6e0cd00bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccff020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccff1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccff340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccff4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccff660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6e0ccfebc0" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6e0ccfebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccfd020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccfd1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccfd340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccfd4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccfd660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccfd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6e0cd09dc0" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6e0cd09dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cd08180"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cd08310"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cd084a0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cd08630"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cd087c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cd08950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6e0ccfabc0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6e0ccfabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccf9020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccf91b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccf9340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccf94d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccf9660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccf97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6e0cceea30" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6e0cceea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cceedb0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cced020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cced1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cced340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cced4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cced660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6e0cce4bc0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6e0cce4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cce3020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cce31b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cce3340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cce34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cce3660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cce37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6e0cceba30" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6e0cceba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccebdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccea020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccea1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccea340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccea4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6e0cce9a30" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6e0cce9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cce9db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cce8020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cce81b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cce8340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cce84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cce8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6e0ccf0a30" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6e0ccf0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccf0db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccef020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccef1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccef340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccef4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6e0cce6a30" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6e0cce6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cce5020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cce51b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cce5340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cce54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cce5660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cce57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6e0cceda30" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6e0cceda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cceddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccec020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccec1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccec340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccec4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6e0cce3bc0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6e0cce3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cce1020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cce11b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cce1340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cce14d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cce1660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cce17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6e0ccf49c0" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6e0ccf49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccf4d40"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccf1020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccf11b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccf1340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccf14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccf1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6e0cce8a30" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6e0cce8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cce8db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cce7020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cce71b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cce7340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cce74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cce7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6e0ccefa30" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6e0ccefa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccefdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccee020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccee1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccee340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccee4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6e0cce5bc0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6e0cce5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cce4020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cce41b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cce4340"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cce44d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cce4660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cce47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6e0cceca30" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6e0cceca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccecdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cceb020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cceb1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cceb340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cceb4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cceb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6e0cceaa30" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6e0cceaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cceadb0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cce9020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cce91b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cce9340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cce94d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cce9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6e0ccf1a30" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6e0ccf1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0ccf1db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0ccf0020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0ccf01b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0ccf0340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0ccf04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0ccf0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6e0cce7a30" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6e0cce7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cce7db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cce6020"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cce61b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cce6340"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cce64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cce6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f6e0cc0f610" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f6e0cc0f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cc0f990"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cc0fb20"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cc0fcb0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cc0fe40"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cc02020"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cc021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6e0cc10a30" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f6e0cc10a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0cc10db0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cc0f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6e0cc0f1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6e0cc0f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f6e0cc00610" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f6e0cc00610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0cc00990"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0cc00b20"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cc00cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f6e0cc00e40"/>
        <function-ref name="enable" scoped="" ref="0x7f6e0cbff020"/>
        <function-ref name="getValue" scoped="" ref="0x7f6e0cbff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6e0cc01a70" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f6e0cc01a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0cc01df0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0cc00020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6e0cc001b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6e0cc00340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6e0c8aae50" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c8aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a9410"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a95a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6e0c8b4160" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c8b4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6e0c8aee50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c8aee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8ad210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6e0c8a8880" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c8a8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a8c00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6e0c8a00a0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c8a00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a0420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6e0c8a70a0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c8a70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a7420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6e0c894500" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c894500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c894880"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c894a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6e0c896500" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6e0c896500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c896880"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c896a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6e0c8b3490" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c8b3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6e0c89c880" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6e0c89c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89cc00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6e0c898500" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c898500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c898880"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c898a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6e0c8ade50" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6e0c8ade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8ab210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6e0c8abe50" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c8abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8aa210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6e0c8a2880" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c8a2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a2c00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6e0c8a30a0" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6e0c8a30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a3420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6e0c8a7880" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c8a7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a7c00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6e0c8b6a90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c8b6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6e0c8b6e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6e0c8b5020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6e0c8b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6e0c8b1e00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c8b1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6e0c8b0490" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6e0c8b0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6e0c89bc80" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c89bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6e0c8b0be0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c8b0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6e0c898ce0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c898ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8960a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c896230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6e0c8b1160" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c8b1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6e0c89c0a0" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c89c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89c420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6e0c8ab670" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c8ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8ab9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8abb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6e0c8ad670" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c8ad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8ad9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8adb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6e0c8b5ad0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c8b5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6e0c89d0a0" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c89d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89d420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6e0c8a0880" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c8a0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a0c00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6e0c89d880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c89d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89dc00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6e0c895ce0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c895ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8940a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c894230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6e0c896ce0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6e0c896ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8950a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c895230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6e0c8a3880" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6e0c8a3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a3c00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6e0c89f0a0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c89f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89f420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6e0c899ce0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c899ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8980a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c898230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6e0c8a6880" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c8a6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a6c00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6e0c894ce0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c894ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c8930a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c893230"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8933c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c893550"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c8936e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6e0c8b5480" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6e0c8b5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6e0c8ae670" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6e0c8ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8ae9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8aeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6e0c8aa670" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c8aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8aa9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8aab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6e0c8a10a0" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c8a10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a1420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6e0c8a60a0" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c8a60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a6420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6e0c8a1880" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c8a1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a1c00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6e0c8a9870" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c8a9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a9bf0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6e0c8b47b0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6e0c8b47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6e0c8a80a0" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c8a80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a8420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c8b7e20" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c8b7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c8b61c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c8b6350"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c8b64e0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c8b6670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c8b6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6e0c8af2f0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c8af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8af670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6e0c8ae020" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6e0c8ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6e0c899500" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6e0c899500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c899880"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c899a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6e0c89ace0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c89ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8990a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c899230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6e0c8b17b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c8b17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6e0c89a500" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c89a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89a880"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6e0c895500" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6e0c895500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c895880"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c895a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6e0c8a20a0" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c8a20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a2420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6e0c89f880" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c89f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89fc00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6e0c8b4e00" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6e0c8b4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6e0c8b3ae0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c8b3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8b3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6e0c8a40a0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c8a40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a4420"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6e0c8af940" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6e0c8af940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8afcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6e0c8a4880" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c8a4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8a4c00"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8a4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6e0c89b0a0" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c89b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c89b820"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c89b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6e0c8939b0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c8939b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c893d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c892020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8921b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c892340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c8924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f6e0cbbf630" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbbf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0cbbf9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0cbbfb40"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cbbfcd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0cbbfe60"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0cbbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6e0cbc0670" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbc0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6e0cbc09f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6e0cbc0b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6e0cbc0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f6e0cbbe8c0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f6e0cbbe8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cbbec40"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cbbedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f6e0cbbd6f0" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f6e0cbbd6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cbbda70"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cbbdc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0cbc3950" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cbc3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cbc3cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cbc3e60"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cbc0020"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cbc01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cbc0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f6e0cbbb510" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbbb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0cbbb890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f6e0cba6680" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0cba6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cba6a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cba6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f6e0cbb6bb0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f6e0cbb6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0cbb5020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0cbb51b0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cbb5340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0cbb54d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0cbb5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6e0cbba920" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0cbba920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6e0cbbaca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6e0cbbae30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6e0cbb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f6e0cbaf080" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cbaf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6e0cbaf400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f6e0cbae020" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f6e0cbae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0cbae3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0cbae530"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0cbae6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0cbae850"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0cbae9e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0cbaeb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6e0cbb1400" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6e0cbb1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cbb1780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cbb1910"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cbb1aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cbb1c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cbb1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f6e0cbb3020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f6e0cbb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cbb33a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cbb3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f6e0cbb3db0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f6e0cbb3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0cbb2180"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cbb2310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0cbaedf0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0cbaedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0cbad1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0cbad350"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0cbad4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0cbad670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0cbad800"/>
        <function-ref name="get" scoped="" ref="0x7f6e0cbad990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0cbadb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0cba71b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0cbadcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0cbade40"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0cba7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0cbb7810" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cbb7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cbb7b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cbb7d20"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cbb6020"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cbb61b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cbb6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f6e0cba1120" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f6e0cba1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0cba14a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0cba1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f6e0cbb2ba0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f6e0cbb2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0cbb1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6e0cb46770" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6e0cb46770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0cb46af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0cb46c80"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0cb46e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0cb43020"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0cb431b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0cb43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6e0cb42280" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6e0cb42280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0cb42600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0cb42790"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0cb42920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0cb42ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0cb42c40"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0cb42dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0cb3d020" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0cb3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0cb3d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6e0cb3db70" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6e0cb3db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0cb3c020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0cb3c1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0cb3c340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0cb3c4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0cb3c660"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0cb3c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6e0c8dd020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0c8dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c8dd3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c8dd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6e0cb248f0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cb248f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6e0cb24c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0cb25c40" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cb25c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cb24020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cb241b0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cb24340"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cb244d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cb24660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0bb0aaf0" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bb0aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0bb0ae70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0bb09030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6e0bb08440" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0bb08440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0bb087c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0bb08950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6e0bb08be0" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6e0bb08be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6e0bb07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6e0bb092c0" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6e0bb092c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6e0bb09640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0bb0de70" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0bb0de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0bb0a220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0bb0a3b0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0bb0a540"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0bb0a6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0bb0a860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6e0bb098d0" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6e0bb098d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6e0bb09c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6e0bb09de0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6e0bb08020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0bb081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6e0cb116b0" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0cb116b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0cb11a30"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0cb11bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6e0cb0f850" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0cb0f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cb0fbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cb0fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6e0cb0da40" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6e0cb0da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6e0cb0ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6e0cb10020" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cb10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6e0cb103a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6e0cb0e690" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6e0cb0e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cb0ea10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cb0eba0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cb0ed30"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cb0d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cb0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0cb12430" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cb12430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cb127b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cb12940"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cb12ad0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cb12c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cb12df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6e0cb106a0" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6e0cb106a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6e0cb10a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6e0cb10bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6e0cb10d40"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cb0f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6e0cb0b2a0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0cb0b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0cb0b620"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0cb0b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6e0cab3250" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0cab3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0cab35f0"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0cab3780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6e0cab2c50" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6e0cab2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0cab1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0cab11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6e0cab03e0" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6e0cab03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6e0cab0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6e0cab3a10" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6e0cab3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6e0cab3d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f6e0cab0a50" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6e0cab0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0cab0dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0caaf020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0caaf1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0caaf340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0caaf4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0caaf660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0caaf7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0caaf980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0caafb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0caafca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0caafe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0caae020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0caae1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0caae440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0caae5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0caae760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0caae8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0caaea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0caaec10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0caaeda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0caad020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0caad1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0caad340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0caad4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0caad660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0caad9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0caadb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0caadd10"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0caac020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0caac1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0caac340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0caac4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0caac660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0caac7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0caac980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0caacb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0caacca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0caace30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0caab020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0caab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0caabc20" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0caabc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0caa9020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0caa91b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0caa9340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0caa94d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0caa9660"/>
        <function-ref name="get" scoped="" ref="0x7f6e0caa97f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0caa9980"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0caa8020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0caa9ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0caa9b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0caa9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6e0cab15b0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6e0cab15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cab1950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cab1ae0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cab1c70"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cab1e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cab0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0cab4470" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0cab4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0cab4810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0cab49a0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0cab4b30"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0cab4cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0cab4e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6e0cab2060" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6e0cab2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6e0cab23e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6e0cab2570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6e0cab2700"/>
        <function-ref name="write" scoped="" ref="0x7f6e0cab2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6e0caab480" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6e0caab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0caab800"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0caab990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f6e0caa82f0" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f6e0caa82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0caa8670"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0caa8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f6e0ca9b5e0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6e0ca9b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0ca9b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6e0ca9cd10" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0ca9cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0ca9b0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0ca9b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6e0caa0020" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0caa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0caa03a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0caa0530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0caa06c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0caa0850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0caa09e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0caa0b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0caa0d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0ca9f020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0ca9f1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0ca9f340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0ca9f4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0ca9f660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0ca9f7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0ca9fa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0ca9fc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0ca9fda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0ca9e020"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0ca9e1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0ca9e340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0ca9e4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0ca9e660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0ca9e7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0ca9e980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0ca9eb10"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0ca9eca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0ca9d220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0ca9d3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0ca9d540"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0ca9d6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0ca9d860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0ca9d9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0ca9db80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0ca9dd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0ca9c020"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0ca9c1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0ca9c340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0ca9c4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0ca9c660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0ca9c7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0ca9c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f6e0ca60b20" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f6e0ca60b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0ca5f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0ca5f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0ca5f340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0ca5f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0ca5f660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0ca5f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0ca5f980"/>
        <function-ref name="get" scoped="" ref="0x7f6e0ca5fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0ca5fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0ca5fe30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0ca5e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0ca5e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0ca5e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0ca5e5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0ca5e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6e0ca93780" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6e0ca93780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0ca93b00"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0ca93c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f6e0ca5eb20" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f6e0ca5eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0ca5d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0ca5d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0ca5d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0ca5d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0ca5d660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0ca5d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0ca5d980"/>
        <function-ref name="get" scoped="" ref="0x7f6e0ca5db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0ca5dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0ca5de30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0ca5c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0ca5c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0ca5c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0ca5c5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0ca5c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f6e0ca5cb20" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f6e0ca5cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0ca5b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0ca5b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0ca5b340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0ca5b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0ca5b660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0ca5b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0ca5b980"/>
        <function-ref name="get" scoped="" ref="0x7f6e0ca5bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0ca5bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0ca5be30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0ca5a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0ca5a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0ca5a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0ca5a5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0ca5a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f6e0ca9ac70" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6e0ca9ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0ca97020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0ca971b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0ca97340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0ca974d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0ca97660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0ca977f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0ca97980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0ca97b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0ca97ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0ca97e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0ca96020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0ca961b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0ca96340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0ca965d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0ca96760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0ca968f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0ca96a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0ca96c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0ca96da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0ca95020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0ca951b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0ca95340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0ca954d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0ca95660"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0ca957f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0ca95b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0ca95d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0ca94020"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0ca941b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0ca94340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0ca944d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0ca94660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0ca947f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0ca94980"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0ca94b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0ca94ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0ca94e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0ca93020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0ca931b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0ca93340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f6e0ca69d10" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f6e0ca69d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6e0ca910e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6e0ca91270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6e0ca91400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6e0ca91590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6e0ca91720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6e0ca918b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6e0ca91a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6e0ca91bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0ca91d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6e0ca8f020"/>
        <function-ref name="getData" scoped="" ref="0x7f6e0ca8f1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6e0ca8f340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6e0ca8f4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6e0ca8f760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6e0ca8f8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f6e0ca8fa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6e0ca8fc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6e0ca8fda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6e0ca68020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6e0ca681b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6e0ca68340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6e0ca684d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6e0ca68660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6e0ca687f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6e0ca68980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6e0ca68d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6e0ca67020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6e0ca671b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6e0ca67340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6e0ca674d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6e0ca67660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6e0ca677f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6e0ca67980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6e0ca67b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6e0ca67ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6e0ca67e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6e0ca66020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6e0ca661b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6e0ca66340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6e0ca664d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6e0ca66660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6e0ca667f0"/>
        <function-ref name="setData" scoped="" ref="0x7f6e0ca66980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6e0ca66b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6e0ca66ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6e0ca66e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6e0ca65020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6e0ca651b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6e0ca65340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6e0ca658d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6e0ca65a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6e0ca65bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6e0ca65d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6e0ca64020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6e0ca641b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6e0ca64340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6e0ca644d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6e0ca64660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6e0ca647f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f6e0ca62b20" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f6e0ca62b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0ca61020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0ca611b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0ca61340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0ca614d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0ca61660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0ca617f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0ca61980"/>
        <function-ref name="get" scoped="" ref="0x7f6e0ca61b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0ca61ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0ca61e30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0ca60020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0ca601b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0ca60340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0ca605d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0ca60760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6e0ca92150" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6e0ca92150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0ca924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f6e0ca64bb0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f6e0ca64bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0ca63020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0ca631b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0ca63340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0ca634d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0ca63660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0ca637f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0ca63980"/>
        <function-ref name="get" scoped="" ref="0x7f6e0ca63b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0ca63ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0ca63e30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0ca62020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0ca621b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0ca62340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0ca625d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0ca62760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0bb005d0" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0bb005d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0bb00950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0bb00ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f6e0bafa7c0" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6e0bafa7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0bafab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6e0baf2a80" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0baf2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0baf2e00"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0baf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f6e0bafadd0" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6e0bafadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6e0baf8180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6e0baf8310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6e0baf84a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6e0baf8630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6e0baf87c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6e0baf8950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6e0baf8ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6e0baf8c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0baf8e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6e0baf7020"/>
        <function-ref name="getData" scoped="" ref="0x7f6e0baf71b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6e0baf7340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6e0baf74d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6e0baf7760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6e0baf78f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f6e0baf7a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6e0baf7c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6e0baf7da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6e0baf6020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6e0baf61b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6e0baf6340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6e0baf64d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6e0baf6660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6e0baf67f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6e0baf6980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6e0baf6d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6e0baf5020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6e0baf51b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6e0baf5340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6e0baf54d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6e0baf5660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6e0baf57f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6e0baf5980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6e0baf5b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6e0baf5ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6e0baf5e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6e0baf4020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6e0baf41b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6e0baf4340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6e0baf44d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6e0baf4660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6e0baf47f0"/>
        <function-ref name="setData" scoped="" ref="0x7f6e0baf4980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6e0baf4b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6e0baf4ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6e0baf4e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6e0baf3020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6e0baf31b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6e0baf3340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6e0baf38d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6e0baf3a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6e0baf3bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6e0baf3d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6e0baf2020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6e0baf21b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6e0baf2340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6e0baf24d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6e0baf2660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6e0baf27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6e0bafa020" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6e0bafa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0bafa3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0bafa530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0bb01860" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0bb01860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0bb01be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0bb01d70"/>
        <function-ref name="request" scoped="" ref="0x7f6e0bb00020"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0bb001b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0bb00340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6e0baff5a0" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6e0baff5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0baff920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0baffab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0baffc40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0baffdd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0bafe020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0bafe1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0bafe340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0bafe4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0bafe660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0bafe7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0bafe980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0bafeb10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0bafeca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0bafd020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0bafd1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0bafd340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0bafd4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0bafd660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0bafd7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0bafd980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0bafdb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0bafdca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0bafde30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0bafc020"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0bafc1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0bafc540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0bafc6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0bafc860"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0bafc9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0bafcb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0bafcd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0bafb020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0bafb1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0bafb340"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0bafb4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0bafb660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0bafb7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0bafb980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0bafbb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0bafbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6e0bb00d70" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0bb00d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0baff180"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0baff310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0c9bc2c0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0c9bc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0c9bc640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0c9bc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6e0c9ba8a0" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0c9ba8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0c9bac20"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0c9badb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6e0c9bf4d0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6e0c9bf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0c9bf850"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0c9bf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c9bd020" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c9bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c9bd3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c9bd530"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c9bd6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c9bd850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c9bd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6e0c9be3f0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6e0c9be3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0c9be770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6e0c9bcad0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9bcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0c9bce50"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0c9ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6e0c9b7e50" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0c9b4210"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0c9b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6e0c9b8060" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6e0c9b8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0c9b8400"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0c9b8590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f6e0c9b7840" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f6e0c9b7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0c9b7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6e0c9b8990" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6e0c9b8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0c9b8d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f6e0c9b7060" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f6e0c9b7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6e0c9b73e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6e0c9b7570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0c9b0850" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0c9b0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0c9b0bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0c9b0d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6e0c9ae570" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0c9ae570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0c9ae910"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0c9aeaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6e0c9af020" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0c9af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c9af3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f6e0c9af530"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c9af6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c9af850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0c9af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c9b2a80" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c9b2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c9b2e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c9b0020"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c9b01b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c9b0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c9b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6e0c9afc30" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0c9afc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0c9ae020"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0c9ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0ba88a40" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0ba88a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0ba88dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6e0ba870a0" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6e0ba870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6e0ba87420"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6e0ba875b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6e0ba87740"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6e0ba878d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6e0ba83020" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6e0ba83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6e0ba833c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0ba83550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6e0ba80cf0" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6e0ba80cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6e0ba7f0e0"/>
        <function-ref name="configure" scoped="" ref="0x7f6e0ba7f270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6e0ba7f500" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6e0ba7f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6e0ba7f880"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6e0ba7fa10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6e0ba7fba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6e0ba7fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6e0ba837a0" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6e0ba837a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0ba83b20"/>
        <function-ref name="requested" scoped="" ref="0x7f6e0ba83cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0ba83e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0ba80020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6e0ba801b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0ba7e020" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0ba7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0ba7e3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0ba7e530"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0ba7e6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0ba7e850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0ba7e9e0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0ba7eb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0ba7ed00"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0ba7d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0ba7d1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0ba7d020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0ba7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0ba84270" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0ba84270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0ba84610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0ba847a0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0ba84930"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0ba84ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0ba84c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6e0ba80400" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6e0ba80400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6e0ba80780"/>
        <function-ref name="userId" scoped="" ref="0x7f6e0ba80910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6e0ba7d7a0" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f6e0ba7d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0ba7db20"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0ba7dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f6e0c9a7530" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6e0c9a7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6e0c9a78b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6e0c9a7a40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6e0c9a7bd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6e0c9a7d60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6e0c9a4020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6e0c9a41b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6e0c9a4340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6e0c9a44d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0c9a4660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6e0c9a47f0"/>
        <function-ref name="getData" scoped="" ref="0x7f6e0c9a4980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6e0c9a4b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6e0c9a4ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6e0c9a3020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6e0c9a31b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f6e0c9a3340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6e0c9a34d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6e0c9a3660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6e0c9a37f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6e0c9a3980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6e0c9a3b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6e0c9a3ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6e0c9a3e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6e0c9a2020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6e0c9a21b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6e0c9a2540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6e0c9a26d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6e0c9a2860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6e0c9a29f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6e0c9a2b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6e0c9a2d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6e0c9a1020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6e0c9a11b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6e0c9a1340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6e0c9a14d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6e0c9a1660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6e0c9a17f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6e0c9a1980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6e0c9a1b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6e0c9a1ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6e0c9a1e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6e0c9a0020"/>
        <function-ref name="setData" scoped="" ref="0x7f6e0c9a01b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6e0c9a0340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6e0c9a04d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6e0c9a0660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6e0c9a07f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6e0c9a0980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6e0c9a0b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6e0c99f420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6e0c99f5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6e0c99f740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6e0c99f8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6e0c99fa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6e0c99fbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6e0c99fd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6e0c99e020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6e0c99e1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6e0c99e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f6e0c994250" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f6e0c994250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6e0c9945d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6e0c994760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6e0c9948f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6e0c994a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6e0c994c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6e0c994da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6e0c993020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6e0c9931b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6e0c993340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6e0c9934d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6e0c993660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6e0c9937f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6e0c993980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6e0c993c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6e0c993da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6e0c992020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6e0c9921b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f6e0c992340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6e0c9924d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6e0c992660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6e0c9927f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6e0c992980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6e0c992b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6e0c992ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0c992e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6e0c991220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6e0c9913b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6e0c991540"/>
        <function-ref name="tx" scoped="" ref="0x7f6e0c9916d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6e0c991860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6e0c9919f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6e0c991b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6e0c991d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6e0c990020"/>
        <function-ref name="rx" scoped="" ref="0x7f6e0c9901b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6e0c990340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6e0c9904d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6e0c990660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6e0c9907f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6e0c990980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f6e0c98ecb0" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f6e0c98ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c98d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c98d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0c98d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c98d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c98d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0c98d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c98da00"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c98db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0c98dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0c98c020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c98c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0c98c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0c98c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0c98c760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c98c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f6e0c99b430" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f6e0c99b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6e0c99b7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6e0c99b940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6e0c99bad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6e0c99bc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6e0c99bdf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6e0c99a020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6e0c99a1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6e0c99a340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0c99a4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6e0c99a660"/>
        <function-ref name="getData" scoped="" ref="0x7f6e0c99a7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6e0c99a980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6e0c99ab10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6e0c99ada0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6e0c999020"/>
        <function-ref name="getIV" scoped="" ref="0x7f6e0c9991b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6e0c999340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6e0c9994d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6e0c999660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6e0c9997f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6e0c999980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6e0c999b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6e0c999ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6e0c999e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6e0c998020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6e0c9983b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6e0c998540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6e0c9986d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6e0c998860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6e0c9989f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6e0c998b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6e0c998d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6e0c997020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6e0c9971b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6e0c997340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6e0c9974d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6e0c997660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6e0c9977f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6e0c997980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6e0c997b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6e0c997ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6e0c997e30"/>
        <function-ref name="setData" scoped="" ref="0x7f6e0c996020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6e0c9961b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6e0c996340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6e0c9964d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6e0c996660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6e0c9967f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6e0c996980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6e0c995020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6e0c9951b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6e0c995340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6e0c9954d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6e0c995660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6e0c9957f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6e0c995980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6e0c995b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6e0c995ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6e0c995e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f6e0c990d40" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f6e0c990d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c98f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c98f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0c98f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c98f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c98f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0c98f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c98fa40"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c98fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0c98fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0c98e020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c98e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0c98e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0c98e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0c98e760"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c98e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6e0c878c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c878c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c877210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6e0c883da0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c883da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c881180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6e0c87bb50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c87bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c87a020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c87a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6e0c875670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c875670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8759f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c875b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6e0c86ee50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c86ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86d210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6e0c875e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c875e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c874210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6e0c8622f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c8622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c862670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c862800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6e0c8642f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6e0c8642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c864670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c864800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6e0c880120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c880120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8804a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6e0c86a670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6e0c86a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6e0c8652f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c8652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c865670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c865800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6e0c87ac60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6e0c87ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c879020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6e0c879c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c879c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c878020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6e0c870670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c870670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8709f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c870b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6e0c872e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6e0c872e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c871210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6e0c874670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c874670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8749f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c874b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6e0c884760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c884760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6e0c884ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6e0c884c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6e0c884e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6e0c87faa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c87faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c87fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6e0c87e120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6e0c87e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c87e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6e0c869a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c869a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c869df0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c867020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6e0c87e870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c87e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c87ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6e0c865ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c865ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c865e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c864020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6e0c880dc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c880dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c87f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6e0c86be50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c86be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86a210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6e0c879480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c879480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c879800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c879990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6e0c87a480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c87a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c87a800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c87a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6e0c883750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c883750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c883ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6e0c86ce50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c86ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86b210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6e0c86d670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c86d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6e0c86b670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c86b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6e0c863ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c863ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c863e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c862020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6e0c864ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6e0c864ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c864e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c863020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6e0c871670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6e0c871670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8719f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c871b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6e0c86de50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c86de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86c210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6e0c866ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c866ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c866e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c865020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6e0c873670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c873670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8739f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c873b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6e0c862ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c862ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c862e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c860020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8601b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c860340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c8604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6e0c883100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6e0c883100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c883480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6e0c87b370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6e0c87b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c87b6f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c87b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6e0c878480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c878480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c878800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c878990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6e0c870e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c870e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86e210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6e0c874e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c874e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c873210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6e0c86e670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c86e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6e0c877670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c877670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8779f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c877b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6e0c881450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6e0c881450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8817d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6e0c877e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c877e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c875210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c885a80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c885a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c885e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c884020"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c8841b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c884340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c8844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6e0c87d020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c87d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c87d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6e0c87dcc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6e0c87dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c87b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6e0c8662f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6e0c8662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c866670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c866800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6e0c867ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c867ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c867e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c866020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6e0c87f450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c87f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c87f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6e0c8672f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c8672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c867670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c867800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6e0c8632f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6e0c8632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c863670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c863800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6e0c871e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c871e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c870210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6e0c86c670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c86c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c86c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c86cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6e0c881aa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6e0c881aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c881e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6e0c880770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c880770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c880af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6e0c873e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c873e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c872210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6e0c87d670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6e0c87d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c87d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6e0c872670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c872670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8729f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c872b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6e0c86ae50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c86ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c869610"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8697a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6e0c8607a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c8607a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c860b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c860cb0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c860e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c85f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c85f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6e0c84bc60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c84bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84a210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6e0c856da0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c856da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c855180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6e0c84fb50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c84fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84e020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6e0c849670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c849670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8499f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c849b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6e0c842e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c842e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c841210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6e0c849e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c849e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c848210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6e0c8352f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c8352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c835670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c835800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6e0c8372f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6e0c8372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c837670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c837800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6e0c854120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c854120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8544a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6e0c83d670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6e0c83d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6e0c8392f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c8392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c839670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c839800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6e0c84ec60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6e0c84ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84c020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6e0c84cc60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c84cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84b020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6e0c843670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c843670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8439f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c843b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6e0c845e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6e0c845e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c844210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6e0c848670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c848670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8489f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c848b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6e0c857760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c857760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6e0c857ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6e0c857c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6e0c857e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6e0c852aa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c852aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c852e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6e0c851120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6e0c851120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8515a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6e0c83ca70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c83ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83cdf0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6e0c851870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c851870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c851bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6e0c839ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c839ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c839e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c837020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6e0c854dc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c854dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c852180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6e0c83ee50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c83ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83d210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6e0c84c480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c84c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84c800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6e0c84e480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c84e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84e800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6e0c856750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c856750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c856ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6e0c83fe50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c83fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83e210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6e0c841670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c841670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8419f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c841b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6e0c83e670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c83e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6e0c836ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c836ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c836e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c835020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6e0c837ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6e0c837ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c837e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c836020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6e0c844670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6e0c844670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8449f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c844b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6e0c841e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c841e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83f210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6e0c83aad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c83aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83ae50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c839020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6e0c847670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c847670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8479f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c847b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6e0c835ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c835ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c835e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c834020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8341b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c834340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c8344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6e0c856100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6e0c856100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c856480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6e0c84f370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6e0c84f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84f6f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6e0c84b480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c84b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84b800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6e0c843e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c843e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c842210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6e0c848e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c848e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c847210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6e0c842670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c842670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8429f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c842b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6e0c84a670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c84a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c84a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c84ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6e0c855450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6e0c855450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8557d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6e0c84ae50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c84ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c849210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c8589e0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c8589e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c858d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c857020"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c8571b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c857340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c8574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6e0c850020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c850020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6e0c850cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6e0c850cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c84f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6e0c83a2f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6e0c83a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83a670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6e0c83bad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c83bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83be50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6e0c852450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c852450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8527d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6e0c83b2f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c83b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83b670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6e0c8362f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6e0c8362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c836670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c836800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6e0c844e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c844e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c843210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6e0c83f670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c83f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6e0c855aa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6e0c855aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c855e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6e0c854770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c854770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c854af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6e0c847e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c847e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c845210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c8453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6e0c850670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6e0c850670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c8509f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6e0c845670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c845670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8459f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c845b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6e0c83de50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c83de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c83c610"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c83c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6e0c8347a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c8347a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c834b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c834cb0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c834e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c833020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c8331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f6e0c82cb20" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6e0c82cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6e0c829020"/>
        <function-ref name="changed" scoped="" ref="0x7f6e0c8291b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6e0c829340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6e0c8294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f6e0c82bd20" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6e0c82bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6e0c8140e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f6e0c810310" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6e0c810310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6e0c810690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f6e0c80d880" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6e0c80d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c80dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f6e0c802020" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6e0c802020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c8023a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f6e0c7f9bd0" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6e0c7f9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c7fc020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c7fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f6e0c7fc530" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f6e0c7fc530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0c7fc8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c7fca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f6e0c7fd140" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6e0c7fd140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c7fd4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f6e0c801c50" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6e0c801c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c7e8020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c7e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f6e0c7e8540" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f6e0c7e8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c7e88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c7e8a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c7e8be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c7e8d70"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c7e7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c7e71b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c7e7340"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c7e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f6e0c7df910" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6e0c7df910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da34870"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6e0da34be0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6e0c7e2780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f6e0c7e4150" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6e0c7e4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c7e44d0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c7e4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f6e0c7e49f0" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f6e0c7e49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c7e4d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c7e3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c7e31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c7e3340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c7e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c7e3660"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c7e37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c7e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f6e0c7e6c90" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6e0c7e6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da34870"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6e0da34be0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6e0c7bfac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f6e0c7bca90" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6e0c7bca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da34870"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6e0da34be0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6e0c7ad8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6e0c7ac020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0c7ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da34870"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6e0da34be0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c7ace30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c7ab800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c7ab340"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c7abcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f6e0c7a6530" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6e0c7a6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da34870"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6e0da34be0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c7a53d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c7a5d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c7a5890"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c7a4260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6e0c79f020" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0c79f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0c79f3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0c79f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0c79f6c0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c79f850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0c79f9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c79fb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0c79fd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c79e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c79e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0c79e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0c79e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6e0c7a3e50" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0c7a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da34870"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6e0da34be0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c7a1ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c7a0670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c7a01b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c7a0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f6e0c7e9590" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f6e0c7e9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c7e9910"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c7e9aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c7e9c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c7e9dc0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c79a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c79a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c79a340"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c79a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6e0c798c50" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6e0c798c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c797020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c7971b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6e0c797340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c7974d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c797660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6e0c7977f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c797980"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c797b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6e0c797ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6e0c797e30"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c796020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6e0c7961b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6e0c796340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6e0c7965d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c796760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6e0c7999e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6e0c7999e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c799d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c798020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c7981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c798340"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c7984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c798660"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c7987f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c798980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6e0c79ba10" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6e0c79ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0c79bd90"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c790020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6e0c781cb0" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0c781cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6e0c7800a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6e0c780230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6e0c7803c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6e0c780550"/>
        <function-ref name="setCca" scoped="" ref="0x7f6e0c7806e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6e0c780870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f6e0c77d990" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6e0c77d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6e0c77dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f6e0c781020" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6e0c781020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c7813a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c781530"/>
        <function-ref name="modify" scoped="" ref="0x7f6e0c7816c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c781850"/>
        <function-ref name="resend" scoped="" ref="0x7f6e0c7819e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6e0c7846c0" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6e0c7846c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0c784a40"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c784bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f6e0c77f150" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6e0c77f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6e0c77f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6e0c778650" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0c778650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6e0c7789d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6e0c778b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6e0c778cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6e0c778e80"/>
        <function-ref name="setCca" scoped="" ref="0x7f6e0c777030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6e0c7771c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6e0c76f7c0" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6e0c76f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6e0c76ed50"/>
        <function-ref name="clear" scoped="" ref="0x7f6e0c76d4c0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6e0c76e620"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c76dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f6e0c757020" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c757020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c7573a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c757530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f6e0c757890" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6e0c757890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c757c10"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c757da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f6e0c7775e0" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6e0c7775e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6e0c777960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f6e0c75a530" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c75a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c75a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f6e0c76a880" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f6e0c76a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6e0c76ac00"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0c76ad90"/>
        <function-ref name="captured" scoped="" ref="0x7f6e0c768020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6e0c7681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f6e0c7767f0" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f6e0c7767f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c772090"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c773090"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0c773a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c773550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0c772550"/>
        <function-ref name="start" scoped="" ref="0x7f6e0c7746a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c774bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6e0c772a00" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c772a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0c772d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0c770020"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0c7701b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0c770340"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0c7704d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0c770660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f6e0c75c550" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c75c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c75c8d0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c75ca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f6e0c75ce00" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c75ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c75b1c0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c75b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f6e0c74fd40" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6e0c74fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c7520e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6e0c752270"/>
        <function-ref name="sfd" scoped="" ref="0x7f6e0c752400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0c7798c0" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0c7798c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c779c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c779dd0"/>
        <function-ref name="modify" scoped="" ref="0x7f6e0c778020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c7781b0"/>
        <function-ref name="resend" scoped="" ref="0x7f6e0c778340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f6e0c75fd10" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c75fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6e0c75e0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6e0c75e270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6e0c75e400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f6e0c75ac60" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c75ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c759020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6e0c762820" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6e0c762820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c762ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c762d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c761020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c7611b0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c761340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c7614d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c761660"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c7617f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c77a820" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c77a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c77aba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6e0c7709a0" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c7709a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c770d20"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0c76f020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0c76f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f6e0c763b30" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6e0c763b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c76a020"/>
        <function-ref name="isSet" scoped="" ref="0x7f6e0c76a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c76a340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c76a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f6e0c7593e0" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c7593e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c759960"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c759af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6e0c75f020" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6e0c75f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c75f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c75f530"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c75f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c75f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c75f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f6e0c768500" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f6e0c768500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c768980"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c768b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c768ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c768e30"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c762020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c7621b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c762340"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c7624d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f6e0c756130" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6e0c756130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c7564b0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c756640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f6e0c7569c0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c7569c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c756d40"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c755020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f6e0c75b6d0" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6e0c75b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c75ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f6e0c761b40" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f6e0c761b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c760020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c7601b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c760340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c7604d0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c760660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c7607f0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c760980"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c760b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0c7526c0" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0c7526c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0c752a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0c752bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0c752d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0c751020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0c7511b0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c751340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0c7514d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0c751b10"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c751660"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0c7517f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0c751980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f6e0c7585e0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c7585e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c758960"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c758af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6e0c779020" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6e0c779020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0c7793a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c779530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f6e0c75e780" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c75e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c75eb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c75ec90"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c75ee20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c75c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c75c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f6e0c75bde0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6e0c75bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c75a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f6e0c759e80" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6e0c759e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c758220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f6e0c777d70" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6e0c777d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6e0c776180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6e0c6b4c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c6b4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b3210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6e0c6be020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c6be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6e0c6b8c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c6b8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b7020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6e0c6b2670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c6b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b29f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6e0c6abe50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c6abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6aa210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6e0c6b2e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c6b2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b1210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6e0c69e2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c69e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c69e670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c69e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6e0c6a02f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6e0c6a02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a0670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6e0c6bd370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c6bd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6bd6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6e0c6a6670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6e0c6a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a69f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6e0c6a22f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c6a22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a2670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6e0c6b7c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6e0c6b7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b5020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6e0c6b5c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c6b5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b4020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6e0c6ac670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c6ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6ac9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6acb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6e0c6aee50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6e0c6aee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6ad210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6e0c6b1670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c6b1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b19f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6e0c6c08f0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c6c08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6e0c6c0c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6e0c6c0e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6e0c6bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6e0c6bcd00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c6bcd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6ba0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6e0c6ba370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6e0c6ba370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6e0c6a5a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c6a5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a5df0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6e0c6baac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c6baac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6bae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6e0c6a2ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c6a2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a2e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6e0c6bc060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c6bc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6bc3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6e0c6a7e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c6a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a6210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6e0c6b5480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c6b5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b5800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6e0c6b7480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c6b7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b7800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6e0c6bf940" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c6bf940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6bfcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6e0c6a9e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c6a9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a7210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6e0c6aa670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c6aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6aa9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6aab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6e0c6a7670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c6a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a79f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6e0c69fad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c69fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c69fe50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c69e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6e0c6a0ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6e0c6a0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a0e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c69f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6e0c6ad670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6e0c6ad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6ad9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6adb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6e0c6aae50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c6aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a9210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6e0c6a3ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c6a3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a3e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6e0c6b0670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c6b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b09f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6e0c69ead0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c69ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c69ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c69d020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c69d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c69d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c69d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6e0c6bf2f0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6e0c6bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6bf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6e0c6b8490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6e0c6b8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b8810"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6e0c6b4480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c6b4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b4800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6e0c6ace50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c6ace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6ab210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6e0c6b1e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c6b1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b0210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6e0c6ab670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c6ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6ab9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6abb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6e0c6b3670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c6b3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b39f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6e0c6be670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6e0c6be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6be9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6e0c6b3e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c6b3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6b2210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6b23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c6c1c30" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c6c1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c6c0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c6c01b0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c6c0340"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c6c04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c6c0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6e0c6b9160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c6b9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6b94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6e0c6b9e00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6e0c6b9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6b81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6e0c6a32f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6e0c6a32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a3670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6e0c6a4ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c6a4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a4e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6e0c6bc6b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c6bc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6bca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6e0c6a42f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c6a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a4670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6e0c69f2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6e0c69f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c69f670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c69f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6e0c6ade50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c6ade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6ac210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6ac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6e0c6a9670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c6a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a99f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6e0c6becc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6e0c6becc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6bd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6e0c6bd9c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c6bd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6bdd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6e0c6b0e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c6b0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6ae210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6e0c6b97b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6e0c6b97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c6b9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6e0c6ae670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c6ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6ae9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6aeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6e0c6a6e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c6a6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6a5610"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6a57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6e0c69d7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c69d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c69db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c69dcb0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c69de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c69c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c69c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f6e0c691df0" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6e0c691df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c68e1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6e0c68e350"/>
        <function-ref name="sfd" scoped="" ref="0x7f6e0c68e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0c68e7c0" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0c68e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c68eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f6e0c68d020" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f6e0c68d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6e0c68d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6e0c6915c0" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6e0c6915c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0c691940"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c691ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f6e0c685380" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f6e0c685380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c685700"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c685890"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c685a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c685bb0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c685d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c684020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c6841b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c684340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f6e0c67eb90" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0c67eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6e0c67d020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6e0c67d1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6e0c67d340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6e0c67d4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6e0c67d660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6e0c67d7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6e0c67d980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6e0c67db10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6e0c67dca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6e0c67de30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6e0c67c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6e0c67c1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f6e0c67c340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6e0c67c5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6e0c67c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f6e0c6679d0" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f6e0c6679d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0c667d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0c666020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6e0c67cd70" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6e0c67cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6e0c679330"/>
        <function-ref name="clear" scoped="" ref="0x7f6e0c679a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f6e0c67bba0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c678210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f6e0c6846b0" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f6e0c6846b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c684a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c684bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c684d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c683020"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c6831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c683340"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c6834d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c683660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f6e0c677cb0" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c677cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6760a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c676230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f6e0c676590" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6e0c676590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c676910"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c676aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f6e0c6756d0" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c6756d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c675a50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c675be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6e0c67f330" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c67f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0c67f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0c67f840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0c67f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0c67fb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0c67fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0c67fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f6e0c688550" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6e0c688550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c6888d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6e0c688a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f6e0c688bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f6e0c6803a0" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6e0c6803a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c680720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6e0c686020" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6e0c686020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6e0c6863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6e0c686530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6e0c6866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6e0c686850"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c6869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6e0c686b70"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c686d00"/>
        <function-ref name="clr" scoped="" ref="0x7f6e0c685020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f6e0c674020" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c674020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6743a0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c674530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c68a620" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c68a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c68a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6e0c67e1e0" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c67e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c67e560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0c67e6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0c67e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0c687020" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0c687020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c6873a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6e0c6826e0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6e0c6826e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c682a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c682bf0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c682d80"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c681020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c6811b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f6e0c676e00" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6e0c676e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c6751c0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c675350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f6e0c681530" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c681530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c6818b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c681a40"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c681bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c681d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c680020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f6e0c6748b0" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6e0c6748b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c674e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f6e0c6877c0" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f6e0c6877c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6e0c687b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0c672150" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0c672150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0c6724d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0c672660"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0c6727f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0c672980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0c672b10"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c672ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0c672e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0c6714d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c671020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0c6711b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0c671340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f6e0c6773e0" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c6773e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c677760"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c6778f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f6e0c678b10" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c678b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c677020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f6e0c683a50" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6e0c683a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6e0c683dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f6e0c682020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6e0c6821b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6e0c682340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f6e0c680ad0" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c680ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c67f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6e0c68aca0" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6e0c68aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6e0c6880a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c688230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6e0c606a70" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0c606a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6e0c606df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6e0c60a660" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c60a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0c60a9e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0c60ab70"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0c60ad00"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0c607020"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0c6071b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0c607340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6e0c605550" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0c605550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6e0c604b00"/>
        <function-ref name="clear" scoped="" ref="0x7f6e0c6022a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6e0c6043d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c6029d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f6e0c6060c0" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c6060c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c606440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0c6065d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0c606760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f6e0c5fd480" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6e0c5fd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c5fd800"/>
        <function-ref name="isSet" scoped="" ref="0x7f6e0c5fd990"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c5fdb20"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c5fdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6e0c601660" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6e0c601660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6e0c600ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f6e0c5fe460"/>
        <function-ref name="isValid" scoped="" ref="0x7f6e0c6005b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c5feb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6e0c6076e0" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6e0c6076e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0c607a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0c607bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0c607d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6e0c5f7020" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6e0c5f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6e0c5f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6e0c5fcd10" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c5fcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0c5f90e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0c5f9270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0c5f9400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0c5f9590"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0c5f9720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0c5f98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6e0c5ee4a0" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0c5ee4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0c5ee820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0c5ee9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c5eeb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c5eecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0c5eee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6e0c5f7a80" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6e0c5f7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6e0c5f4020"/>
        <function-ref name="clear" scoped="" ref="0x7f6e0c5f4750"/>
        <function-ref name="isValid" scoped="" ref="0x7f6e0c5f68d0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c5f4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f6e0c5f8640" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c5f8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c5f89c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0c5f8b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0c5f8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f6e0c5ef8b0" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6e0c5ef8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c5efc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f6e0c5efdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c5ee020"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c5ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f6e0c5ea820" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f6e0c5ea820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c5ec4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f6e0c5ecb80" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f6e0c5ecb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c5eb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6e0c5f3af0" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6e0c5f3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6e0c5f00d0"/>
        <function-ref name="clear" scoped="" ref="0x7f6e0c5f0800"/>
        <function-ref name="isValid" scoped="" ref="0x7f6e0c5f2970"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c5ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6e0c5f9c50" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6e0c5f9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0c5f8020"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0c5f81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0c5f8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6e0c5994e0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6e0c5994e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c590150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6e0c5907c0" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0c5907c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c58e620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c58d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c58eae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c58d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6e0c5887d0" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f6e0c5887d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c57cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c57d260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6e0c57c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6e0c57db60"/>
        <function-ref name="getdt" scoped="" ref="0x7f6e0c57a590"/>
        <function-ref name="gett0" scoped="" ref="0x7f6e0c57a110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c57d6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6e0c587400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6e0c57c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6e0c5878d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c587da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6e0c57ab80" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6e0c57ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c5797d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c589110" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c589110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c589490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6e0c549af0" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0c549af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c546390"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c547360"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0c547ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c547820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0c546850"/>
        <function-ref name="start" scoped="" ref="0x7f6e0c548970"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c548e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c5492a0" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c5492a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c549620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6e0b957260" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0b957260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0b955b30"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0b956a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0b9554e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0b955020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0b953020"/>
        <function-ref name="start" scoped="" ref="0x7f6e0b956090"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0b9565a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0b9589d0" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0b9589d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0b958d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6e0b93fa80" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0b93fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0b93fe00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0b93d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0b93d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0b93d340"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0b93d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6e0b941020" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0b941020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0b9413a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0b941530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0b9416c0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0b941850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0b9419e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0b941b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0b941d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0b940020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0b9401b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0b940340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0b9404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6e0b940760" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0b940760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0b940ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0b940c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0b940e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0b93f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0b93f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0b93f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0b93f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0b93f660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0b93f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f6e0b934760" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6e0b934760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6e0b934ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6e0b934c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6e0b934e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6e0b933020"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0b9331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6e0b938dd0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6e0b938dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0b937180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6e0b937310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0b9374a0"/>
        <function-ref name="get" scoped="" ref="0x7f6e0b937630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0b9377c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0b937950"/>
        <function-ref name="getMode" scoped="" ref="0x7f6e0b937ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0b937c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0b937e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f6e0b936020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6e0b9361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6e0b93bbf0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0b93bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0b9384e0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0b9394e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0b939e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0b9399a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0b9389a0"/>
        <function-ref name="start" scoped="" ref="0x7f6e0b93aa80"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0b939020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0b93b360" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0b93b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0b93b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6e0b936440" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6e0b936440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6e0b9367c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6e0b936950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6e0b936ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6e0b936c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6e0b936e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6e0b934020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6e0b9341b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6e0b934340"/>
        <function-ref name="setControl" scoped="" ref="0x7f6e0b9344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6e0c565080" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0c565080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c564020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c5649a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c5644e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c564e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f6e0c55d0f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f6e0c55d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c55b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c55b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c55b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c55be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6e0c561cd0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0c561cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c55fb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c55e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c55e090"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c55ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6e0b9515f0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0b9515f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0b94fe50"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0b950e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0b94f800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0b94f340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0b94e340"/>
        <function-ref name="start" scoped="" ref="0x7f6e0b950430"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0b950940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f6e0b94bd20" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f6e0b94bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da340c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6e0da34430"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0b948670"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0b949550"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0b948020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0b949a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0b948b30"/>
        <function-ref name="start" scoped="" ref="0x7f6e0b94ab60"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0b949090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6e0b94e9b0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0b94e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0b94c7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0b94b1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0b94cca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0b94b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f6e0c513020" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f6e0c513020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0c5133a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0c513530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f6e0c518cd0" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6e0c518cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c514670"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c516550"/>
        <function-ref name="startAt" scoped="" ref="0x7f6e0c514020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c516a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6e0c514b30"/>
        <function-ref name="start" scoped="" ref="0x7f6e0c517b60"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c516090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6e0c51d830" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0c51d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c519cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c51b300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6e0c5190d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6e0c51bc00"/>
        <function-ref name="getdt" scoped="" ref="0x7f6e0c518660"/>
        <function-ref name="gett0" scoped="" ref="0x7f6e0c5181e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c51b780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6e0c51c480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6e0c5196e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6e0c51c950"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c51ce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f6e0c4c3a00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f6e0c4c3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0c4c3d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0c4c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f6e0c4c8640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f6e0c4c8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c4c4c40"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c4c51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6e0c4c4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6e0c4c5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6e0c4c3590"/>
        <function-ref name="gett0" scoped="" ref="0x7f6e0c4c3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c4c5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6e0c4c7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6e0c4c4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6e0c4c7860"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c4c7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6e0c4ce150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0c4ce150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c4ca700"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c4cdc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6e0c4cba50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6e0c4cb5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6e0c4c8090"/>
        <function-ref name="gett0" scoped="" ref="0x7f6e0c4caba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c4cb110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6e0c4ced60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6e0c4ca0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6e0c4cd2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c4cd790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6e0c4bf2b0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6e0c4bf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c4be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6e0c4be690" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6e0c4be690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6e0c4bd5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6e0c4bc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6e0c4bda70"/>
        <function-ref name="overflow" scoped="" ref="0x7f6e0c4bc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6e0c4b58c0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6e0c4b58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c4a2cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c4a3320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6e0c4a20d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6e0c4a3c20"/>
        <function-ref name="getdt" scoped="" ref="0x7f6e0c4a0660"/>
        <function-ref name="gett0" scoped="" ref="0x7f6e0c4a01e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c4a37a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6e0c4a44e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6e0c4a26e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6e0c4a49b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c4a4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6e0c4ac2c0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f6e0c4ac2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6e0da368c0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6e0da36c30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6e0c4a9870"/>
        <function-ref name="fired" scoped="" ref="0x7f6e0c4abe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6e0c4aac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6e0c4aa780"/>
        <function-ref name="getdt" scoped="" ref="0x7f6e0c4a71e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6e0c4a9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6e0c4aa300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6e0c4ab020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6e0c4a9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6e0c4ab4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c4ab9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6e0c490c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6e0c490c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48f210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6e0c49a020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6e0c49a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c49a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6e0c494c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6e0c494c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c492020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6e0c48e670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6e0c48e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6e0c487e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6e0c487e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c485210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6e0c48ee50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6e0c48ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48d210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6e0c47a2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6e0c47a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47a670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6e0c47c2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6e0c47c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47c670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6e0c498370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6e0c498370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c4986f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6e0c482670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6e0c482670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c4829f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c482b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6e0c47d2f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6e0c47d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47d670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6e0c492c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6e0c492c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c491020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6e0c491c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6e0c491c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c490020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6e0c488670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6e0c488670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c4889f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c488b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6e0c48ae50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6e0c48ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c489210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6e0c48d670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6e0c48d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6e0c49c970" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6e0c49c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6e0c49ccf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6e0c49ce80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6e0c49b030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6e0c497d00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6e0c497d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c4960a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6e0c496370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6e0c496370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c4967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6e0c481a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6e0c481a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c481df0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c480020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6e0c496ac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6e0c496ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c496e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6e0c47dad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6e0c47dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47de50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6e0c497060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6e0c497060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c4973e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6e0c483e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6e0c483e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c482210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6e0c491480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6e0c491480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c491800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c491990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6e0c492480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6e0c492480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c492800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c492990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6e0c49b950" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6e0c49b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c49bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6e0c484e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6e0c484e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c483210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6e0c485670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6e0c485670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c4859f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c485b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6e0c483670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6e0c483670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c4839f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c483b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6e0c47bad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6e0c47bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47be50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6e0c47cad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6e0c47cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47ce50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6e0c489670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6e0c489670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c4899f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c489b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6e0c485e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6e0c485e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c484210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6e0c47fad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6e0c47fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47fe50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6e0c48b670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6e0c48b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6e0c47aad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6e0c47aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c47ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c479020"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4791b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c479340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c4794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6e0c49b300" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6e0c49b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c49b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6e0c494490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6e0c494490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c494810"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4949a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6e0c490480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6e0c490480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c490800"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c490990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6e0c488e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6e0c488e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c487210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6e0c48de50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6e0c48de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48b210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6e0c487670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6e0c487670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c4879f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c487b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6e0c48f670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6e0c48f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6e0c49a670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6e0c49a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c49a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6e0c48fe50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6e0c48fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48e210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c49dd00" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c49dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c49c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c49c230"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c49c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c49c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c49c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6e0c495160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6e0c495160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c4954e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6e0c495e00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6e0c495e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c4941c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6e0c47f2f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6e0c47f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47f670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6e0c480ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6e0c480ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c480e50"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6e0c4976b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6e0c4976b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c497a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6e0c4802f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6e0c4802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c480670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c480800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6e0c47b2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6e0c47b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c47b670"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c47b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6e0c489e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6e0c489e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c488210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6e0c484670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6e0c484670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c4849f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c484b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6e0c49acc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6e0c49acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c4980a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6e0c4989c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6e0c4989c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c498d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6e0c48be50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6e0c48be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48a210"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6e0c4957b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6e0c4957b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6e0c495b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6e0c48a670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6e0c48a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c48a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c48ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6e0c482e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6e0c482e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6e0c481610"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c4817a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6e0c4797a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6e0c4797a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6e0c479b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6e0c479cb0"/>
        <function-ref name="write" scoped="" ref="0x7f6e0c479e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6e0c478020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6e0c4781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6e0c44fa20" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6e0c44fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6e0c44fda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6e0c44e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6e0c44d920" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f6e0c44d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c44f560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c453990" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c453990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c453d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6e0c448a20" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6e0c448a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6e0c448da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6e0c447020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6e0c449940" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f6e0c449940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c448560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c449080" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c449080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c449400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6e0c451aa0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6e0c451aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0c451e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0c44b020"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0c44b1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0c44b340"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0c44b4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0c44b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6e0c42d020" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6e0c42d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c42d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c42d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c42d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c42d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c42d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0c42e220" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0c42e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c42e5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c42e730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c42e8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c42ea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c42ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6e0c429e60" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6e0c429e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c428210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c4283a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c428530"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c4286c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c428850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0c42ca10" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0c42ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c42cd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c429020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c4291b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c429340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c4294d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6e0c4278f0" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6e0c4278f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6e0c427c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f6e0c427e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c429750" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c429750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c429ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6e0c425170" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c425170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c4254f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0c425680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0c425810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f6e0c428ae0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6e0c428ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0c428e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0c427020"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0c4271b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0c427340"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0c4274d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0c427660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6e0c42a690" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6e0c42a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0c42aa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0c42aba0"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0c42ad30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0c414020"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0c4141b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0c414340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6e0c40e950" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c40e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c40ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0c411a90" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0c411a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c411e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f6e0c40e200" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6e0c40e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c40e580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6e0c4093f0" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c4093f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c409770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c40ab50" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c40ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c409020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0c40de20" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0c40de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c40a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6e0c409a70" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c409a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c409df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0c408020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0c4081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f6e0c40a550" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6e0c40a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c40a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6e0c3d9020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c3d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c3d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6e0c3d96b0" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6e0c3d96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c3d9a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3d9bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3d9d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c3d8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c3d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0c3de8e0" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0c3de8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c3dec60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3dedf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3dd020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c3dd1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c3dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6e0c3ddc90" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6e0c3ddc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c3dc0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3dc230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3dc3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c3dc550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c3dc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0c3dd5e0" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0c3dd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c3dd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c3dfbe0" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c3dfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c3de020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c3de1b0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c3de340"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c3de4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c3de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6e0c3dca50" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6e0c3dca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c3dcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6e0c3da170" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6e0c3da170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0c3da4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0c3da680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3da810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3da9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0c3dab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6e0c3d0d70" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6e0c3d0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c3cf180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3cf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3cf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c3cf630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c3cf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6e0c3cfb10" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c3cfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c3ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f6e0c3a0db0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f6e0c3a0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6e0c39f180"/>
        <function-ref name="runTask" scoped="" ref="0x7f6e0c39f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6e0c3ce2f0" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c3ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0c3ce670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0c3ce800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0c3ce990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0c3ceb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0c3cecb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0c3cee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6e0c3d2a20" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6e0c3d2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c3d2da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3d1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3d11b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c3d1340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c3d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6e0c3ccb70" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6e0c3ccb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6e0c3cb020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6e0c3cb1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6e0c3cb340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6e0c3cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6e0c3cc170" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c3cc170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3cc4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0c3cc680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0c3cc810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6e0c3d2370" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f6e0c3d2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c3d26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6e0c3d47b0" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6e0c3d47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c3d4b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c3d4cc0"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c3d4e50"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c3d3020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c3d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6e0c3d34d0" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f6e0c3d34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c3d3850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3d39e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3d3b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c3d3d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c3d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6e0c3d1840" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6e0c3d1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c3d1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6e0c3d0020" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6e0c3d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0c3d03a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0c3d0530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3d06c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3d0850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0c3d09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6e0c380dd0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6e0c380dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6e0c37f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6e0c37f410" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6e0c37f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6e0c37f790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6e0c37f920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6e0c37fab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6e0c37fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6e0c374b80" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6e0c374b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0c373020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0c3731b0"/>
        <function-ref name="start" scoped="" ref="0x7f6e0c373340"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c3734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6e0c372860" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6e0c372860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c372be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c372d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c371020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c3711b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c371340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6e0c371690" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c371690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c371a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0c378ce0" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0c378ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c3750a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c375230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3753c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c375550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c3756e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6e0c374080" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0c374080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6e0c374400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6e0c374590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6e0c374720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6e0c3748b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f6e0c373800" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f6e0c373800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0c373b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0c373d10"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0c372020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0c3721b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0c372340"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0c3724d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6e0c371d90" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f6e0c371d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6e0c370180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6e0c370310"/>
        <function-ref name="start" scoped="" ref="0x7f6e0c3704a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6e0c370630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0c375980" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0c375980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c375d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6e0c36c2d0" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6e0c36c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6e0c36c650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6e0c36c7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6e0c36c970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6e0c36cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6e0c36e580" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6e0c36e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6e0c36e900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6e0c36ea90"/>
        <function-ref name="isState" scoped="" ref="0x7f6e0c36ec20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6e0c36edb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6e0c36d020"/>
        <function-ref name="forceState" scoped="" ref="0x7f6e0c36d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6e0c35fd70" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6e0c35fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c35e180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c35e310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c35e4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c35e630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c35e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6e0c362340" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6e0c362340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c3626c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c362850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c3629e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c362b70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c362d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6e0c35f020" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6e0c35f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6e0c35f3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6e0c35f530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6e0c35f6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6e0c35f850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6e0c35f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f6e0c35a1a0" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6e0c35a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6e0c35a520"/>
        <function-ref name="noAck" scoped="" ref="0x7f6e0c35a6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6e0c35a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6e0c35d400" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6e0c35d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6e0c35d780"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6e0c35d910"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6e0c35daa0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6e0c35dc30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6e0c35ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6e0c33a690" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6e0c33a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c33aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6e0c33c860" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6e0c33c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c33cbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c33cd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c33a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c33a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c33a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f6e0c338610" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6e0c338610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6e0c338990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6e0c338b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6e0c338cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6e0c338e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6e0c337020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6e0c3371b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6e0c337340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6e0c3374d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6e0c337660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6e0c3377f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6e0c337980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6e0c337b10"/>
        <function-ref name="sync" scoped="" ref="0x7f6e0c337ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6e0c336020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6e0c3361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6e0c33d8b0" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6e0c33d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6e0c33dc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6e0c33ddc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6e0c33c020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6e0c33c1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f6e0c33c340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6e0c33c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6e0c33ece0" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f6e0c33ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6e0c33d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f6e0c3351f0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f6e0c3351f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6e0c335570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6e0c335700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6e0c335890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6e0c335a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f6e0c335bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6e0c335d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6e0c33fa80" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0c33fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0c33fe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0c33e020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c33e1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c33e340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0c33e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6e0c345e80" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6e0c345e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6e0c342220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c3423b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c342540"/>
        <function-ref name="cancel" scoped="" ref="0x7f6e0c3426d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6e0c342860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6e0c341db0" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6e0c341db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c340180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6e0c33ace0" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6e0c33ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6e0c3390a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6e0c339230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6e0c3393c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6e0c339550"/>
        <function-ref name="getPower" scoped="" ref="0x7f6e0c3396e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6e0c339870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6e0c3364d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6e0c3364d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6e0c336950"/>
        <function-ref name="changed" scoped="" ref="0x7f6e0c336ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6e0c336c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6e0c336e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6e0c339b70" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6e0c339b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c338020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6e0c3381b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6e0c338340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0c3411d0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0c3411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c341550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6e0c334d30" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6e0c334d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6e0c3330e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6e0c333270"/>
        <function-ref name="led1On" scoped="" ref="0x7f6e0c333400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6e0c333590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6e0c333720"/>
        <function-ref name="get" scoped="" ref="0x7f6e0c3338b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6e0c333a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6e0c3321b0"/>
        <function-ref name="set" scoped="" ref="0x7f6e0c333bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6e0c333d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6e0c332020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6e0c340430" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0c340430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0c3407b0"/>
        <function-ref name="source" scoped="" ref="0x7f6e0c340940"/>
        <function-ref name="address" scoped="" ref="0x7f6e0c340ad0"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0c340c60"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0c340df0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0c33f020"/>
        <function-ref name="type" scoped="" ref="0x7f6e0c33f1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0c33f340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0c33f4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0c33f660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0c33f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f6e0c3340f0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f6e0c3340f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6e0c334470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6e0c334600"/>
        <function-ref name="request" scoped="" ref="0x7f6e0c334790"/>
        <function-ref name="granted" scoped="" ref="0x7f6e0c334920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6e0c334ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6e0c28d020" loc="46:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SenseAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6e0c28d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6e0c28d3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6e0c28d530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6e0c28d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6e0c28d850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6e0c28d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6e0c28e910" loc="45:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SenseAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6e0c28e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6e0c28ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6e0c28dc30" loc="47:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SenseAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6e0c28dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6e0c28c020"/>
        <function-ref name="source" scoped="" ref="0x7f6e0c28c1b0"/>
        <function-ref name="address" scoped="" ref="0x7f6e0c28c340"/>
        <function-ref name="destination" scoped="" ref="0x7f6e0c28c4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6e0c28c660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6e0c28c7f0"/>
        <function-ref name="type" scoped="" ref="0x7f6e0c28c980"/>
        <function-ref name="setType" scoped="" ref="0x7f6e0c28cb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6e0c28cca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6e0c28ce30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6e0c28b020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <function command="" provided="0" name="group" ref="0x7f6e0d9d0840" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6e0d9ee930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9d05c0" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f6e0d9da2a0" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9da020" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f6e0d9dc570" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f6e0d9db0b0" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9dcdb0" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f6e0d9d6bd0" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9d65f0" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6e0d9d6940" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f6e0d9d86b0" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9d80d0" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6e0d9d8420" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f6e0d9d32e0" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9d3060" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f6e0d9d2680" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9d20d0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f6e0d9d23f0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6e0d9ee550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f6e0d9d40b0" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9d5e00" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f6e0d9ced00" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6e0d9ee930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6e0d9ce720" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f6e0d9cea70" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6e0d9ee930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f6e0d9ccb50" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6e0d9ee930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6e0d9c5020" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6e0d9c85e0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6e0d9c8960" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d9c8c90" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6e0d9c1660" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d9c1060" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d9c1390" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6e0d9c0790" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6e0d9c4390" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d9c4110" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6e0d9c28b0" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d9c22d0" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6e0d9c2620" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6e0d9cbbf0" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d9cb970" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f6e0d9bac90" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d9baa10" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6e0d9b5020" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d9b79d0" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d9b7d00" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6e0d9b70e0" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f6e0d9bb130" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d9b8b50" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d9b8e80" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f6e0d9b2650" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f6e0debe270" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f6e0debeac0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f6e0d9cabf0" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
              <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d9ca290" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f6e0d9ca5e0" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d9ca910" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f6e0d9aebf0" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f6e0d9ac3e0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f6e0d9acbc0" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f6e0d9abb40" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f6e0d9a92b0" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6e0d9a9ac0" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f6e0d9ab390" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6e0d9a7670" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f6e0d9a73f0" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f6e0d9ae460" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f6e0d9aa350" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f6e0d9aaae0" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f6e0da30ab0" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6e0da30830" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f6e0da2d020" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6e0da2fd30" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6e0da33ca0" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6e0da2f350" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6e0d96e2b0" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f6e0d93f270" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f6e0d942510" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f6e0d941b00" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f6e0d943de0" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f6e0d942c80" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f6e0d943020" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f6e0d943700" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f6e0d9413e0" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f6e0db4c020" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f6e0de11c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f6e0d8ee020" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f6e0d8efcc0" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f6e0d8f2390" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6e0d938da0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6e0d937860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f6e0d8ee890" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f6e0d8ec7b0" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f6e0d8ef560" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f6e0d8ec020" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f6e0d8f2b30" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f6e0d8f0350" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f6e0d8f0da0" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6e0d938da0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6e0d937860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6e0d8f0b20" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6e0d938da0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6e0d937860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f6e0d8e00e0" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f6e0d8de730" loc="84:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f6e0d8de4b0" loc="84:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6e0d8dc2e0" loc="91:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6e0d8dc060" loc="91:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6e0d8dfca0" loc="73:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6e0d8df3e0" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f6e0d8e0a90" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f6e0d8e0810" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f6e0d8e73e0" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f6e0d8e7d60" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6e0d8e7ae0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f6e0d8e6790" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f6e0d8e6510" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f6e0d8e52a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f6e0d8e5020" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6e0d8e5990" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6e0d8f7810" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f6e0d8f52a0" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f6e0d8f5020" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f6e0d8f6020" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6e0d8fdaa0" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f6e0d8f6760" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6e0d8fa9b0" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f6e0d8f7120" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6e0d8fa270" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f6e0d8f90e0" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f6e0d8f99f0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6e0d8f9770" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f6e0d8f5cb0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f6e0d8f5a30" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6e0d8ba9f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f6e0da6fa80" loc="85:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f6e0da6e1f0" loc="86:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f6e0da6f2b0" loc="79:../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f6e0dc88810" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6e0deca020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f6e0dec9020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f6e0deca790" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f6e0d78ee30" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f6e0d78d5c0" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f6e0d78e020" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f6e0d78c480" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6e0d78e720" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f6e0d78dce0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6e0d790120" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f6e0d7907f0" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f6e0d762020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f6e0d762770" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f6e0d75d2e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6e0d75d060" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f6e0d765770" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f6e0d761780" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f6e0d75dbd0" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f6e0d761020" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6e0d763820" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f6e0d75e020" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f6e0d763020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6e0d7688b0" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f6e0d760020" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f6e0d75e7c0" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f6e0d7607e0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f6e0d765020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f6e0d523770" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d5234f0" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f6e0d520940" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d5206c0" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f6e0d51eab0" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d51e830" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6e0d5122b0" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d515b70" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d512020" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6e0d50e890" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d50e290" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d50e5c0" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6e0d50d9b0" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6e0d5115f0" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d511370" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6e0d50fac0" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d50f4e0" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6e0d50f830" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f6e0d4ad670" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d4ad060" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f6e0d4ad3e0" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f6e0d4b0820" loc="15:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f6e0d4ae6d0" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0d4ae0d0" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f6e0d4ae440" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f6e0d493b60" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6e0d490390" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f6e0d48e1f0" loc="54:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f6e0d492a20" loc="49:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f6e0d4a2c20" loc="56:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f6e0d4970e0" loc="72:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f6e0d496d00" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0d496a80" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f6e0d497960" loc="79:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f6e0d4987e0" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0d498560" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f6e0d4945b0" loc="100:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f6e0d496270" loc="85:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f6e0d4a0780" loc="71:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f6e0d49f0e0" loc="81:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f6e0d4a3d80" loc="62:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f6e0d4a3b00" loc="62:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f6e0d49fc60" loc="91:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6e0d49f9e0" loc="91:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f6e0d49d8f0" loc="62:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f6e0d49c5b0" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0d49c330" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f6e0d49a0b0" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6e0d49ce00" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6e0d368dd0" loc="48:../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6e0d368800" loc="48:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d368b40" loc="48:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f6e0d363ac0" loc="79:../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f6e0d363840" loc="79:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f6e0d360930" loc="90:../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6e0d360360" loc="90:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d3606a0" loc="90:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f6e0d362740" loc="65:../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f6e0d35d2c0" loc="99:../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6e0d35e920" loc="99:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d35ec60" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6e0d35d020" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f6e0d363070" loc="72:../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6e0d364720" loc="57:../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6e0d365db0" loc="57:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0d364130" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6e0d364480" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6e0d33e5b0" loc="50:../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f6e0d33e330" loc="50:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f6e0d33edf0" loc="59:../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f6e0d33dcf0" loc="69:../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f6e0d33d700" loc="69:../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f6e0d33da60" loc="69:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f6e0d33ab50" loc="79:../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f6e0d2e2270" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f6e0d2e2ba0" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f6e0d2de070" loc="39:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6e0d305450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f6e0d305870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f6e0d2e69c0" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f6e0d2e7990" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f6e0d2e7020" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6e0d2e61f0" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f6e0d2e4470" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f6e0d2d7510" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f6e0d2dacb0" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f6e0d2ce2a0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0d2ce020" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f6e0d2cf780" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f6e0d2a9af0" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f6e0d2b4790" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f6e0d2c1530" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d336360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6e0d336ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6e0d2c12b0" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d336360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6e0d336ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f6e0d2b7870" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f6e0d2bea40" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d3312d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6e0d331b10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6e0d2be7c0" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d3312d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6e0d331b10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f6e0d2aee70" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f6e0d2aa480" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f6e0d2be020" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d333230"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6e0d3339c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f6e0d2bd270" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d3312d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6e0d331b10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f6e0d2b9020" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f6e0d2bad30" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f6e0d2ba610" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f6e0d2ae740" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f6e0d2bf780" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d333230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6e0d3339c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6e0d2bf500" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d333230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6e0d3339c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f6e0d2bc420" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f6e0d2ac5d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f6e0d2bce00" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f6e0d2bcb80" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f6e0d2b8910" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f6e0d2b70e0" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f6e0d2af840" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f6e0d2b1790" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f6e0d2b57e0" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f6e0d2ae020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f6e0d2b3020" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f6e0d2accf0" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f6e0d2b9800" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f6e0d33f320"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f6e0d338a10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f6e0d2ab4c0" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f6e0d2a9350" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f6e0d2bdc10" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f6e0d2bd990" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f6e0d2a74d0" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0d2a7250" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f6e0d2c1d10" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6e0d336360"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6e0d336ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f6e0d2b5020" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f6e0d2b3770" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f6e0d2af020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6e0d305450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f6e0d305870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6e0d2b0cf0" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6e0d305450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f6e0d305870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f6e0d2b02a0" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6e0d319420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6e0d319840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6e0d2b0020" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6e0d319420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6e0d319840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f6e0d2a7d90" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f6e0d2abcb0" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f6e0d2b8070" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f6e0d2aabe0" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f6e0d2b1020" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f6e0d2b4020" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0d2a0410" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0d2a0410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6e0d2a0650" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0d2a0650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6e0d29f020" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0d2a0650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6e0d29d120" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6e0d29f8a0" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f6e0d29d880" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f6e0d22d860" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6e0d22c0e0" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f6e0d16c020" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f6e0d16c880" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6e0d157420" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f6e0d13d270" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f6e0d13c350" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6e0d1419c0" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f6e0d13dae0" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f6e0d13cc80" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f6e0d1314c0" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6e0d13a3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6e0d131240" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6e0d13a3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f6e0d1333b0" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f6e0d132020" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6e0d13a3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6e0d133c30" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6e0d13a3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f6e0d132930" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f6e0d13a3f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f6e0d0c5770" loc="62:../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0cfed320" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0cfed320"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6e0cfed560" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cfed560"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f6e0cfe9510" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cfed560"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfe9290" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f6e0cfe86c0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfe8440" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f6e0cfea2a0" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfea020" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6e0cfe69c0" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cfed560"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfe63d0" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f6e0cfe6730" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cfed560"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f6e0cfdab50" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfda530" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f6e0cfda8c0" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f6e0cfd8d00" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfd8a80" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f6e0cfdcc60" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f6e0cfdc2a0" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f6e0cfdc020" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f6e0cfb3980" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfb3700" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f6e0cfb5c30" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfb59b0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f6e0cfb7350" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f6e0cfb70d0" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f6e0cfb9800" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f6e0cfb9580" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f6e0cfb7d80" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f6e0cfb7b00" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f6e0cfb4b10" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfb4890" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f6e0cfa62b0" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f6e0cfb1c50" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6e0cfa6020" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f6e0cfc2810" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6e0cfc2230" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f6e0cfc2580" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f6e0cfbee20" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6e0cfbe820" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f6e0cfbeb90" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f6e0cfc0350" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f6e0e54c110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6e0cfc00d0" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f6e0cfbfd30" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6e0cfbfab0" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f6e0cfc39c0" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6e0cfc3740" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f6e0cfc0e80" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6e0cfc0c00" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f6e0cfaab30" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfaa8b0" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f6e0cfafbc0" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfaf5a0" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f6e0cfaf930" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f6e0cfaead0" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfae850" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f6e0cfae020" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfad9c0" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f6e0cfadd50" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f6e0cfa9b70" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfa98f0" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f6e0cfba780" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cfba500" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6e0cf81360" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6e0cf8bd30" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f6e0cf810d0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6e0cf7f6a0" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f6e0cf7de70" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6e0cf7d060" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f6e0cf7d8a0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0cf7dbd0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6e0cf7e840" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6e0cf7e260" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6e0cf7e5b0" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f6e0cf81df0" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f6e0cf81b70" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f6e0cf780e0" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f6e0cf7b860" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f6e0cf732e0" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cf73020" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f6e0cf74710" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f6e0da28020"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f6e0da279c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cf74410" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f6e0cf71620" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f6e0da25510"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f6e0da24dd0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0cf71320" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f6e0cf88070" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f6e0cf850e0" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f6e0cf868f0" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f6e0cf8a730" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f6e0cf897e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f6e0cf888e0" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f6e0cf86120" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f6e0cf89020" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f6e0cf6cd00" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f6e0cf6e350" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f6e0cf6c530" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f6e0cf6c2b0" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f6e0cf6eac0" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f6e0cf6f020" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f6e0cf76c80" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f6e0cf6fad0" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f6e0cf6f850" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f6e0cf11870" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f6e0cf11290" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f6e0cf115e0" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f6e0cf121f0" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f6e0cf13880" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f6e0cf13210" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f6e0cf135f0" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f6e0cf1ac10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6e0cf1a990" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f6e0cf12a70" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f6e0cf16730" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f6e0cf164b0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f6e0cf19d30" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6e0cf19ab0" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f6e0cf10ae0" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f6e0cf159c0" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f6e0cf15740" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f6e0cf102b0" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f6e0cf174d0" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f6e0cfd5020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f6e0cfd5780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f6e0cf17cc0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f6e0cf1a1f0" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f6e0cf19390" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f6e0cf15020" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f6e0cf0d4a0" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6e0cf0d4a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f6e0cf0dd60" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6e0cf0aac0" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6e0cf0d4a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6e0cf0a510" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f6e0cf0a830" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6e0cf0d4a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6e0cee1c10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6e0da2a170"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cee1990" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6e0cedf710" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6e0da2a170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cedf490" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f6e0cf00c50" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f6e0cfd5020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f6e0cfd5780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0cefc020" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0cefc020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6e0cefc260" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6e0cef8e00" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6e0cefbe40" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f6e0cef8460" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6e0cef9e60" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f6e0cef81d0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6e0cef9640" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f6e0cef7620" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6e0cefcdc0" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6e0cefcb40" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0cefc260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6e0cefb680" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f6e0cee9560" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f6e0cee84f0" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f6e0cee9d40" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6e0d9ee930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f6e0ceeacd0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6e0d9ee930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f6e0ceea6f0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6e0d9ee930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6e0ceeaa40" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6e0d9eed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f6e0cedce40" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6e0da2a170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6e0cee5e80" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6e0da2a170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6e0cee5020" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6e0cee5890" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6e0cee5be0" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6e0cee3610" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6e0da2a170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6e0cee4770" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6e0cee3020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6e0cee3370" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6e0ceecc30" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6e0ceec470" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f6e0ceeece0" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f6e0ceee420" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f6e0cd29020" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6e0cd281f0" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6e0cd299c0" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6e0cd29740" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f6e0cd2a770" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6e0cd05020" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6e0cd04ac0" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6e0cd077c0" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f6e0cd042a0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f6e0cd04020" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f6e0cd07020" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f6e0cd05820" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f6e0cbf2270" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f6e0cbf2ac0" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f6e0cbf1350" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f6e0cbcbb00" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cbcb520" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6e0cbcb870" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f6e0cbc6dd0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cbc6490" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6e0cbc67e0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6e0cbc6b30" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6e0cbc76b0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6e0da2a170"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cbc70d0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6e0cbc7420" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f6e0cbcc6f0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6e0da2a170"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cbcc110" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6e0cbcc460" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6e0cbc82c0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cbca8f0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6e0cbcac40" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6e0cbc8020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6e0cbacdf0" loc="76:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6e0cbac480" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6e0cbac810" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0cbacb50" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6e0cba93c0" loc="88:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6e0cba86a0" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6e0cba8a30" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0cba8d70" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6e0cba9110" loc="89:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f6e0cbb0c80" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f6e0cbb0a00" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f6e0cb15120" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6e0d319420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6e0d319840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f6e0cb1cd60" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cb1cae0" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f6e0cb182a0" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cb18020" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f6e0cb19610" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6e0cb18d30" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0cb18ab0" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f6e0ca729d0" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f6e0ca84420" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f6e0ca78620" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6e0ca783a0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f6e0ca8daf0" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f6e0ca76c50" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f6e0ca7d5e0" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f6e0ca85540" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f6e0ca822d0" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f6e0ca86500" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f6e0ca86280" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f6e0ca89a10" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f6e0ca80070" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f6e0ca77550" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f6e0ca72270" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f6e0ca7ac30" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f6e0ca6d350" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f6e0ca699d0" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f6e0ca8b980" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f6e0ca818b0" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f6e0ca7f1f0" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f6e0ca86dc0" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f6e0ca8e8c0" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f6e0ca7a460" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6e0ca7a1e0" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f6e0ca8e190" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f6e0ca764d0" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f6e0ca71190" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f6e0ca6cb00" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f6e0ca69270" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f6e0ca74b90" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f6e0ca718c0" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f6e0ca78db0" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f6e0ca6e390" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f6e0ca8a0e0" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f6e0ca7c7e0" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f6e0ca6f7b0" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f6e0ca73ac0" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f6e0ca7fde0" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f6e0ca7fb60" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f6e0ca6a2d0" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f6e0ca7ba60" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f6e0ca74420" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f6e0ca8d390" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6e0d2f2240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f6e0d2f2660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6e0ca8d110" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6e0d2f2240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f6e0d2f2660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f6e0ca81190" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f6e0ca892a0" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6e0ca89020" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f6e0ca809d0" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6e0ca80750" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f6e0ca6eb60" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f6e0ca88b50" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f6e0ca8a850" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f6e0ca7b2a0" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f6e0ca7b020" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6e0e54b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f6e0ca8b270" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f6e0ca6f020" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f6e0ca73350" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f6e0ca77cc0" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f6e0ca7c020" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f6e0ca7dd30" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f6e0ca829f0" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f6e0ca85c80" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f6e0ca6aa40" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f6e0ca883c0" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6e0ca88140" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f6e0ca6db10" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f6e0ca84b50" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f6e0ca6c350" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6e0c80d5e0" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6e0c80d360" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6e0c7fab00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f6e0c7fa1c0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f6e0c7fa530" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0c7fa860" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6e0c7f9880" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6e0c7f92c0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6e0c7f95f0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0c7e04d0" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0c7e04d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6e0c7e0710" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0c7e0710"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f6e0c7df2a0" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0c7e0710"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6e0c7df020" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6e0c7e0710"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f6e0c77d580" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f6e0c74f9e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6e0c74f020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f6e0c74f750" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f6e0c7507f0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f6e0c750020" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6e0c755d30" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f6e0c7662a0" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6e0e54b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0c766020" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f6e0c7672a0" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0c767020" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6e0c7632a0" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0c763020" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6e0c7642a0" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6e0c764020" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6e0d9e0720"/>
                <typename><typedef-ref name="message_t" ref="0x7f6e0d9ded10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0c5ed910" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0c5ed910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6e0c5ea270" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6e0c586020" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6e0c586020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6e0c580c50" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6e0c5835b0" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f6e0c581360" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6e0c582d60" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6e0c5810d0" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f6e0c5825b0" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f6e0c57fca0" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f6e0c57f420" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6e0c583d90" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6e0dece090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f6e0c586b90" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6e0c586910" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f6e0c5802f0" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6e0c581d00" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6e0c580060" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f6e0c585680" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6e0c585400" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6e0e54b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6e0c585e80" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f6e0c4505e0" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6e0c4505e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f6e0c44d2a0" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6e0dec5c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6e0c4505e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f6e0c44d020" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6e0c4505e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
