<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f89611d4b10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f896118a6e0"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f896118a6e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8960fcb590"/></to>
    </wire>
    <wire loc="19:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f89611c60d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8960fac020"/></to>
    </wire>
    <wire loc="20:SenseAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f896124f770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8960b99370"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8960b99370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:SenseAppC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x7f89611c39e0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f896089d310"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f896089d310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f895f2b9b30"/></to>
    </wire>
    <wire loc="22:SenseAppC.nc">
      <from><interface-ref name="ReadHumid" scoped="" ref="0x7f89611c52e0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f896089b240"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f896089b240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f895f2b6980"/></to>
    </wire>
    <wire loc="23:SenseAppC.nc">
      <from><interface-ref name="ReadLight" scoped="" ref="0x7f89611c2c70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f8960894750"/></to>
    </wire>
    <wire loc="47:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f8960894750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f895f1c8760"/></to>
    </wire>
    <wire loc="25:SenseAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f896124b020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f895f84cc30"/></to>
    </wire>
    <wire loc="65:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f895f84cc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f895f0d0400"/></to>
    </wire>
    <wire loc="26:SenseAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f89611d84e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f895f84b8b0"/></to>
    </wire>
    <wire loc="66:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f895f84b8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f895f0cf060"/></to>
    </wire>
    <wire loc="27:SenseAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f89611e85a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f895f84c020"/></to>
    </wire>
    <wire loc="64:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f895f84c020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f895f0d1730"/></to>
    </wire>
    <wire loc="28:SenseAppC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f896125f020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f896040f760"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f896040f760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f89603e32f0"/></to>
    </wire>
    <wire loc="30:SenseAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f89611d2790"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f895f844cc0"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f895f844cc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f896040bb20"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:SenseC.nc">
      <from><interface-ref name="sendJumpData" scoped="" ref="0x7f89611a1e50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:SenseC.nc">
      <from><interface-ref name="setFrequency" scoped="" ref="0x7f8961197b40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:SenseC.nc">
      <from><interface-ref name="sendData" scoped="" ref="0x7f89611b9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f931dd0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f9bab50"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f9d8750"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f9f5080"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895fb4a620"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895fc39c60"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f896027a7d0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895eec5020"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f896010b020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f89603214a0"/></to>
    </wire>
    <wire loc="37:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f896055f150"/></to>
    </wire>
    <wire loc="96:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f193060"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f89607e3660"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f21c810"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8960d33780"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f8960fcbc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f89616f53a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f89616f53a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f89612a0140"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f8960fbc6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8961187b30"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8961187b30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8961183e60"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8960fbcdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f89611805a0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f8961181590"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f8961181590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8961160480"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f8961180c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f89611781a0"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f896117f400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8960f84c40"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8961160480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f89611473c0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8961157a30"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8961147a70"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f89613784c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8961146cc0"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f8961103a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f89610416d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f89610f1410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f8961039b30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f89610fad10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8961046160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f89610dd020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8961020cb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f89610ff020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961047480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f89610e5570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961020020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f89610da020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8961008cb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f89610eca50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f8961019220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f896110a020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f89610969d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f89610df020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f896102f2f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f89610e7890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961030610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f89610f08c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f8961031220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f89610f9c70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f896103f7a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f89610dc020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f89610172f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f89610ee020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f89610296d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f89610ffda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961040ac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f896110c7b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f89610a4540"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f89610e43e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961018610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f89611095a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f8961048020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f89610ea020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f89610126d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f89610f4dc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f896104ea90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f89610de020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f89610277a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f8961100140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961050de0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f89610e6700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961028ac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f89610db020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f89610107a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f89610ed5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f8961022b30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f89610e21f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961011ac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f89610e0020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8961037cb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f89610e1020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961008020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f89610e8a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8961037020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f89610e95a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f896100ab30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f89610a2450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f89610a3d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f89610a2aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f8961003a90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f89610a1120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f8961000260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f896104d930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f89610a4540"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f896104b020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f89610a3d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8961045020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f89610a4540"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f89610447a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f89610a3d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f896103d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f89610a4540"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f896103cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f89610a3d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f896109b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f896109b940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f89610009f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f8961099020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f8960fff240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8961036b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f89610342f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f896102d160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f896102c7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8961026610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f8961025c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f896101fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f896101c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8961016160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f89610157a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f896100f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f896100dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8961007b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f89610052f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f896129e040"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f896129a490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f896168c3b0"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8960f84c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8960faf8d0"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f8960fa47b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f8960f87360"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f8960f87360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960d6b020"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f8960faa980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f8960f866a0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f8960f866a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960d57b90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f8960fa3ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f8960f859c0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f8960f859c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960d52710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960d5a2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f8960f2c200"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f8960f2c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e09740"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960d56de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f8960f2a200"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f8960f2a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e04100"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960d51930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f8960f28200"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f8960f28200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dffd10"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f8960f6d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960ea2100"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f8960f59020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e73d10"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f8960f10560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e64d10"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f8960eeb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dd8100"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f8960f0d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e5f740"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f8960f55020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e68100"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f8960f41200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e39e00"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f8960f1c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960de3d10"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f8960f07580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e56d10"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f8960ef7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960df5100"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f8960ee3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dd4d10"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f8960f67020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e93100"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f8960f05580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e51740"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f8960f63020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e8a740"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f8960f4f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e5a100"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f8960f3a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e2bd10"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f8960f26200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dfa740"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f8960f16200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dd4d10"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f8960f72020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960eacd10"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f8960f5d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e7c860"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f8960f49020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e4b100"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f8960f12580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e64d10"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f8960ef1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960de7100"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f8960ee5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dd4d10"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f8960efd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e0ed10"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f8960f45020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e42a60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f8960f30200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e12100"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f8960f20200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dec740"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f8960eef570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960de3d10"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f8960f03570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e1cd10"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f8960f6b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e9ed10"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f8960f57020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e6d740"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f8960f24200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960df5100"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f8960f53020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e64d10"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f8960f3e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e34740"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f8960f1a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960ddd740"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f8960eff580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e12100"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f8960f7f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960eb56d0"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f8960f61020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e85100"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f8960f4d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e56d10"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f8960f38200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e25740"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f8960efb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e4b100"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f8960ef5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960df1d10"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f8960ee9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dd4d10"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f8960f34200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e1cd10"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f8960ef9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e47d10"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f8960f70020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960ea7740"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f8960f5b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e77270"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f8960f47020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e47d10"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f8960f01580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e17740"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f8960eed570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960ddd740"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f8960f43200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e3d460"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f8960f2e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e0ed10"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f8960f1e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960de7100"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f8960f69020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e99740"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f8960f22200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960df1d10"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f8960f65020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e8fd10"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f8960f51020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e5f740"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f8960f3c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e2f100"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f8960f18200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dd8100"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f8960f74020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960eb0100"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f8960f5f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e81d10"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f8960f4b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e51740"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f8960f36200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e20100"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f8960f09560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e5a100"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f8960ef3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dec740"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f8960f0b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e5a100"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f8960f32200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e17740"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f8960ee7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dd8100"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f8960ee1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960dfa740"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f8960f141f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8960e68100"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d30560"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d30560"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8960bb9150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8960d33780"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8960c35020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f8960d29020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f8960bab790"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8960c35020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f368ab0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f8960bb4640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8960c092f0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8960c04850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8960c35870"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8960c35870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f3615f0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8960baaa60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8960caeb50"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8960caeb50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8960c91cf0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f895f368ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f34b360"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f895f35bd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f367360"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f895f367360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f34bbf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f895f35d9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8960caeb50"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f348dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f351020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f351020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f345440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f34f760"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f34f760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f344760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f34ea80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f34ea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f89610f1410"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f89610e8a20"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f89610ee020"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f89610e6700"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f89610ed5a0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f89610e5570"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f89610eca50"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f89610e43e0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f89610ea020"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f89610e21f0"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f89610e95a0"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f89610e1020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f8960c730f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f8960cacb70"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f8960cacb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8960ca5b80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960c97c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f8960c009c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f8960baea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7f896089a900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7f895f2b6210"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f896089caa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f895f2b93c0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f895f2b4060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960b3e9d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7f895f2b39b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f8960b3dd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7f895f2b4cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960b3e9d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7f895f2b1020"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f8960b3dd50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7f8960b3dd50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f8960abfb20"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8960b3e9d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960aac1d0"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8960aac1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f89608f1210"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f8960abd160"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7f8960aaa020"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f8960aaa020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960aa6330"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7f8960abc2f0"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7f8960aa9370"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f8960aa9370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960aa2d60"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f8960abb480"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7f8960aa8730"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f8960aa8730"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f896097da30"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8960aba0b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f89608ae1e0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f89608ae1e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8960ab5450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></to>
    </wire>
    <wire loc="102:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7f8960ab32f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7f8960ab4ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f89608f1210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895f219020"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960aa5490"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f8960f6b020"/></to>
    </wire>
    <wire loc="57:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960aa0020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f8960f69020"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960a9cde0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f8960f67020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7f8960a8f510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960a9db60"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f8960a8d830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960aa6330"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f8960a8cb40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960aa2d60"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8960a94080"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8960a7f5a0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8960a7f5a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f896097c610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f8960a6d710"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f8960a6d710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f8960a5a710"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f89608ea280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8960a953e0"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f89608ba020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f89608ee400"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f89608ee400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895f217270"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f89608bb2f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f89608f07a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f89608f07a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f895f218560"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f8960a8a700"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f8960a6e710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f8960a5b710"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f8960a648a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f8960a508a0"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f8960a6b710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f8960a58710"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f8960a69710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f8960a55710"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f8960a70710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f8960a5d710"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f8960a66710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f8960a52710"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f8960a638a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f8960a4f8a0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f8960a71660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f8960a5f6b0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f8960a68710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f8960a54710"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f8960a6f710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f8960a5c710"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f8960a658a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f8960a518a0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f8960a6c710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f8960a59710"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f8960a6a710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f8960a56710"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f8960a75710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f8960a5e710"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f8960a67710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f8960a53710"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f89608f0020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f895f219d80"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895f217b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f89608eecd0"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f895f215440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f895f21ce20"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f895f2137a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f895f1e3b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f89608ea280"/></to>
    </wire>
    <wire loc="81:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f895f1e1720"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f89608ead00"/></to>
    </wire>
    <wire loc="83:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f895f1e1cf0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f89608bb2f0"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895f1e0930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f89608ba020"/></to>
    </wire>
    <wire loc="78:../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f895f1df160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f895f1df940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f895f1c8760"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f8960862bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f8960498020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f895f1c4380"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f895f1c4380"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f896056c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7f8960894020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7f89604a48a0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1c6020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f89604a0300"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1c00e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f89604a0300"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f89608565c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1c6020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f8960844b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f895f1ba400"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f895f1ba400"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f89607ec1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f896085acb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895f1bb660"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895f1bb660"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f8960654d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1b8660"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1c6020"/></to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f89608275c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f895f1b9400"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f89607eb960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f895f1b9cf0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f89607ea920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f896064f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f89607f9cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f895f1a72a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1b8660"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f896064e740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f895f1a9020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f89607eb960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f89607e1af0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f89607e81d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f89607de910"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f89607ea920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f89607e0ab0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f89607ec1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f89607e2370"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f89607f9cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f896066d520"/></to>
    </wire>
    <wire loc="98:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f896066d520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895f1916c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f89607dd280"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f896066cb20"/></to>
    </wire>
    <wire loc="100:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f896066cb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895f18fcb0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f89607cf0d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f89606fc020"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f89607cabe0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f8960f24200"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f89607c8c80"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f8960f22200"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f89607c6c80"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f8960f20200"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f89607c3c80"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f8960f1e200"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f89607c1c80"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f8960f1c200"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f89607bfc80"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f8960f1a200"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f89607bdc80"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f8960f18200"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f89607bbc80"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f8960f16200"/></to>
    </wire>
    <wire loc="74:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f89607db020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f896110c7b0"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f89607ce880"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f896110a020"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f89607cdd30"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f89611095a0"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f89607cb120"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f8961100140"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f89607cbe60"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f89610ff020"/></to>
    </wire>
    <wire loc="99:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f896066c3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f895f18f530"/></to>
    </wire>
    <wire loc="101:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895f18e610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f896066b570"/></to>
    </wire>
    <wire loc="103:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f895f18edd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f895f193670"/></to>
    </wire>
    <wire loc="68:../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f895f18d900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f8960654d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f89605eaca0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f89605e5030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f896064f1d0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f89605e2020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f896064e740"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f89605e5d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f8960645240"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f89605e49c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f8960645e00"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f8960642a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f89605b04e0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f89605b04e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f896063b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f89605a9020"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f89605a9020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f89606376c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f89605a3b40"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f89605a3b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f89606449a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f89606fc020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f89605df7f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f151280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1c00e0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f89605685e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1c00e0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8960565280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895f155360"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895f155360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f8960654d20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f8960567c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f895f154020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f895f154020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f89607ec1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f896056c1d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f89604e9cb0"/></to>
    </wire>
    <wire loc="32:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f8960559b10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f89605685e0"/></to>
    </wire>
    <wire loc="33:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f89604ba8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960565280"/></to>
    </wire>
    <wire loc="35:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f89604bebf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f896055fe70"/></to>
    </wire>
    <wire loc="38:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f896055a1d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f8960567c90"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8960556020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f89604f1970"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f89604f1970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f13e020"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f896052e380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f896053caa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f8960535100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f89604f1120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f145450"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f895f145450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f129ca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f895f138780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f145ca0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f895f145ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f1285b0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f895f13a3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8960caeb50"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f125710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f12f880"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f12f880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f123da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f12c020"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f12c020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f1210c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f12b440"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f12b440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f895f153020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f89607eb960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f895f153910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f89607ea920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f896064f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f89607f9cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f895f0df120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f151280"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f896064e740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f895f0e1dc0"/></to>
    </wire>
    <wire loc="63:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f895f0d1730"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f895f0c4120"/></to>
    </wire>
    <wire loc="64:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f895f0d0400"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8960408020"/></to>
    </wire>
    <wire loc="65:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f895f0cf060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8960408c90"/></to>
    </wire>
    <wire loc="67:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f895f849020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f895f0ce760"/></to>
    </wire>
    <wire loc="66:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f895f0ce760"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89604064e0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8960408020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f89603de020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8960408c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f89603e0800"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89604064e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89603dd020"/></to>
    </wire>
    <wire loc="60:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f895f0c4d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f89604602c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f895f0c3a10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8960408c90"/></to>
    </wire>
    <wire loc="53:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f89604602c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8960416b00"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8960415a40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f896040c7f0"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f896040c7f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f89603e2320"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8960414720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8960408c90"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8960413d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8960408020"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f8960412a90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f89604112f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f89603e32f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f89603b9020"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f89603e2320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f895f8f5e80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f8960409880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f89603e01d0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f89603e01d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f895f8f1db0"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f89603de020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f895f8efa80"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f89603fc6b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f895fac5550"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f895fac5550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f895fab7a80"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f89603ee5b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f89603d3170"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f89603d3170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f89603b1700"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f896040bb20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f89603e1510"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f89603e1510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f895f8f11d0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89603dd020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89603b3670"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f89603e0800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f895f8f0430"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f89603fa840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f895fac1660"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f895fac1660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f895fab3af0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f89603b9020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f895f923b80"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f89603dc2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f895f8ec8b0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f89603c81d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f895f8eece0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f89603d40f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f89603b4670"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f89603b4670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f895faca660"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f89603b1700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f895f923080"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89603b3670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f895fac76e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f89603bf430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f89603b02e0"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f89603b02e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f895f90f020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f89603d0170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f89603b1080"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f89603b1080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f895fac6a70"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f895f8e40f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f89603b81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f895f8eb860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f89603b5170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f89603b5170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f895f98dc90"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f895f8ea690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f89603b4020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f89603b4020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f895f98ca50"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f895f8e64d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f895fcf2b20"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f895f8eace0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f895faca660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f895faca660"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f895fabcd10"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895f8e9b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fab8640"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f895f8e8610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f8960328dc0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f8960328dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f8960320970"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f895f8e51f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f89603ab990"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f89603ab990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f89603a5020"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f895f8e4d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f895f923b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f895f920d90"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f895fac6a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f895fab7020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f895f90f020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f895f90d400"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f895f98dc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f895f983a20"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f895f923080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f895f91c2d0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f89603b7d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f895f98d5e0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f895f98d5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f895f983370"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f895fac76e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f895fab9c50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f89603b81d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895f990be0"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895f990be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895f9857b0"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f89603b7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f895f98f8e0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f895f98f8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f895f9844d0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f89603b6420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f895f98b170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f895f98b170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f895f980020"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f895f98ca50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f895f981840"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f895f920d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f89603af9e0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f89603af9e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f89603a7690"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f895f98a6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f895f9de220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f895f9de220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f895f9dba10"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f895f9dc020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f895f912340"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f895f912340"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f895f90fd70"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f895f90fd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f895f929ce0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f895f929ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f895f921860"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f895f921860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f89603ac600"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f89603ac600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f89603a62e0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f895f98a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f895f925980"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f895f925980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f895f920690"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f895f920690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f895f9c1a90"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f895f9c1a90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f895f9bde20"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f895f9be950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f89603ab300"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f89603ab300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f895fb4e7c0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f895fb4e7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f895fb47020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f89603a5e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960338950"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8960338950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960321b10"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f896039c3f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f8960333bf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f8960333bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f896031e740"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f89603a36f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f895fc496c0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f89603a36f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f895fb515c0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f895fb515c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f895fb4aca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f895fc496c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f895fc38320"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f89603932a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f895fc46020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f895fc46020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f895fc38bc0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f896039b060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f895fc46cb0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f895fc46cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f895fc37970"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8960391330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f895faca660"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8960389920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f8960390420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f895f9fea20"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f895f9fea20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f895f9f4a20"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f896038d110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f895fa01aa0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f895fa01aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8960110280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8960390bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f896037fb70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f8960380ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f8960382c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f8960325020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f896031db40"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f8960319a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8960277220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8960277220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8960271af0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8960315c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f8960231e60"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8960231e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960224b60"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f8960314e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f896022d6a0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f896022d6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960215d70"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f89603120f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f896022bce0"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f896022bce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f896020a710"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f8960311400"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f89601f4d60"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f89601f4d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f89601d28a0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f89602fc1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895fd7de20"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895fd7de20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960191950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f89602fd2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f895fd7a7b0"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f895fd7a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f89602fd9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f895fd79ae0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f895fd79ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f89602fea40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f895fd7bad0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f895fd7bad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f89602fe120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fd78160"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fd78160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8960303be0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f895fd6d870"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f895fd6d870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8960305550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f895fd6b880"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f895fd6b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8960305e00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f895fd6a0a0"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f895fd6a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8960304710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fd72e50"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fd72e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8960302020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fd71670"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fd71670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f896030e5a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f895fd5d500"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f895fd5d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8960307c00"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f895fd5ece0"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f895fd5ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f89603028e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fd6ee50"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fd6ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f89603011c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f895fd71e50"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f895fd71e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8960301a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f895fd70e50"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f895fd70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f89602fbd90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895fd4ba80"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895fd4ba80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960191950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f89602fb020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895fd1e9e0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895fd1e9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960191950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f896030caf0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f895fcf2b20"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8960319020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f895fcf1d20"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f895fcf1d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f895fcd6310"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f89602f0820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f89602f1940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f896027a7d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8960271260"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8960271260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f05fdf0"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8960271af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f05d690"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f895f05fdf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f056020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f895f05d690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f050a90"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f895f056020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f035a30"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f895f049210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f056870"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f895f056870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f895f034340"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f895f04ce10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f896025b080"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f896025b080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8960256cd0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f0304c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f03a570"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f03a570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f02fa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f039c10"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f039c10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f02eda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f037020"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f037020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f89602520f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f8960cacb70"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f896022f090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f896021e710"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f896022e390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f89602191d0"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f8960278b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960228020"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f896022c9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8960210b60"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f89602272f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f8960f6d020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960222de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f8960f41200"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f896021d930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f8960f70020"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960218480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f8960f7f020"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960213020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f8960f38200"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f896020fde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f8960f43200"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960209930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f8960f3a200"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f89601f4150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f89601eca20"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f89601f3a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f89601cf8b0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f89601d95d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f89610f08c0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f89601d88f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f89610df020"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f89601d77a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f8960f43200"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f89601d1480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f8960a6e710"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f89601cd480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f8960a71660"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f895fd7a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fd6c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f895fd640a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f895fd6b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f895fd58500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f895fd5b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f895fd79490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f895fd60880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fd5c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f895fd66880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f895fd670a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fd7ca90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f896018e670"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f896018e670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8960188920"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fd78e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f895fd74490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fd5fc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f895fd74be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fd5cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f895fd600a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fd70670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fd620a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f895fd64880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fd62880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f895fd59ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f895fd5bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f895fd67880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f895fd630a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f895fd5dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f895fd6a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f895fd58ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f895fd7b480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f895fd72670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fd6e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f895fd650a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f895fd65880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fd6c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f895fd732f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f895fd72020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fd787b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fd5e500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f895fd59500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fd660a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f895fd63880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f895fd7ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f895fd690a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f895fd73940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f895fd69880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f895fd5f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f895fd579b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8960184bb0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8960181020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8960181db0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8960191950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960185810"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960180ba0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f896017c020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8960114770"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f8960114770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8960110280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f896017f400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f89600f2c40"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f89600f2c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895ef69770"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f896017d080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f89600f18f0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f89600f18f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f895ef68be0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f8960173680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f895fda3020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f895fda3020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f895ef66d70"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f896017cdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f896016e120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f8960110280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f896010bb70"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f895ef66d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f896008d3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f895ef68be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f8960090c20"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895ef69770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f89600911d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f895ef68440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f895ef5ed90"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f895ef5ed90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f895fe922c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f8960090c20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f896000b440"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f895ef662b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f896008f320"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f896008f320"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f896000ba50"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f896008b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f895ef655a0"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895ef505d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8960090430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f896008c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895ef5e140"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895ef5e140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895fe93020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f89600876a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f895ef58760"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f895ef58760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f895fe964d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8960090430"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f896000cc40"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f896008d3f0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f896000a700"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f89600911d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f896000de80"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f8960009e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f896008b510"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f8960009060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f896008c280"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f8960003de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f89600876a0"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f8960007490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f895fffb860"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f895fffb860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f895ffef020"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f89600025a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f8960001c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f895fff18a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f895ffea750"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f895fff43b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f895ffebdc0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f895ff3a700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f8960f12580"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f895ff38670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f8960f0d580"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f895ff36670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f8960f0b580"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f895ff34670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f8960f05580"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f895ff32670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f8960f07580"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f895ff405b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f895fe60020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f895ef57020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f895fe953f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f895ef57630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f895fe6c350"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f895fe6c350"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f895fe60020"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f895ef5dd40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f895fffb860"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895ef5d5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe92ad0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe92ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe74a70"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895fe918a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895ef505d0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f895fe922c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f895fe766c0"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f895fe766c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f895eec26c0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f895fe964d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f895fe8fd60"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895fe93020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895fe77890"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895fe77890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895eec3850"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f895fe953f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f895fe8c710"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe74a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895eec0a70"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895fe733e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895fe918a0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe7abf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe74a70"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f895fe8cd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f895fff43b0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f895fe7a5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f895fff18a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f895fe76e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f895eec2e40"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895eebf400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895fe733e0"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f895eebfbc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f895eec5630"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f895eebdde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f895fe590c0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f895ffef020"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f895fe55d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f8960f12580"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f895fe53cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f8960f0b580"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fd3ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f895fd49da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fd41b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fd3c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f895fd35e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f895fd3ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f895fd282f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f895fd2a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f895fd46120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f895fd30670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fd2b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f895fd40c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f895fd3fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f895fd36670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f895fd38e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f895fd3a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fd4a760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f896018e670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fd45aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f895fd44120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fd2fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f895fd44870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fd2bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fd46dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f895fd31e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fd3f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fd40480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f895fd49750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fd32e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f895fd33670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fd31670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f895fd29ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f895fd2aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f895fd37670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f895fd33e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f895fd2cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f895fd39670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f895fd28ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f895fd49100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f895fd41370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fd3e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f895fd36e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f895fd3ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f895fd35670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f895fd3d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f895fd47450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fd3de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f895fd43020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f895fd43cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f895fd2c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f895fd2ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fd45450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fd2e2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f895fd292f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fd37e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f895fd32670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f895fd47aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f895fd46770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f895fd39e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f895fd43670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f895fd38670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f895fd30e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f895fd277a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fd11c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f895fd1cda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fd15b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fd0f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f895fd08e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f895fd0fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f895fcfb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f895fcfe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f895fd1a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f895fd03670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fcff2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f895fd14c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f895fd13c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f895fd09670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f895fd0ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f895fd0e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fd1d760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f896018e670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fd19aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f895fd17120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fd02a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f895fd17870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fcffad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fd1adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f895fd04e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fd13480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fd14480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f895fd1c750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fd06e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f895fd07670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fd04670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f895fcfcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f895fcfead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f895fd0a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f895fd07e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f895fd00ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f895fd0d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f895fcfbad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f895fd1c100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f895fd15370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fd11480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f895fd09e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f895fd0ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f895fd08670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f895fd10670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f895fd1b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fd10e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f895fd16020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f895fd16cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f895fd002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f895fd01ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fd19450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fd012f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f895fcfc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fd0ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f895fd06670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f895fd1baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f895fd1a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f895fd0de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f895fd16670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f895fd0c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f895fd03e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f895fcfa7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f895fcd3880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f895fcc9020"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f895fcc9020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f895fcc3140"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f895fcbfbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f895fcc8c50"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f895fcc8c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f895fcaa150"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f895fcc2530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f895fc5fa10"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f895fcae540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f895fcaf590"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f895fcaf590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f895fc5d9e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f895fca5910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f895fcacc90"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f895fcacc90"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f895fc80a90"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f895fcaa9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f895fcae540"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f895fc70020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f895fc6b530"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f895fc6b530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f895fc67e50"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f895fc63020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f896110c7b0"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f895fc5cc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f8960f5d020"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f895fc40990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f895fc36900"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f895fc43150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f895fc350f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f895fc35ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8960277220"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f895fc28500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f8960278b10"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f895fc22820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f8960231e60"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f895fc21b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f896022c9b0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f895fc29880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f89601f4150"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f895fc1f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895fb81c30"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895fb81c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960191950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fc1fd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fb808f0"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fb808f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f896018e670"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f895fc196d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f895fb7f2f0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f895fb7f2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f895fc19de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f895fb7ecc0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f895fb7ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f895fc18530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f895fb7d370"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f895fb7d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fc18c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fb7cd00"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fb7cd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f895fc1be00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f895fb76c60"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f895fb76c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f895fc1e780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f895fb5d7a0"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f895fb5d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fc1b550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fb622f0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fb622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fc173e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fb77480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fb77480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fc165e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fb73e50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fb73e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fc15020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fb72670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fb72670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f895fc17e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f895fb797b0"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f895fb797b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f895fc149c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f895fb5fad0"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f895fb5fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f895fc15890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f895fb612f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f895fb612f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f895fc14130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f895fb61ad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f895fb61ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f895fc0fd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f895fb51df0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f895fb51df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f895fb49550"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f895fc31d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f895faca660"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fc30bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f895fc2e950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f895fac5550"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f895fc23be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f895fabd480"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f895fabd480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f895faaf8b0"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f895fc126c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fb74c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f895fb7e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fb78c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f895fb6be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f895fb72e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f895fb5e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f895fb66670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f895fb77c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f895fb6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f895fb6fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f895fb71670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f895fb7a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fb65a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f895fb7aac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fb62ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fb7c060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f895fb67e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fb76480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f895fb7f940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fb69e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f895fb6a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fb67670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f895fb6d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f895fb6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f895fb63ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f895fb70670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f895fb5ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f895fb78490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fb74480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f895fb6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f895fb71e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f895fb6b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f895fb73670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f895fb7e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f895fb79160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f895fb79e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f895fb632f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f895fb64ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fb7c6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fb642f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f895fb5f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fb6de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f895fb69670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f895fb7d9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f895fb70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f895fb6f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f895fb66e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f895fb4d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f895fb477c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f895fb33150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f895fb46020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f8960231e60"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f895fb45380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f896022f090"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f895fb446b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f896022e390"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f895fb43a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f89601f3a20"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f895fb426e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f895fa4d520"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f895fa4d520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8960191950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f895fb41530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f895fa29480"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f895fa29480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fb40ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fa47060"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fa47060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f895fb403a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f895fa47d00"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f895fa47d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f895fb3f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f895faca660"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fb3e1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f895fb3cd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f895fac5550"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f895fb3eb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f8960328dc0"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fb373e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fa3f840"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fa3f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fb37cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fa3d060"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fa3d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f895fb38b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f895fa46ae0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f895fa46ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f895fb356d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f895fa2bc60"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f895fa2bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f895fb36590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f895fa2dc60"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f895fa2dc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f895fb36e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f895fa2c480"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f895fa2c480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fb34020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fa2d480"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fa2d480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f895fb348b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f895fa4cc20"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f895fa4cc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f895fb279d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f895fa59020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f896025b080"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f895faad3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f895fa5ccf0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f895faac6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f8960d29020"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f895fa550b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fa40620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f895fa4a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fa43620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f895fa36840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f895fa3d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f895fa49cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f895fa32060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fa2ec60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f895fa42620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f895fa41620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f895fa38060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f895fa3a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f895fa3c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fa4c2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f896018e670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fa476b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fa30480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f895fa46490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fa489c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f895fa33840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fa42e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fa43e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f895fa4a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fa34840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f895fa35060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fa33060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f895fa2b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f895fa39060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f895fa35840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f895fa2e480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f895fa3b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f895fa44e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fa41e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f895fa38840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f895fa3c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f895fa36060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f895fa3f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f895fa49020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f895fa447b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f895fa2fc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f895fa2f480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fa30c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f895fa2cc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fa39840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f895fa34060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f895fa49670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f895fa48370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f895fa3b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f895fa44160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f895fa3a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f895fa32840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f895fa28160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f895f9fd920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f895f9f5940"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f895fa03990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f895f9f5080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f895f9d8e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f895f9dc020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f895f9d7ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f895f9d9690"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f895f9d9690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8960110280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f895f9d68f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f895f9fea20"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895f9d5170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f895f9be200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f895f9ba550"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f895f9b93f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f895f9be950"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895f9b9a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f895f980d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f895f98a6b0"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f895f97fb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f895f98a020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f895f97e2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f895faca660"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895f97d170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f895f97db70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f895f930410"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f895f951db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f895f922800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f895f91e580"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f895f91e580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8960110280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f895f90a1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89603b3670"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f895f83f2f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8960408020"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f895f83e020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8960408c90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="9:SenseC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.TimerMilliC" loc="44(SenseAppC.TimerMilliC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.SensirionSht11C" loc="45(SenseAppC.SensirionSht11C):../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP" loc="45(SenseAppC.SensirionSht11C.SensirionSht11ReaderP):../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC" loc="40(SenseAppC.HamamatsuS1087ParC):../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS1087ParC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC" loc="47(SenseAppC.HamamatsuS1087ParC.AdcReadClientC):../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient" loc="43(SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC" loc="47(SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC):../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient" loc="43(SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParP" loc="42:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <documentation loc="34:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
        <short>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.AMSenderC" loc="47(SenseAppC.AMSenderC):../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.AMSenderC.SenderC" loc="47(SenseAppC.AMSenderC.SenderC):../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SenseAppC.AMSenderC.SenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961266290"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8961266600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961266290"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8961266600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.AMReceiverC" loc="43(SenseAppC.AMReceiverC):../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f89610d6890" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f89610d6c30" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f89610d5020" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f89610d53a0" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f89610d5720" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f89610d5a90" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f89610d5e20" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f89610d4200" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f89610d45d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f8961098e70" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f8961095270" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f8960edb9f0" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f8960edbda0" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f8960eda1a0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f8960eda550" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f8960eda8c0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f8960ce33b0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f8960ce33b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f8960ca6c70" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f8960ca6c70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f8960c90570" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f8960c90570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f8960c90d40" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f8960c90d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f8960c8f160" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f8960c8f160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f8960c8f940" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f8960c8f940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f8960c8fd10" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f8960c8e540" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f8960c8e540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f8960cb36d0" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f8960cb36d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f8960c6c020" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f8960c6c020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f8960c6c410" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f8960c6c410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f8960c6cbf0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f8960c6cbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f8960c6b020" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8960c30cc0" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8960c30cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8960bfa230" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8960bfa230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f8960bfa560" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8960bacdd0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8960bacdd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f896096a7d0" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f89609582f0" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f896093fd80" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParC" loc="40:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f89606c5850" loc="83:../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f89606bd3b0" loc="42:../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f89604eb660" loc="23:../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f89604eb9b0" loc="23:../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f89604eb9b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f8960494d80" loc="47:../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f896048c6a0" loc="47:../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f896047f2e0" loc="43:../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f896045d630" loc="45:../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f895fc7e020" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f895fc7e020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f895fc7e7b0" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f895fc7e7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f895f846580" loc="43:../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Timer" ref="0x7f896124f770" loc="12:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f896124f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f896124dc40"/>
        <function-ref name="fired" scoped="" ref="0x7f896124e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f896124d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f896124eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f896124c590"/>
        <function-ref name="gett0" scoped="" ref="0x7f896124c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f896124e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f896125d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f896124d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f896125d860"/>
        <function-ref name="stop" scoped="" ref="0x7f896125dd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendJumpData" ref="0x7f89611a1e50" loc="104:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendJumpData" scoped="" ref="0x7f89611a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f89611a0310"/>
        <function-ref name="runTask" scoped="" ref="0x7f89611a04a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f89611d4b10" loc="17:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f89611d4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f89611e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f896124b020" loc="13:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f896124b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896124b3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f896124b530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f896124b6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f896124b850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f896124b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f89611e85a0" loc="14:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f89611e85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f89611e8920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89611e8ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89611e8c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f89611e8dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f896124a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setFrequency" ref="0x7f8961197b40" loc="129:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="setFrequency" scoped="" ref="0x7f8961197b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8961195020"/>
        <function-ref name="runTask" scoped="" ref="0x7f89611951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendData" ref="0x7f89611b9020" loc="43:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendData" scoped="" ref="0x7f89611b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f89611b93a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f89611b9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f89611d2790" loc="16:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f89611d2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f89611d2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f89611c60d0" loc="18:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f89611c60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f89611c6450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f89611c65e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f89611c6770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f89611c6900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f89611c6a90"/>
        <function-ref name="get" scoped="" ref="0x7f89611c6c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f89611c6db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f89611d74d0"/>
        <function-ref name="set" scoped="" ref="0x7f89611d7020"/>
        <function-ref name="led0On" scoped="" ref="0x7f89611d71b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f89611d7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7f896125f020" loc="11:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f896125f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f896125f3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f896125f530"/>
        <function-ref name="start" scoped="" ref="0x7f896125f6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f896125f850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLight" ref="0x7f89611c2c70" loc="21:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLight" scoped="" ref="0x7f89611c2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f89611c08a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f89611c0d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f89611d84e0" loc="15:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f89611d84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f89611d8860"/>
        <function-ref name="source" scoped="" ref="0x7f89611d89f0"/>
        <function-ref name="address" scoped="" ref="0x7f89611d8b80"/>
        <function-ref name="destination" scoped="" ref="0x7f89611d8d10"/>
        <function-ref name="setSource" scoped="" ref="0x7f89611f3020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f89611f31b0"/>
        <function-ref name="type" scoped="" ref="0x7f89611f3340"/>
        <function-ref name="setType" scoped="" ref="0x7f89611f34d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f89611f3660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f89611f37f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f89611f3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadTemp" ref="0x7f89611c39e0" loc="19:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadTemp" scoped="" ref="0x7f89611c39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f89611d1670"/>
        <function-ref name="readDone" scoped="" ref="0x7f89611d1af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadHumid" ref="0x7f89611c52e0" loc="20:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadHumid" scoped="" ref="0x7f89611c52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f89611c2020"/>
        <function-ref name="readDone" scoped="" ref="0x7f89611c24a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f8961185b80" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8961185b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8961187020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f896118a6e0" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f896118a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f896118aa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8961187b30" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8961187b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8961183020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f8961180c80" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f8961180c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f896117f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8961183e60" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8961183e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8961180210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f89611805a0" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f89611805a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8961180920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f896117f400" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f896117f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f896117f780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f89611781a0" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f89611781a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8961178520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f8961181590" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f8961181590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8961181910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f8961157a30" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8961157a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f896115d980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f896115d020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f896115d1b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f896115d340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f8961157db0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f896115d4d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f896115d660"/>
        <function-ref name="initClocks" scoped="" ref="0x7f896115d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8961160480" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8961160480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8961160800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f8961147a70" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8961147a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f8961146980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f8961146020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f89611461b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f8961146340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f8961147df0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f89611464d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f8961146660"/>
        <function-ref name="initClocks" scoped="" ref="0x7f89611467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f8961146cc0" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8961146cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f89611450a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f89611473c0" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f89611473c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8961147740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f8961103a50" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f8961103a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961103dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961102020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89611021b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961102340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89611024d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961102660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89611027f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961102980"/>
        <function-ref name="setControl" scoped="" ref="0x7f8961102b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f89610f1410" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f89610f1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610f1790"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610f1920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610f1ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610f1c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610f1dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610f0020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610f01b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610f0340"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610f04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f89610fad10" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f89610fad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610f90e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610f9270"/>
        <function-ref name="captured" scoped="" ref="0x7f89610f9400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610f9590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610f9720"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610f98b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f89610dd020" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f89610dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610dd3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610dd530"/>
        <function-ref name="captured" scoped="" ref="0x7f89610dd6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610dd850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610dd9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610ddb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f89610ff020" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f89610ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610ff3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610ff530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610ff6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610ff850"/>
        <function-ref name="fired" scoped="" ref="0x7f89610ff9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f89610e5570" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f89610e5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610e58f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610e5a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610e5c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610e5da0"/>
        <function-ref name="fired" scoped="" ref="0x7f89610e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f89610da020" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f89610da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610da3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610da530"/>
        <function-ref name="captured" scoped="" ref="0x7f89610da6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610da850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610da9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610dab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f89610eca50" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f89610eca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610ecdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610eb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610eb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610eb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610eb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610eb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610eb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610eb980"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610ebb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f896110a020" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f896110a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f896110a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f896110a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f896110a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f896110a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f896110a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f896110ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f896110ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961109020"/>
        <function-ref name="setControl" scoped="" ref="0x7f89611091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f89610df020" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f89610df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610df3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610df530"/>
        <function-ref name="captured" scoped="" ref="0x7f89610df6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610df850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610df9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610dfb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f89610e7890" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f89610e7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610e7c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610e7da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610e6020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610e61b0"/>
        <function-ref name="fired" scoped="" ref="0x7f89610e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f89610f08c0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f89610f08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610f0d40"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610ef020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610ef1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610ef340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610ef4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610ef660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610ef7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610ef980"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610efb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f89610f9c70" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f89610f9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610f3020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610f31b0"/>
        <function-ref name="captured" scoped="" ref="0x7f89610f3340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610f34d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610f3660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610f37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f89610dc020" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f89610dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610dc3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610dc530"/>
        <function-ref name="captured" scoped="" ref="0x7f89610dc6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610dc850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610dc9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610dcb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f89610ee020" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f89610ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610ee3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610ee530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610ee6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610ee850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610ee9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610eeb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610eed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610ed020"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f89610ffda0" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f89610ffda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610fb180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610fb310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610fb4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610fb630"/>
        <function-ref name="fired" scoped="" ref="0x7f89610fb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f896110c7b0" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f896110c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896110cb30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f896110ccc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f896110ce50"/>
        <function-ref name="get" scoped="" ref="0x7f8961114020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89611141b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8961114340"/>
        <function-ref name="getMode" scoped="" ref="0x7f89611144d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8961114660"/>
        <function-ref name="overflow" scoped="" ref="0x7f89611147f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8961114980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8961114b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f89610e43e0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f89610e43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610e4760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610e48f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610e4a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610e4c10"/>
        <function-ref name="fired" scoped="" ref="0x7f89610e4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f89611095a0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f89611095a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961109920"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961109ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961109c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961109dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8961103020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89611031b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8961103340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89611034d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8961103660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f89610ea020" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f89610ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610ea3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610ea530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610ea6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610ea850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610ea9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610eab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610ead00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610e9020"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f89610f4dc0" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f89610f4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610fa180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610fa310"/>
        <function-ref name="captured" scoped="" ref="0x7f89610fa4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610fa630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610fa7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610fa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f89610de020" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f89610de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610de3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610de530"/>
        <function-ref name="captured" scoped="" ref="0x7f89610de6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610de850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610de9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610deb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f8961100140" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f8961100140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89611004c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961100650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89611007e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961100970"/>
        <function-ref name="fired" scoped="" ref="0x7f8961100b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f89610e6700" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f89610e6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610e6a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610e6c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610e6da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610e5020"/>
        <function-ref name="fired" scoped="" ref="0x7f89610e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f89610db020" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f89610db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610db3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610db530"/>
        <function-ref name="captured" scoped="" ref="0x7f89610db6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610db850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610db9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610dbb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f89610ed5a0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f89610ed5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610ed920"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610edab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610edc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610eddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610ec020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610ec1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610ec340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610ec4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f89610f3b70" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f89610f3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89610f2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f89610f21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610f2340"/>
        <function-ref name="get" scoped="" ref="0x7f89610f24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610f2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610f27f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f89610f2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610f2b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f89610f2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f89610f2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f89610f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f89610e21f0" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f89610e21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610e2570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610e2700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610e2890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610e2a20"/>
        <function-ref name="fired" scoped="" ref="0x7f89610e2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f89610e0020" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f89610e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610e03a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89610e0530"/>
        <function-ref name="captured" scoped="" ref="0x7f89610e06c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610e0850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610e09e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89610e0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f89610e1020" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f89610e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610e15a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610e1730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610e18c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610e1a50"/>
        <function-ref name="fired" scoped="" ref="0x7f89610e1be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f89610e8a20" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f89610e8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610e8da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89610e7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610e71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89610e7340"/>
        <function-ref name="fired" scoped="" ref="0x7f89610e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f89610e95a0" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f89610e95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610e9920"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610e9ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610e9c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610e9dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610e8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610e81b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610e8340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610e84d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610e8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f89610a2aa0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f89610a2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89610a2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f89610a2450" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f89610a2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89610a27d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f89610a1120" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f89610a1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89610a14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f89610a3d80" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f89610a3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89610a2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f89610a4540" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f89610a4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89610a48c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f89610a4a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610a4be0"/>
        <function-ref name="get" scoped="" ref="0x7f89610a4d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610a3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610a31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f89610a3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610a34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f89610a3660"/>
        <function-ref name="setMode" scoped="" ref="0x7f89610a37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f89610a3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f896109b940" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f896109b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896109bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f896109b2f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f896109b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896109b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f8961099020" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f8961099020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89610993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f896109cbf0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f896109cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896109b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f896109d3e0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f896109d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896109d760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f896109d8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f896109da80"/>
        <function-ref name="get" scoped="" ref="0x7f896109dc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f896109dda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896109c020"/>
        <function-ref name="getMode" scoped="" ref="0x7f896109c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896109c340"/>
        <function-ref name="overflow" scoped="" ref="0x7f896109c4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f896109c660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f896109c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f896104ea90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f896104ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f896104ee10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f896104d020"/>
        <function-ref name="captured" scoped="" ref="0x7f896104d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896104d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896104d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f896104d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f89610969d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f89610969d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961096d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961050020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610501b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961050340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610504d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961050660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610507f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961050980"/>
        <function-ref name="setControl" scoped="" ref="0x7f8961050b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f896104b020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f896104b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896104b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961050de0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961050de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f896104e180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f896104e310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f896104e4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f896104e630"/>
        <function-ref name="fired" scoped="" ref="0x7f896104e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f896104d930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f896104d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896104dcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f896104de40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f896104c020"/>
        <function-ref name="get" scoped="" ref="0x7f896104c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f896104c340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896104c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f896104c660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896104c7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f896104c980"/>
        <function-ref name="setMode" scoped="" ref="0x7f896104cb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f896104cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8961046160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f8961046160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610464e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8961046670"/>
        <function-ref name="captured" scoped="" ref="0x7f8961046800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8961046990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8961046b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8961046cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f8961048020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f8961048020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610483a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961048530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610486c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961048850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610489e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961048b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8961048d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961047020"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f89610447a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f89610447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8961044b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961047480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961047480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961047800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961047990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8961047b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961047cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f8961047e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8961045020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8961045020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89610453a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8961045530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610456c0"/>
        <function-ref name="get" scoped="" ref="0x7f8961045850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610459e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8961045b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f8961045d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8961044020"/>
        <function-ref name="overflow" scoped="" ref="0x7f89610441b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8961044340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f89610444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f896103f7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f896103f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f896103fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f896103fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f896103fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896103d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896103d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f896103d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f89610416d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f89610416d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961041a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961041be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961041d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961040020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610401b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961040340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610404d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961040660"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610407f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f896103cc50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f896103cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896103b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961040ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961040ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961040e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f896103f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f896103f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f896103f340"/>
        <function-ref name="fired" scoped="" ref="0x7f896103f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f896103d610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f896103d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896103d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f896103db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f896103dcb0"/>
        <function-ref name="get" scoped="" ref="0x7f896103de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f896103c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896103c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f896103c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896103c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f896103c660"/>
        <function-ref name="setMode" scoped="" ref="0x7f896103c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f896103c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8961037cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f8961037cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610360a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8961036230"/>
        <function-ref name="captured" scoped="" ref="0x7f89610363c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8961036550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610366e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8961036870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f8961039b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f8961039b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961038020"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961038340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610384d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8961038660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610387f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8961038980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961038b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f8961038ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f89610342f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f89610342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8961034670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961037020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961037020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610373a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961037530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610376c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961037850"/>
        <function-ref name="fired" scoped="" ref="0x7f89610379e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8961036b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8961036b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8961035020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f89610351b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961035340"/>
        <function-ref name="get" scoped="" ref="0x7f89610354d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961035660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610357f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8961035980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8961035b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f8961035ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8961035e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8961034020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f896102f2f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f896102f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f896102f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f896102f800"/>
        <function-ref name="captured" scoped="" ref="0x7f896102f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896102fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896102fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f896102fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f8961031220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f8961031220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610315a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961031730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610318c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961031a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8961031be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961031d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8961030020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610301b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8961030340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f896102c7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f896102c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896102cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961030610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961030610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961030990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961030b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8961030cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961030e40"/>
        <function-ref name="fired" scoped="" ref="0x7f896102f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f896102d160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f896102d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896102d4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f896102d670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f896102d800"/>
        <function-ref name="get" scoped="" ref="0x7f896102d990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f896102db20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896102dcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f896102de40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896102c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f896102c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f896102c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f896102c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f89610277a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f89610277a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961027b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8961027cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f8961027e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8961026020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610261b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8961026340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f89610296d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f89610296d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961029a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961029be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961029d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961028020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610281b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961028340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610284d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961028660"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610287f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f8961025c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f8961025c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8961024020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961028ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961028ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961028e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961027020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610271b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961027340"/>
        <function-ref name="fired" scoped="" ref="0x7f89610274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8961026610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8961026610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8961026990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8961026b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961026cb0"/>
        <function-ref name="get" scoped="" ref="0x7f8961026e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961025020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610251b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8961025340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610254d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8961025660"/>
        <function-ref name="setMode" scoped="" ref="0x7f89610257f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8961025980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8961020cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f8961020cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f896101f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f896101f230"/>
        <function-ref name="captured" scoped="" ref="0x7f896101f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896101f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896101f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f896101f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f8961022b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f8961022b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961021020"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610211b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961021340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610214d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8961021660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610217f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8961021980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961021b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f8961021ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f896101c2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f896101c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896101c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961020020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961020020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610203a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961020530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610206c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961020850"/>
        <function-ref name="fired" scoped="" ref="0x7f89610209e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f896101fb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f896101fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896101d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f896101d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f896101d340"/>
        <function-ref name="get" scoped="" ref="0x7f896101d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f896101d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896101d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f896101d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896101db10"/>
        <function-ref name="overflow" scoped="" ref="0x7f896101dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f896101de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f896101c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f89610172f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f89610172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961017670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8961017800"/>
        <function-ref name="captured" scoped="" ref="0x7f8961017990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8961017b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8961017cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8961017e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f8961019220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f8961019220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89610195a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961019730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89610198c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961019a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8961019be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961019d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8961018020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89610181b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8961018340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f89610157a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f89610157a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8961015b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961018610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961018610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961018990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961018b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8961018cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961018e40"/>
        <function-ref name="fired" scoped="" ref="0x7f8961017020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8961016160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8961016160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89610164e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8961016670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961016800"/>
        <function-ref name="get" scoped="" ref="0x7f8961016990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961016b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8961016cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8961016e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8961015020"/>
        <function-ref name="overflow" scoped="" ref="0x7f89610151b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8961015340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f89610154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f89610107a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f89610107a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961010b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8961010cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f8961010e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896100f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896100f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f896100f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f89610126d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f89610126d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961012a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f8961012be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961012d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8961011020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89610111b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961011340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89610114d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961011660"/>
        <function-ref name="setControl" scoped="" ref="0x7f89610117f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f896100dc50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f896100dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896100c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961011ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961011ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8961011e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961010020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610101b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961010340"/>
        <function-ref name="fired" scoped="" ref="0x7f89610104d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f896100f610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f896100f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896100f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f896100fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f896100fcb0"/>
        <function-ref name="get" scoped="" ref="0x7f896100fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f896100d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896100d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f896100d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896100d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f896100d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f896100d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f896100d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8961008cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f8961008cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610070a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8961007230"/>
        <function-ref name="captured" scoped="" ref="0x7f89610073c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8961007550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89610076e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8961007870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f896100ab30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f896100ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8961009020"/>
        <function-ref name="getControl" scoped="" ref="0x7f89610091b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961009340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89610094d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8961009660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89610097f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8961009980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8961009b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f8961009ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f89610052f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f89610052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8961005670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8961008020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8961008020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89610083a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8961008530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89610086c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8961008850"/>
        <function-ref name="fired" scoped="" ref="0x7f89610089e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8961007b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8961007b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8961006020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f89610061b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8961006340"/>
        <function-ref name="get" scoped="" ref="0x7f89610064d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8961006660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89610067f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8961006980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8961006b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f8961006ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8961006e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8961005020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f8960fff240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f8960fff240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8960fff5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f8961003a90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f8961003a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8961003e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f8961000260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f8961000260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89610005e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f89610009f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f89610009f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8961000d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f89613784c0" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f89613784c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f8961378840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f896168c3b0" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f896168c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f896168c730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f896168c8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f896168ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f89614b4bc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f89614b4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f89615f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f896115eb40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f896115eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f8960fc7b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f8960fc71b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f8960fc7340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f8960fc74d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f8960fc7020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f8960fc7660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f8960fc77f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f8960fc7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f8960fbcdc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8960fbcdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8960fba180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8960fcb590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f8960fcb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8960fcb910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f8960fbc6c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f8960fbc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8960fbca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f8960fcbc00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f8960fcbc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8960fbc020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8960fbc1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8960fbc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f8961764410" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f8961764410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8961764790"/>
        <function-ref name="runTask" scoped="" ref="0x7f8961764920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f89616f53a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f89616f53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f89616f5720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f89616f58b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f89616f5a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f896129e040" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f896129e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f896129e3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f896129e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f896129a490" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f896129a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f896129a810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f896129a9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f896129ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f89612a0140" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f89612a0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f89612a04c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f89612a0650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f89612a07e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8961188590" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8961188590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8961188910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8961188aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8961188c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8961188dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8960fb0020"/>
        <function-ref name="get" scoped="" ref="0x7f8960fb01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8960fb0340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8960fb0980"/>
        <function-ref name="set" scoped="" ref="0x7f8960fb04d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f8960fb0660"/>
        <function-ref name="led2On" scoped="" ref="0x7f8960fb07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f8960fa47b0" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f8960fa47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960fa4b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960fa4cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960fa4e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960faa020"/>
        <function-ref name="get" scoped="" ref="0x7f8960faa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960faa340"/>
        <function-ref name="set" scoped="" ref="0x7f8960faa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960faa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8960faf8d0" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8960faf8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8960fafc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f8960faa980" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f8960faa980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960faad00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960fa3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960fa31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960fa3340"/>
        <function-ref name="get" scoped="" ref="0x7f8960fa34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960fa3660"/>
        <function-ref name="set" scoped="" ref="0x7f8960fa37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960fa3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8960fac020" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8960fac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8960fac3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8960fac530"/>
        <function-ref name="led1On" scoped="" ref="0x7f8960fac6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8960fac850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8960fac9e0"/>
        <function-ref name="get" scoped="" ref="0x7f8960facb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8960facd00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8960fab4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960fab020"/>
        <function-ref name="led0On" scoped="" ref="0x7f8960fab1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8960fab340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f8960fa3ca0" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f8960fa3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960fa20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960fa2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960fa23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960fa2550"/>
        <function-ref name="get" scoped="" ref="0x7f8960fa26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960fa2870"/>
        <function-ref name="set" scoped="" ref="0x7f8960fa2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8960fa2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f8960f87360" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f8960f87360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f876e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f87870"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f87a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f87b90"/>
        <function-ref name="get" scoped="" ref="0x7f8960f87d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f86020"/>
        <function-ref name="set" scoped="" ref="0x7f8960f861b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f86340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f8960f866a0" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f8960f866a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f86a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f86bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f86d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f85020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f85340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f854d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f85660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f8960f84c40" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8960f84c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8960f83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f8960f859c0" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f8960f859c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f85d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f84020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f84340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f84660"/>
        <function-ref name="set" scoped="" ref="0x7f8960f847f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f84980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f8960f6d020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f8960f6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f6d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f6d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f6d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f6d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f6d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f6db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f6dd00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f6c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f6c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f6c340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f6c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f6c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f6c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f6ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f6cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f8960f59020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f8960f59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f593a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f59530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f596c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f59850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f599e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f59b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f59d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f58020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f58340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f58660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f58a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f58c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f8960f10560" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f8960f10560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f108e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f10a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f10c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f10d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f0e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f0e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f0e340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f0e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f0e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f0e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f0e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f0eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f0eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f0d020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f8960eeb570" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f8960eeb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960eeb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960eeba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960eebc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960eebda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960eea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960eea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960eea340"/>
        <function-ref name="get" scoped="" ref="0x7f8960eea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960eea660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960eea7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960eea980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960eeab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960eeaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ee9020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ee91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f8960f0d580" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f8960f0d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f0d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f0da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f0dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f0ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f0c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f0c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f0c340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f0c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f0c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f0c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f0c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f0cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f0cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f0b020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f8960f55020" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f8960f55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f55530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f556c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f55850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f559e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f55b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f55d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f54020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f54340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f54660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f54a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f54c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f8960f41200" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f8960f41200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f41580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f41710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f418a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f41a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f41bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f41d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f40020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f401b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f40340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f404d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f40660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f407f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f40980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f40c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f40da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f8960f2c200" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f8960f2c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f2c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f2c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f2c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f2ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f2cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f2cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f2b020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f2b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f2b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f2b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f2b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f2b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f2b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f2bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f2bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f8960f1c200" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f8960f1c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f1c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f1c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f1c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f1ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f1cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f1cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f1b020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f1b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f1b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f1b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f1b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f1b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f1b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f1bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f1bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f8960f07580" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f8960f07580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f07900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f07a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f07c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f07db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f06020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f06340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f064d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f06660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f067f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f06980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f06b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f06ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f05020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f8960ef7570" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f8960ef7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ef78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ef7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ef7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ef7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ef6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ef61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ef6340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ef64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ef6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ef67f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ef6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ef6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ef6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ef5020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ef51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f8960ee3580" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f8960ee3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ee3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ee3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ee3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ee3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ee2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ee21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ee2340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ee24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ee2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ee27f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ee2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ee2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ee2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ee1020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ee11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f8960f67020" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f8960f67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f67530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f676c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f67850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f67b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f67d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f66020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f66340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f66660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f66a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f66c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f8960f05580" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f8960f05580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f05900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f05a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f05c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f05db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f04020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f04340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f044d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f04660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f047f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f04980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f04b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f04ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f03020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f8960f63020" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f8960f63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f633a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f63530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f636c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f63850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f639e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f63b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f63d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f62020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f62340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f62660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f62a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f62c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f8960f4f020" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f8960f4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f4f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f4f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f4f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f4f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f4f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f4fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f4fd00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f4e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f4e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f4e340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f4e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f4e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f4e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f4ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f4ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f8960f3a200" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f8960f3a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f3a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f3a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f3a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f3aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f3abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f3ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f39020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f391b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f39340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f394d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f39660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f397f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f39980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f39c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f39da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f8960f26200" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f8960f26200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f26580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f26710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f268a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f26a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f26bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f26d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f25020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f251b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f25340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f254d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f25660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f257f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f25980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f25c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f25da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f8960f16200" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f8960f16200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f16580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f16710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f168a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f16a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f16bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f16d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f15020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f151b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f15340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f154d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f15660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f157f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f15980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f15c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f15da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f8960f72020" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f8960f72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f72530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f726c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f72850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f729e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f72b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f72d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f71340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f71a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f8960f5d020" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f8960f5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f5d4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f5d630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f5d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f5d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f5dae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f5dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f5de00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f5c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f5c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f5c340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f5c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f5c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f5c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f5ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f5cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f8960f49020" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f8960f49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f493a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f49530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f496c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f49850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f499e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f49b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f49d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f48020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f48340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f48660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f48a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f48c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f8960f12580" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f8960f12580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f12900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f12a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f12c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f12db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f11020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f11340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f11660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f117f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f11980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f11b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f11ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f10020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f8960ef1570" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f8960ef1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ef18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ef1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ef1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ef1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ef0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ef01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ef0340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ef04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ef0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ef07f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ef0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ef0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ef0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960eef020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960eef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f8960ee5570" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f8960ee5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ee58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ee5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ee5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ee5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ee4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ee41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ee4340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ee44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ee4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ee47f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ee4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ee4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ee4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ee3020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ee31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f8960efd580" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f8960efd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960efd900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960efda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960efdc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960efddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960efc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960efc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960efc340"/>
        <function-ref name="get" scoped="" ref="0x7f8960efc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960efc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960efc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960efc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960efcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960efcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960efb020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960efb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f8960f45020" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f8960f45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f455a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f45730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f458c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f45a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f45be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f45d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f44020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f441b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f44340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f444d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f44660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f447f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f44980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f44c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f44da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f8960f30200" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f8960f30200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f30580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f30710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f308a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f30a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f30bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f30d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f2f020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f2f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f2f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f2f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f2f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f2f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f2f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f2fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f2fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f8960f20200" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f8960f20200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f20580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f20710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f208a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f20a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f20bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f20d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f1f020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f1f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f1f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f1f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f1f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f1f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f1f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f1fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f1fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f8960eef570" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f8960eef570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960eef8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960eefa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960eefc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960eefda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960eee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960eee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960eee340"/>
        <function-ref name="get" scoped="" ref="0x7f8960eee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960eee660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960eee7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960eee980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960eeeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960eeeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960eed020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960eed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f8960f03570" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f8960f03570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f038f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f03a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f03c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f03da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f02020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f02340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f024d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f02660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f027f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f02980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f02b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f02ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f01020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f8960f6b020" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f8960f6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f6b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f6b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f6b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f6b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f6b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f6bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f6bd00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f6a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f6a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f6a340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f6a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f6a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f6a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f6aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f6ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f8960f57020" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f8960f57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f57530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f576c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f57850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f579e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f57b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f57d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f56020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f56340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f56660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f56a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f56c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f8960f24200" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f8960f24200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f24580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f24710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f248a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f24a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f24bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f24d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f23020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f23340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f234d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f23660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f237f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f23980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f23c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f23da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f8960f53020" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f8960f53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f53530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f536c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f53850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f539e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f53b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f53d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f52020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f52340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f52660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f52a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f52c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f8960f3e200" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f8960f3e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f3e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f3e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f3e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f3ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f3ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f3ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f3d020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f3d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f3d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f3d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f3d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f3d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f3d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f3dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f3dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f8960f2a200" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f8960f2a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f2a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f2a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f2a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f2aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f2abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f2ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f29020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f291b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f29340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f294d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f29660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f297f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f29980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f29c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f29da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f8960f1a200" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f8960f1a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f1a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f1a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f1a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f1aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f1abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f1ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f19020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f191b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f19340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f194d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f19660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f197f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f19980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f19c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f19da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f8960eff580" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f8960eff580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960eff900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960effa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960effc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960effdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960efe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960efe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960efe340"/>
        <function-ref name="get" scoped="" ref="0x7f8960efe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960efe660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960efe7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960efe980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960efeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960efeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960efd020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960efd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f8960f7f020" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f8960f7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f7f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f7f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f7f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f7f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f7f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f7fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f7fd00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f7e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f7e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f7e340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f7e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f7e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f7e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f7ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f7ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f8960f61020" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f8960f61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f61530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f616c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f61850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f619e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f61b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f61d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f60020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f60340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f60660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f60a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f60c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f8960f4d020" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f8960f4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f4d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f4d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f4d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f4d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f4d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f4db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f4dd00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f4c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f4c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f4c340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f4c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f4c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f4c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f4ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f4cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f8960f38200" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f8960f38200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f38580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f38710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f388a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f38a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f38bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f38d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f37020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f37340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f374d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f37660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f377f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f37980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f37c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f37da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f8960efb580" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f8960efb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960efb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960efba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960efbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960efbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960efa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960efa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960efa340"/>
        <function-ref name="get" scoped="" ref="0x7f8960efa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960efa660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960efa7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960efa980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960efab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960efaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ef9020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ef91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f8960ef5570" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f8960ef5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ef58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ef5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ef5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ef5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ef4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ef41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ef4340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ef44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ef4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ef47f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ef4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ef4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ef4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ef3020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ef31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f8960ee9570" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f8960ee9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ee98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ee9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ee9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ee9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ee8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ee81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ee8340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ee84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ee8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ee87f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ee8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ee8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ee8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ee7020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ee71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f8960f34200" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f8960f34200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f34580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f34710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f348a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f34a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f34bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f34d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f33020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f331b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f33340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f334d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f33660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f337f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f33980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f33c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f33da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f8960ef9580" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f8960ef9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ef9900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ef9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ef9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ef9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ef8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ef81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ef8340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ef84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ef8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ef87f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ef8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ef8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ef8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ef7020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ef71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f8960f70020" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f8960f70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f70530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f706c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f70850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f709e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f70b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f70d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f6f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f6f340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f6f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f6f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f6f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f6fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f6fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f8960f5b020" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f8960f5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f5b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f5b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f5b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f5b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f5b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f5bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f5bd00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f5a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f5a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f5a340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f5a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f5a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f5a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f5aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f5ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f8960f47020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f8960f47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f47530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f476c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f47850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f479e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f47b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f47d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f46340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f46a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f8960f01580" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f8960f01580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f01900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f01a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f01c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f01db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f00020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f00340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f004d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f00660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f007f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f00980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f00b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f00ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960eff020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960eff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f8960eed570" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f8960eed570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960eed8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960eeda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960eedc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960eedda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960eec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960eec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960eec340"/>
        <function-ref name="get" scoped="" ref="0x7f8960eec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960eec660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960eec7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960eec980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960eecb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960eecca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960eeb020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960eeb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f8960f43200" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f8960f43200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f43580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f43710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f438a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f43a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f43bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f43d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f42020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f42340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f424d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f42660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f427f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f42980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f42c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f42da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f8960f2e200" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f8960f2e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f2e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f2e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f2e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f2ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f2ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f2ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f2d020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f2d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f2d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f2d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f2d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f2d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f2d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f2dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f2dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f8960f1e200" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f8960f1e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f1e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f1e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f1e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f1ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f1ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f1ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f1d020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f1d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f1d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f1d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f1d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f1d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f1d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f1dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f1dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f8960f69020" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f8960f69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f69530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f696c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f69850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f699e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f69b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f69d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f68020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f68340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f68660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f68a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f68c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f8960f22200" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f8960f22200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f22580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f22710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f228a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f22a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f22bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f22d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f21020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f21340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f214d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f21660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f21980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f21c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f21da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f8960f65020" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f8960f65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f65530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f656c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f65850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f659e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f65b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f65d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f64020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f64340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f64660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f64a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f64c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f8960f51020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f8960f51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f51530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f516c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f51850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f51b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f51d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f50020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f50340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f50660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f50a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f50c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f8960f3c200" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f8960f3c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f3c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f3c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f3c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f3ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f3cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f3cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f3b020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f3b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f3b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f3b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f3b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f3b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f3b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f3bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f3bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f8960f28200" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f8960f28200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f28580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f28710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f288a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f28a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f28bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f28d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f27020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f271b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f27340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f274d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f27660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f277f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f27980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f27c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f27da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f8960f18200" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f8960f18200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f18580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f18710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f188a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f18a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f18bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f18d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f17020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f171b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f17340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f174d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f17660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f177f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f17980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f17c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f17da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f8960f74020" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f8960f74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f743a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f74530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f746c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f74850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f749e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f74b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f74d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f73020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f731b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f73340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f734d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f73660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f737f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f73a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f73c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f8960f5f020" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f8960f5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f5f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f5f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f5f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f5f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f5f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f5fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f5fd00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f5e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f5e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f5e340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f5e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f5e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f5e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f5ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f5ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f8960f4b020" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f8960f4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f4b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f4b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f4b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f4b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f4b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f4bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f4bd00"/>
        <function-ref name="get" scoped="" ref="0x7f8960f4a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f4a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f4a340"/>
        <function-ref name="set" scoped="" ref="0x7f8960f4a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f4a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f4a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f4aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f4ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f8960f36200" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f8960f36200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f36580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f36710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f368a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f36a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f36bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f36d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f35020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f351b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f35340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f354d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f35660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f357f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f35980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f35c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f35da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f8960f09560" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f8960f09560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f098e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f09a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f09c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f09d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f08020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f08340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f084d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f08660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f087f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f08980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f08b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f08ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f07020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f8960ef3570" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f8960ef3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ef38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ef3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ef3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ef3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ef2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ef21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ef2340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ef24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ef2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ef27f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ef2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ef2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ef2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ef1020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ef11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f8960f0b580" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f8960f0b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f0b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f0ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f0bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f0bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f0a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f0a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f0a340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f0a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f0a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f0a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f0a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f0ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f0aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f09020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f8960f32200" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f8960f32200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f32580"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f32710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f328a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f32a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f32bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f32d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f31020"/>
        <function-ref name="get" scoped="" ref="0x7f8960f311b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f31340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f314d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f31660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f317f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f31980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f31c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f31da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f8960ee7570" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f8960ee7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ee78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ee7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ee7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ee7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ee6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ee61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ee6340"/>
        <function-ref name="get" scoped="" ref="0x7f8960ee64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ee6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ee67f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ee6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ee6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ee6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ee5020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ee51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f8960ee1580" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f8960ee1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ee1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ee1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ee1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ee1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960edf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960edf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960edf340"/>
        <function-ref name="get" scoped="" ref="0x7f8960edf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960edf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960edf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960edf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960edfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960edfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ede020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ede1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f8960f141f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f8960f141f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960f14970"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960f14b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960f14c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960f14e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960f13020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960f131b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960f13340"/>
        <function-ref name="get" scoped="" ref="0x7f8960f134d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960f13660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960f137f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960f13980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960f13b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960f13ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960f12020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960f121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960eb56d0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960eb56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960eb5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960eb5be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960eb5d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960eb4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960eb41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960eb4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960eb44d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960eb4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960eb47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960eb4980"/>
        <function-ref name="set" scoped="" ref="0x7f8960eb4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960eb4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960eb4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960eb3120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960eb32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960eb0100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960eb0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960eb0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960eb0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960eb07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960eb0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960eb0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960eb0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960eb0de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960eaf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960eaf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960eaf340"/>
        <function-ref name="set" scoped="" ref="0x7f8960eaf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960eaf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960eaf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960eafa80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960eafc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960eacd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960eacd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960eab0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960eab270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960eab400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960eab590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960eab720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960eab8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960eaba40"/>
        <function-ref name="get" scoped="" ref="0x7f8960eabbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960eabd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960eaa020"/>
        <function-ref name="set" scoped="" ref="0x7f8960eaa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960eaa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960eaa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960eaa760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960eaa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960ea7740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960ea7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ea7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ea7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ea7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ea6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ea61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ea6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ea64d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960ea6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ea67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ea6980"/>
        <function-ref name="set" scoped="" ref="0x7f8960ea6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ea6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ea6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ea5120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ea52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960ea2100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960ea2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960ea2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960ea2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960ea27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ea2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ea2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ea2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ea2de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960ea1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ea11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ea1340"/>
        <function-ref name="set" scoped="" ref="0x7f8960ea14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ea1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ea17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ea1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ea1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e9ed10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e9ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e9d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e9d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e9d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e9d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e9d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e9d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e9da40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e9dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e9dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e9c020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e9c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e9c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e9c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e9c760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e9c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e99740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e99740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e99ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e99c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e99de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e97020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e97340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e974d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e97660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e97980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e97b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e97ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e97e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e96120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e93100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e93100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e93480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e93610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e937a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e93930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e93ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e93c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e93de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e92020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e92340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e92660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e92a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e92c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e8fd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e8fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e8e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e8e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e8e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e8e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e8e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e8e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e8ea40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e8ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e8ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e8d020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e8d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e8d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e8d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e8d760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e8d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e8a740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e8a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e8aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e8ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e8ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e89020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e891b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e89340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e894d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e89660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e89980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e89b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e89ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e89e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e88120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e85100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e85100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e85480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e85610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e857a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e85930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e85ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e85c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e85de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e84020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e841b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e84340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e844d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e84660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e847f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e84a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e84c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e81d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e81d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e800e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e80270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e80400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e80590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e80720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e808b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e80a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e80bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e80d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e7f020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e7f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e7f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e7f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e7f760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e7f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e7c860" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e7c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e7cbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e7cd70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e7b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e7b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e7b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e7b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e7b660"/>
        <function-ref name="get" scoped="" ref="0x7f8960e7b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e7b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e7bb10"/>
        <function-ref name="set" scoped="" ref="0x7f8960e7bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e7be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e7a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e7a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e7a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e77270" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e77270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e775f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e77780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e77910"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e77aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e77c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e77dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e76020"/>
        <function-ref name="get" scoped="" ref="0x7f8960e761b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e76340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e764d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960e76660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e767f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e76980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e76c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e76da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e73d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e73d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e710e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e71270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e71400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e71590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e71720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e718b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e71a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e71bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e71d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e70020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e701b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e70340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e704d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e70760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e6d740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e6d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e6dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e6dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e6dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e6c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e6c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e6c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e6c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e6c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e6c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e6c980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e6cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e6cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e6ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e6b120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e6b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e68100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e68100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e68480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e68610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e687a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e68930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e68ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e68c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e68de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e67020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e671b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e67340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e674d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e67660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e677f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e67a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e67c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e64d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e64d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e630e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e63270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e63400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e63590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e63720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e638b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e63a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e63bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e63d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e62020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e621b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e62340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e624d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e62760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e628f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e5f740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e5f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e5fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e5fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e5fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e5e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e5e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e5e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e5e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e5e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e5e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e5e980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e5eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e5eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e5ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e5d120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e5d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e5a100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e5a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e5a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e5a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e5a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e5a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e5aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e5ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e5ade0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e59020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e59340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e59660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e59a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e59c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e56d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e56d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e550e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e55270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e55400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e55590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e55720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e558b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e55a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e55bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e55d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e54020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e54340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e54760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e51740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e51740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e51ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e51c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e51de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e50020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e501b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e50340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e504d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e50660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e507f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e50980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e50b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e50ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e50e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e4f120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e4f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e4b100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e4b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e4b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e4b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e4b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e4b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e4bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e4bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e4bde0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e4a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e4a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e4a340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e4a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e4a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e4a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e4aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e4ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e47d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e47d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e460e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e46270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e46400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e46590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e46720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e468b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e46a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e46bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e46d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e45020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e45340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e45760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e42a60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e42a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e42de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e41020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e41340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e414d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e41660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e417f0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e41980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e41b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e41ca0"/>
        <function-ref name="set" scoped="" ref="0x7f8960e41e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e40020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e401b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e40440"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e405d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e3d460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e3d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e3d7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e3d970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e3db00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e3dc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e3de20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e3c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e3c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e3c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e3c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e3c660"/>
        <function-ref name="set" scoped="" ref="0x7f8960e3c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e3c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e3cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e3cda0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e39e00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e39e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e381c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e38350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e384e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e38670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e38800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e38990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e38b20"/>
        <function-ref name="get" scoped="" ref="0x7f8960e38cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e38e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e37020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e37340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e37760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e378f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e34740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e34740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e34ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e34c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e34de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e33020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e33340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e334d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e33660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e337f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e33980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e33b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e33ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e33e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e32120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e2f100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e2f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e2f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e2f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e2f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e2f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e2fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e2fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e2fde0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e2e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e2e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e2e340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e2e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e2e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e2e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e2ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e2ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e2bd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e2bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e290e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e29270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e29400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e29590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e29720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e298b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e29a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e29bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e29d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e28020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e28340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e28760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e25740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e25740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e25ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e25c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e25de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e24020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e241b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e24340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e244d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e24660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e247f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e24980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e24b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e24ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e24e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e23120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e20100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e20100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e20480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e20610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e207a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e20930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e20ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e20c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e20de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e1f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e1f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e1f340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e1f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e1f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e1f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e1fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e1fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e1cd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e1cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e1b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e1b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e1b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e1b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e1b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e1b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e1ba40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e1bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e1bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e1a020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e1a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e1a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e1a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e1a760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e1a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e17740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e17740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e17ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e17c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e17de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e16020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e161b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e16340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e164d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e16660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e16980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e16b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e16ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e16e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e15120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e12100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e12100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e12480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e12610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e127a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e12930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e12ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e12c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e12de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e11020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e111b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e11340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e114d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e11660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e117f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e11a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e11c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e0ed10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e0ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e0d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e0d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e0d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e0d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e0d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e0d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e0da40"/>
        <function-ref name="get" scoped="" ref="0x7f8960e0dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e0dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e0c020"/>
        <function-ref name="set" scoped="" ref="0x7f8960e0c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e0c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e0c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e0c760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e0c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e09740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e09740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e09ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e09c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e09de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e08020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e08340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e084d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e08660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e08980"/>
        <function-ref name="set" scoped="" ref="0x7f8960e08b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e08ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e08e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e07120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960e04100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960e04100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960e04480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960e04610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960e047a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960e04930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960e04ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960e04c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960e04de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960e02020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960e021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960e02340"/>
        <function-ref name="set" scoped="" ref="0x7f8960e024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960e02660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960e027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960e02a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960e02c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960dffd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960dffd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960dfe0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960dfe270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960dfe400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960dfe590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960dfe720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960dfe8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960dfea40"/>
        <function-ref name="get" scoped="" ref="0x7f8960dfebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960dfed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960dfd020"/>
        <function-ref name="set" scoped="" ref="0x7f8960dfd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960dfd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960dfd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960dfd760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960dfd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960dfa740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960dfa740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960dfaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960dfac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960dfade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960df9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960df91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960df9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960df94d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960df9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960df97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960df9980"/>
        <function-ref name="set" scoped="" ref="0x7f8960df9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960df9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960df9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960df8120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960df82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960df5100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960df5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960df5480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960df5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960df57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960df5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960df5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960df5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960df5de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960df4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960df41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960df4340"/>
        <function-ref name="set" scoped="" ref="0x7f8960df44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960df4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960df47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960df4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960df4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960df1d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960df1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960df00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960df0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960df0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960df0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960df0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960df08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960df0a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960df0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960df0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960def020"/>
        <function-ref name="set" scoped="" ref="0x7f8960def1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960def340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960def4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960def760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960def8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960dec740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960dec740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960decac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960decc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960decde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960deb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960deb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960deb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960deb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960deb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960deb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960deb980"/>
        <function-ref name="set" scoped="" ref="0x7f8960debb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960debca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960debe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960dea120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960dea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960de7100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960de7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960de7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960de7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960de77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960de7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960de7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960de7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960de7de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960de6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960de61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960de6340"/>
        <function-ref name="set" scoped="" ref="0x7f8960de64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960de6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960de67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960de6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960de6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960de3d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960de3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960de20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960de2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960de2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960de2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960de2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960de28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960de2a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960de2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960de2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960de1020"/>
        <function-ref name="set" scoped="" ref="0x7f8960de11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960de1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960de14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960de1760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960de18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960ddd740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960ddd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960dddac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960dddc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960dddde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960ddc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960ddc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960ddc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960ddc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960ddc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960ddc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960ddc980"/>
        <function-ref name="set" scoped="" ref="0x7f8960ddcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960ddcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960ddce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960ddb120"/>
        <function-ref name="clr" scoped="" ref="0x7f8960ddb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960dd8100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960dd8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960dd8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960dd8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960dd87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960dd8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960dd8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960dd8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960dd8de0"/>
        <function-ref name="get" scoped="" ref="0x7f8960dd7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960dd71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960dd7340"/>
        <function-ref name="set" scoped="" ref="0x7f8960dd74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960dd7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960dd77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960dd7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960dd7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8960dd4d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8960dd4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960dd30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960dd3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960dd3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960dd3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960dd3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960dd38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960dd3a40"/>
        <function-ref name="get" scoped="" ref="0x7f8960dd3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960dd3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960dd2020"/>
        <function-ref name="set" scoped="" ref="0x7f8960dd21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960dd2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960dd24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960dd2760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960dd28f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960d5a2f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960d5a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960d5a670"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960d5a800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960d5a990"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960d5ab20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960d5acb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960d5ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960d59020"/>
        <function-ref name="get" scoped="" ref="0x7f8960d591b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960d59340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960d594d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960d59660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960d597f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960d59980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960d59c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960d59da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960d6b020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960d6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960d6b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960d6b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960d6b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960d6b850"/>
        <function-ref name="get" scoped="" ref="0x7f8960d6b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960d6bb70"/>
        <function-ref name="set" scoped="" ref="0x7f8960d6bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f8960d5a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960d56de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960d56de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960d55180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960d55310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960d554a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960d55630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960d557c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960d55950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960d55ae0"/>
        <function-ref name="get" scoped="" ref="0x7f8960d55c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960d55e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960d54020"/>
        <function-ref name="set" scoped="" ref="0x7f8960d541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960d54340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960d544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960d54760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960d548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960d57b90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960d57b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960d56020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960d561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960d56340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960d564d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960d56660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960d567f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960d56980"/>
        <function-ref name="clr" scoped="" ref="0x7f8960d56b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960d51930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960d51930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960d51cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960d51e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960d4f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960d4f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960d4f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960d4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960d4f660"/>
        <function-ref name="get" scoped="" ref="0x7f8960d4f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960d4f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960d4fb10"/>
        <function-ref name="set" scoped="" ref="0x7f8960d4fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960d4fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960d4e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960d4e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960d4e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960d52710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960d52710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960d52a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960d52c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960d52db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960d51020"/>
        <function-ref name="get" scoped="" ref="0x7f8960d511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960d51340"/>
        <function-ref name="set" scoped="" ref="0x7f8960d514d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960d51660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8960b99370" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SenseAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8960b99370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960b95870"/>
        <function-ref name="fired" scoped="" ref="0x7f8960b98e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960b96c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960b96780"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960b941e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960b95cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960b96300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960b98020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960b95260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960b984f0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960b989c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f8960d399f0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d399f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960d34020"/>
        <function-ref name="fired" scoped="" ref="0x7f8960d37510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960d36300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960d37e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960d34920"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960d344a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960d37990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960d38670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960d36910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960d38b40"/>
        <function-ref name="stop" scoped="" ref="0x7f8960d37090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f8960d30560" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f8960d30560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960d2ca20"/>
        <function-ref name="fired" scoped="" ref="0x7f8960d2d020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960d2dda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960d2d920"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960d2b4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960d2b020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960d2d4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960d2e1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960d2c410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960d2e680"/>
        <function-ref name="stop" scoped="" ref="0x7f8960d2eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8960d29020" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f8960d29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960d29c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8960d33780" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8960d33780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8960d33b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8960c35870" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f8960c35870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960c31090"/>
        <function-ref name="fired" scoped="" ref="0x7f8960c33090"/>
        <function-ref name="startAt" scoped="" ref="0x7f8960c33a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960c33550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8960c31550"/>
        <function-ref name="start" scoped="" ref="0x7f8960c346a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960c34bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8960c35020" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8960c35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8960c353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f367360" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f367360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f364ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f895f366b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f364550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f364090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f363090"/>
        <function-ref name="start" scoped="" ref="0x7f895f3661b0"/>
        <function-ref name="stop" scoped="" ref="0x7f895f3666c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f368ab0" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f368ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f368e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f895f34ea80" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f34ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f895f34ee00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f895f34d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f895f34d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f895f34d340"/>
        <function-ref name="fired" scoped="" ref="0x7f895f34d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f895f351020" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f351020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f3513a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895f351530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f3516c0"/>
        <function-ref name="get" scoped="" ref="0x7f895f351850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f3519e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f351b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f895f351d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f34f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f34f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f895f34f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f895f34f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f895f34f760" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f34f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f895f34fae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f895f34fc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f34fe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f895f34e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f895f34e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f34e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f895f34e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f895f34e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f895f34e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f8960d031d0" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f8960d031d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8960d03550"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8960d036e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8960d03870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8960d03a00"/>
        <function-ref name="fired" scoped="" ref="0x7f8960d03b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f8960d08990" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960d08990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960d08d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8960d07020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8960d071b0"/>
        <function-ref name="get" scoped="" ref="0x7f8960d07340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8960d074d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960d07660"/>
        <function-ref name="getMode" scoped="" ref="0x7f8960d077f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960d07980"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960d07b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f8960d07ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8960d07e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f8960d06720" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8960d06720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8960d06aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8960d06c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8960d06dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8960d05020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8960d051b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8960d05340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8960d054d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8960d05660"/>
        <function-ref name="setControl" scoped="" ref="0x7f8960d057f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f895f344760" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f344760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f895f344ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f895f344c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f895f344e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f895f343020"/>
        <function-ref name="fired" scoped="" ref="0x7f895f3431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f895f348dd0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f348dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f346180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895f346310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f3464a0"/>
        <function-ref name="get" scoped="" ref="0x7f895f346630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f3467c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f346950"/>
        <function-ref name="getMode" scoped="" ref="0x7f895f346ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f346c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f346e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f895f345020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f895f3451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f34bbf0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f34bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f3484e0"/>
        <function-ref name="fired" scoped="" ref="0x7f895f3494e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f349e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f3499a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f3489a0"/>
        <function-ref name="start" scoped="" ref="0x7f895f34aa80"/>
        <function-ref name="stop" scoped="" ref="0x7f895f349020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f34b360" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f34b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f34b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f895f345440" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f345440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f895f3457c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f895f345950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f345ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f895f345c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f895f345e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f344020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f895f3441b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f895f344340"/>
        <function-ref name="setControl" scoped="" ref="0x7f895f3444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8960caeb50" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8960caeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960cb29b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960cb1360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960cb2e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960cb1820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f8960cacb70" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f8960cacb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960ca99b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960ca8360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960ca9e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960ca8820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f8960c97c50" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f8960c97c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960c95020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8960c951b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8960c95340"/>
        <function-ref name="get" scoped="" ref="0x7f8960c954d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8960c95660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960c957f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8960c95980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960c95b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960c95ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8960c95e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8960c94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8960ca5b80" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8960ca5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960ca49b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960c97360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960ca4e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960c97820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f8960c730f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f8960c730f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960c72020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960c729a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960c724e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960c72e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8960c91cf0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8960c91cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960c76b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960c75550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960c75090"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960c75a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f3615f0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f3615f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f35fe50"/>
        <function-ref name="fired" scoped="" ref="0x7f895f360e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f35f800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f35f340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f35d340"/>
        <function-ref name="start" scoped="" ref="0x7f895f360430"/>
        <function-ref name="stop" scoped="" ref="0x7f895f360940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f895f35bd20" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f895f35bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f357670"/>
        <function-ref name="fired" scoped="" ref="0x7f895f359550"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f357020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f359a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f357b30"/>
        <function-ref name="start" scoped="" ref="0x7f895f35ab60"/>
        <function-ref name="stop" scoped="" ref="0x7f895f359090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f895f35d9b0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f895f35d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895f35c7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f35b1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f35cca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f35b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f8960c009c0" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f8960c009c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960c00d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960bff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f8960c04850" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f8960c04850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960c00090"/>
        <function-ref name="fired" scoped="" ref="0x7f8960c01090"/>
        <function-ref name="startAt" scoped="" ref="0x7f8960c01a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960c01550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8960c00550"/>
        <function-ref name="start" scoped="" ref="0x7f8960c026a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960c02bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8960c092f0" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8960c092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960c05870"/>
        <function-ref name="fired" scoped="" ref="0x7f8960c07e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960c06c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960c06780"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960c041e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960c05cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960c06300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960c07020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960c05260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960c074f0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960c079c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f8960baea00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f8960baea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960baed80"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960bad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f8960bb4640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f8960bb4640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960bb0c40"/>
        <function-ref name="fired" scoped="" ref="0x7f8960bb11e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960bb0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960bb1ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960bae590"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960bae110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960bb1660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960bb2390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960bb0630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960bb2860"/>
        <function-ref name="stop" scoped="" ref="0x7f8960bb2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8960bb9150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8960bb9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960bb5700"/>
        <function-ref name="fired" scoped="" ref="0x7f8960bb8c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960bb7a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960bb75b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960bb4090"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960bb5ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960bb7110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960bb9d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960bb50d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960bb82a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960bb8790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8960bab790" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f8960bab790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960baa3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8960baaa60" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8960baaa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960ba0890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960b9f260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960ba0d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960b9f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f896089a900" loc="49:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SenseAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f896089a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f896089ac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f896089b240" loc="48:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SenseAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f896089b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f896089be30"/>
        <function-ref name="readDone" scoped="" ref="0x7f896089a300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f896089caa0" loc="47:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SenseAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f896089caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f896089ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f896089d310" loc="46:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SenseAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f896089d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f896089c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f896089c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7f895f2b1020" loc="54:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7f895f2b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f895f2b13a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f895f2b1530"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f895f2b16c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f895f2b1850"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f895f2b19e0"/>
        <function-ref name="reset" scoped="" ref="0x7f895f2b1b70"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f895f2b1d00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f895f2b0020"/>
        <function-ref name="resetDone" scoped="" ref="0x7f895f2b01b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f895f2b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f895f2b6210" loc="48:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f895f2b6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f895f2b6590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f895f2b6980" loc="49:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f895f2b6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895f2b55a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f895f2b5a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f895f2b93c0" loc="46:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f895f2b93c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f895f2b9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7f895f2b4060" loc="51:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7f895f2b4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f2b43e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f2b4570"/>
        <function-ref name="request" scoped="" ref="0x7f895f2b4700"/>
        <function-ref name="granted" scoped="" ref="0x7f895f2b4890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f2b4a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7f895f2b39b0" loc="53:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7f895f2b39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f895f2b3d30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f895f2b2020"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f895f2b21b0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f895f2b2340"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f895f2b24d0"/>
        <function-ref name="reset" scoped="" ref="0x7f895f2b2660"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f895f2b27f0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f895f2b2980"/>
        <function-ref name="resetDone" scoped="" ref="0x7f895f2b2b10"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f895f2b2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7f895f2b4cf0" loc="52:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7f895f2b4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f2b30a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f2b3230"/>
        <function-ref name="request" scoped="" ref="0x7f895f2b33c0"/>
        <function-ref name="granted" scoped="" ref="0x7f895f2b3550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f2b36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f895f2b9b30" loc="47:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f895f2b9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895f2b7750"/>
        <function-ref name="readDone" scoped="" ref="0x7f895f2b7bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f8960b3dd50" loc="45:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f8960b3dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f8960b3b100"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f8960b3b290"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f8960b3b420"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f8960b3b5b0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f8960b3b740"/>
        <function-ref name="reset" scoped="" ref="0x7f8960b3b8d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f8960b3ba60"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f8960b3bbf0"/>
        <function-ref name="resetDone" scoped="" ref="0x7f8960b3bd80"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f8960b3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8960b3e9d0" loc="44:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8960b3e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960b3ed50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960b3d020"/>
        <function-ref name="request" scoped="" ref="0x7f8960b3d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f8960b3d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960b3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7f8960abb480" loc="58:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f8960abb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8960abb800"/>
        <function-ref name="disable" scoped="" ref="0x7f8960abb990"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8960abbb20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8960abbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7f8960ab32f0" loc="102:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7f8960ab32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960ab3670"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960ab3800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7f8960ab4ac0" loc="103:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7f8960ab4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960ab4e40"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7f8960abc2f0" loc="57:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7f8960abc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960abc670"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960abc800"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960abc990"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960abcb20"/>
        <function-ref name="get" scoped="" ref="0x7f8960abccb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960abce40"/>
        <function-ref name="set" scoped="" ref="0x7f8960abb020"/>
        <function-ref name="clr" scoped="" ref="0x7f8960abb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f8960abfb20" loc="54:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f8960abfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f8960abe020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f8960abe1b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f8960abe340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f8960abe4d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f8960abe660"/>
        <function-ref name="reset" scoped="" ref="0x7f8960abe7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f8960abe980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f8960abeb10"/>
        <function-ref name="resetDone" scoped="" ref="0x7f8960abeca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f8960abee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f8960abd160" loc="56:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f8960abd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960abd4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960abd670"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960abd800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960abd990"/>
        <function-ref name="get" scoped="" ref="0x7f8960abdb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960abdcb0"/>
        <function-ref name="set" scoped="" ref="0x7f8960abde40"/>
        <function-ref name="clr" scoped="" ref="0x7f8960abc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8960ab5450" loc="62:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8960ab5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8960ab57d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8960ab5960"/>
        <function-ref name="led1On" scoped="" ref="0x7f8960ab5af0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8960ab5c80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8960ab5e10"/>
        <function-ref name="get" scoped="" ref="0x7f8960ab4020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8960ab41b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8960ab47f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960ab44d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8960ab4340"/>
        <function-ref name="led0On" scoped="" ref="0x7f8960ab4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8960aba0b0" loc="60:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8960aba0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960ab6630"/>
        <function-ref name="fired" scoped="" ref="0x7f8960ab9b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960ab8920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960ab84a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960ab5020"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960ab6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960ab8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960abaca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960ab6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960ab91b0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960ab9680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7f8960aa8730" loc="47:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f8960aa8730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8960aa8ab0"/>
        <function-ref name="disable" scoped="" ref="0x7f8960aa8c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8960aa8dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8960aa7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7f8960aa9370" loc="46:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f8960aa9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960aa96f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960aa9880"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960aa9a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960aa9ba0"/>
        <function-ref name="get" scoped="" ref="0x7f8960aa9d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960aa8020"/>
        <function-ref name="set" scoped="" ref="0x7f8960aa81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960aa8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7f8960aaa020" loc="45:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f8960aaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960aaa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960aaa530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960aaa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960aaa850"/>
        <function-ref name="get" scoped="" ref="0x7f8960aaa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960aaab70"/>
        <function-ref name="set" scoped="" ref="0x7f8960aaad00"/>
        <function-ref name="clr" scoped="" ref="0x7f8960aa9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8960aac1d0" loc="44:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8960aac1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960aac550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960aac6e0"/>
        <function-ref name="request" scoped="" ref="0x7f8960aac870"/>
        <function-ref name="granted" scoped="" ref="0x7f8960aaca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960aacb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960aa5490" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960aa5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960aa5810"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960aa59a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960aa5b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960aa5cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960aa5e50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960aa4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960aa41b0"/>
        <function-ref name="get" scoped="" ref="0x7f8960aa4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960aa44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960aa4660"/>
        <function-ref name="set" scoped="" ref="0x7f8960aa47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960aa4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960aa4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960aa4da0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960aa3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960aa6330" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960aa6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960aa66b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960aa6840"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960aa69d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960aa6b60"/>
        <function-ref name="get" scoped="" ref="0x7f8960aa6cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960aa6e80"/>
        <function-ref name="set" scoped="" ref="0x7f8960aa5030"/>
        <function-ref name="clr" scoped="" ref="0x7f8960aa51c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960aa0020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960aa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960aa03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960aa0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960aa06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960aa0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960aa09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960aa0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960aa0d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960a9f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960a9f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960a9f340"/>
        <function-ref name="set" scoped="" ref="0x7f8960a9f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960a9f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960a9f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960a9fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960a9fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960aa2d60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960aa2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960aa1180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960aa1310"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960aa14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960aa1630"/>
        <function-ref name="get" scoped="" ref="0x7f8960aa17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960aa1950"/>
        <function-ref name="set" scoped="" ref="0x7f8960aa1ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960aa1c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960a9cde0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960a9cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960a9b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960a9b310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960a9b4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960a9b630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960a9b7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960a9b950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960a9bae0"/>
        <function-ref name="get" scoped="" ref="0x7f8960a9bc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960a9be00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960a9a020"/>
        <function-ref name="set" scoped="" ref="0x7f8960a9a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960a9a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960a9a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960a9a760"/>
        <function-ref name="clr" scoped="" ref="0x7f8960a9a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960a9db60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960a9db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960a9c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960a9c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960a9c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960a9c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960a9c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960a9c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960a9c980"/>
        <function-ref name="clr" scoped="" ref="0x7f8960a9cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8960a953e0" loc="43:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f8960a953e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8960a95760"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8960a958f0"/>
        <function-ref name="start" scoped="" ref="0x7f8960a95a80"/>
        <function-ref name="stop" scoped="" ref="0x7f8960a95c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f8960a8a700" loc="50:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f8960a8a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960a8aa80"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960a8ac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f8960a8cb40" loc="47:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f8960a8cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960a8b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960a8b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960a8b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960a8b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960a8b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960a8b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960a8b980"/>
        <function-ref name="clr" scoped="" ref="0x7f8960a8bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7f8960a8f510" loc="45:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7f8960a8f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960a8f890"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960a8fa20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960a8fbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960a8fd40"/>
        <function-ref name="get" scoped="" ref="0x7f8960a8d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960a8d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8960a8d340"/>
        <function-ref name="clr" scoped="" ref="0x7f8960a8d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f8960a8d830" loc="46:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f8960a8d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960a8dbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960a8dd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960a8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960a8c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8960a8c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960a8c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960a8c660"/>
        <function-ref name="clr" scoped="" ref="0x7f8960a8c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8960a94080" loc="44:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8960a94080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960a90630"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a92ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960a91920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960a914a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960a8f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960a90ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960a91020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960a94c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960a90020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960a92170"/>
        <function-ref name="stop" scoped="" ref="0x7f8960a92640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8960a7f5a0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8960a7f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960a7ca80"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a7d090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960a7de10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960a7d990"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960a7b4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960a7b020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960a7d510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960a7e200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960a7c470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960a7e6d0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960a7eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f8960a6e710" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f8960a6e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a6ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a6ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a6edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a6d020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a6d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f8960a648a0" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f8960a648a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a64c20"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a64db0"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a63020"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a631b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a63340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f8960a6b710" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f8960a6b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a6ba90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a6bc20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a6bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a6a020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a6a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f8960a69710" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f8960a69710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a69a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a69c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a69db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a68020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a681b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a68340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f8960a70710" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f8960a70710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a70a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a70c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a70db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a6f020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a6f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a6f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f8960a66710" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f8960a66710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a66b90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a66d20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a65020"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a651b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a65340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f8960a6d710" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f8960a6d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a6da90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a6dc20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a6ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a6c020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a6c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a6c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f8960a638a0" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f8960a638a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a63c20"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a63db0"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a62020"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a621b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a62340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f8960a71660" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f8960a71660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a719e0"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a71b70"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a71d00"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a75020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a751b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a75340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f8960a68710" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f8960a68710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a68a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a68c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a68db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a67020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a671b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f8960a6f710" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f8960a6f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a6fa90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a6fc20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a6fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a6e020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a6e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a6e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f8960a658a0" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f8960a658a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a65c20"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a65db0"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a64020"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a641b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a64340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f8960a6c710" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f8960a6c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a6ca90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a6cc20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a6cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a6b020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a6b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f8960a6a710" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f8960a6a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a6aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a6ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a6adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a69020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a691b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f8960a75710" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f8960a75710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a75a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a75c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a75db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a70020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a701b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a70340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f8960a67710" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f8960a67710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a67a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a67c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a67db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a66020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a661b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a66340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f8960a5b710" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f8960a5b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a5ba90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a5bc20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a5bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a5a020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a5a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a5a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f8960a508a0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f8960a508a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a50c20"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a50db0"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a4f020"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a4f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a4f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a4f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f8960a58710" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f8960a58710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a58a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a58c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a58db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a56020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a561b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f8960a55710" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f8960a55710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a55a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a55c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a55db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a54020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a541b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a54340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f8960a5d710" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f8960a5d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a5da90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a5dc20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a5ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a5c020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a5c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f8960a52710" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f8960a52710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a52b90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a52d20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a51020"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a511b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a51340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f8960a5a710" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f8960a5a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a5aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a5ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a5adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a59020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a591b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f8960a4f8a0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f8960a4f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a4fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a4fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a4e020"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a4e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a4e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f8960a5f6b0" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f8960a5f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a5fa30"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a5fbc0"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a5fd50"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a5e020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a5e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f8960a54710" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f8960a54710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a54a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a54c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a54db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a53020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a531b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a53340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f8960a5c710" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f8960a5c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a5ca90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a5cc20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a5cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a5b020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a5b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f8960a518a0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f8960a518a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a51c20"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a51db0"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a50020"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a501b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a50340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f8960a59710" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f8960a59710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a59a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a59c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a59db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a58020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a581b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f8960a56710" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f8960a56710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a56a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a56c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a56db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a55020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a551b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f8960a5e710" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f8960a5e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a5ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a5ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a5edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a5d020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a5d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a5d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f8960a53710" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f8960a53710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960a53a90"/>
        <function-ref name="fired" scoped="" ref="0x7f8960a53c20"/>
        <function-ref name="disable" scoped="" ref="0x7f8960a53db0"/>
        <function-ref name="edge" scoped="" ref="0x7f8960a52020"/>
        <function-ref name="enable" scoped="" ref="0x7f8960a521b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8960a52340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f896097c610" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f896097c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f896097c990"/>
        <function-ref name="fired" scoped="" ref="0x7f896097cb20"/>
        <function-ref name="disable" scoped="" ref="0x7f896097ccb0"/>
        <function-ref name="edge" scoped="" ref="0x7f896097ce40"/>
        <function-ref name="enable" scoped="" ref="0x7f896096e020"/>
        <function-ref name="getValue" scoped="" ref="0x7f896096e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f896097da30" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f896097da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f896097ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f896097c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f896097c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f896097c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f89608f0020" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f89608f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f89608f03c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f89608f0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f89608eecd0" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f89608eecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f89608ed0a0"/>
        <function-ref name="configure" scoped="" ref="0x7f89608ed230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f89608f07a0" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f89608f07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89608f0b20"/>
        <function-ref name="requested" scoped="" ref="0x7f89608f0cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f89608f0e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89608ee020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f89608ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f89608f1210" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f89608f1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89608f15b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89608f1740"/>
        <function-ref name="request" scoped="" ref="0x7f89608f18d0"/>
        <function-ref name="granted" scoped="" ref="0x7f89608f1a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89608f1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f89608ee400" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f89608ee400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f89608ee780"/>
        <function-ref name="userId" scoped="" ref="0x7f89608ee910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f21c810" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f21c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f21cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f895f21ce20" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f895f21ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f895f21b1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f895f21b350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f895f21b4e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f895f21b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f895f219d80" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f895f219d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f895f218180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895f218310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f895f217b60" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895f217b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f895f215020"/>
        <function-ref name="configure" scoped="" ref="0x7f895f2151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f895f215440" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f895f215440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f895f2157c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f895f215950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f895f215ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f895f215c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f895f218560" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f895f218560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f2188e0"/>
        <function-ref name="requested" scoped="" ref="0x7f895f218a70"/>
        <function-ref name="granted" scoped="" ref="0x7f895f218c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f218d90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895f217020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f895f214020" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f895f214020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f895f2143a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f895f214530"/>
        <function-ref name="led1On" scoped="" ref="0x7f895f2146c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f895f214850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f895f2149e0"/>
        <function-ref name="get" scoped="" ref="0x7f895f214b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f895f214d00"/>
        <function-ref name="led0On" scoped="" ref="0x7f895f2134d0"/>
        <function-ref name="set" scoped="" ref="0x7f895f2131b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f895f213020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f895f213340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895f219020" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895f219020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f2193c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f219550"/>
        <function-ref name="request" scoped="" ref="0x7f895f2196e0"/>
        <function-ref name="granted" scoped="" ref="0x7f895f219870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f219a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f895f217270" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895f217270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f895f2175f0"/>
        <function-ref name="userId" scoped="" ref="0x7f895f217780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f895f2137a0" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f895f2137a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f895f213b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f895f213cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f89608ea280" loc="69:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f89608ea280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89608ea600"/>
        <function-ref name="stopDone" scoped="" ref="0x7f89608ea790"/>
        <function-ref name="start" scoped="" ref="0x7f89608ea920"/>
        <function-ref name="stop" scoped="" ref="0x7f89608eaab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f89608ead00" loc="71:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f89608ead00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f89608bb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f89608bb2f0" loc="72:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f89608bb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89608bb670"/>
        <function-ref name="requested" scoped="" ref="0x7f89608bb800"/>
        <function-ref name="granted" scoped="" ref="0x7f89608bb990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89608bbb20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f89608bbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f89608ba020" loc="73:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f89608ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f89608ba3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f89608ba530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f895f1e3b20" loc="61:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f895f1e3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f895f1e1020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f895f1e11b0"/>
        <function-ref name="start" scoped="" ref="0x7f895f1e1340"/>
        <function-ref name="stop" scoped="" ref="0x7f895f1e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f895f1e1720" loc="63:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f895f1e1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f895f1e1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f895f1df160" loc="78:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f895f1df160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f895f1df4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f895f1df670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f895f1e1cf0" loc="64:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f895f1e1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f1e00a0"/>
        <function-ref name="requested" scoped="" ref="0x7f895f1e0230"/>
        <function-ref name="granted" scoped="" ref="0x7f895f1e03c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f1e0550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895f1e06e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f895f1df940" loc="73:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7f895f1df940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f895f1dfcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f895f1dfe50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f895f1e33c0" loc="60:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f895f1e33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f895f1e3740"/>
        <function-ref name="stop" scoped="" ref="0x7f895f1e38d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f895f1e0930" loc="65:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895f1e0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f895f1e0cb0"/>
        <function-ref name="userId" scoped="" ref="0x7f895f1e0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f89608ae1e0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f89608ae1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f89608aa630"/>
        <function-ref name="fired" scoped="" ref="0x7f89608acc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f89608ab9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f89608ab550"/>
        <function-ref name="getdt" scoped="" ref="0x7f89608a9020"/>
        <function-ref name="gett0" scoped="" ref="0x7f89608aaab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f89608ab0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f89608aedd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f89608aa020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f89608ac2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f89608ac7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f8960894750" loc="42:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f8960894750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8960499390"/>
        <function-ref name="readDone" scoped="" ref="0x7f8960499810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f8960498020" loc="43:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f8960498020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f8960497ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f8960498c10"/>
        <function-ref name="read" scoped="" ref="0x7f89604975e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f89604955a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f8960894020" loc="41:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f8960894020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f89608943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f895f1c8760" loc="48:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f895f1c8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895f1c7390"/>
        <function-ref name="readDone" scoped="" ref="0x7f895f1c7810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f895f1c6020" loc="49:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f895f1c6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7f8960857040" loc="46:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f8960857040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89608573c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960857550"/>
        <function-ref name="request" scoped="" ref="0x7f89608576e0"/>
        <function-ref name="granted" scoped="" ref="0x7f8960857870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960857a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f8960862bc0" loc="38:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f8960862bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f89608617e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8960861c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f896085bb40" loc="39:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f896085bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f896085f790"/>
        <function-ref name="readDone" scoped="" ref="0x7f896085fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7f896085e8b0" loc="40:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7f896085e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f896085ec30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f896085edc0"/>
        <function-ref name="request" scoped="" ref="0x7f896085a020"/>
        <function-ref name="granted" scoped="" ref="0x7f896085a1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f896085a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f89608565c0" loc="48:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f89608565c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f8960855240"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f8960844b10" loc="49:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f8960844b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f8960853020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f89608531b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f8960853340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f89608534d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f8960853660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f89608537f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f8960853980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7f896085acb0" loc="44:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7f896085acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89608580a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960858230"/>
        <function-ref name="request" scoped="" ref="0x7f89608583c0"/>
        <function-ref name="granted" scoped="" ref="0x7f8960858550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89608586e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f89608275c0" loc="136:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f89608275c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960827940"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960827ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f895f1b9400" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f895f1b9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f895f1b9780"/>
        <function-ref name="configure" scoped="" ref="0x7f895f1b9910"/>
        <function-ref name="dataReady" scoped="" ref="0x7f895f1b9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f895f1ba400" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f895f1ba400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f895f1ba780"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f895f1ba910"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f895f1baaa0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f895f1bac30"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f895f1badc0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f895f1b9020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f895f1b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f895f1b9cf0" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f895f1b9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f895f1b80a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f895f1b8230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f895f1b8660" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1b8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f895f1b63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895f1bb660" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895f1bb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f1bb9e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f1bbb70"/>
        <function-ref name="request" scoped="" ref="0x7f895f1bbd00"/>
        <function-ref name="granted" scoped="" ref="0x7f895f1ba020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f1ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f89607eb960" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f89607eb960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f89607ebce0"/>
        <function-ref name="configure" scoped="" ref="0x7f89607ebe70"/>
        <function-ref name="dataReady" scoped="" ref="0x7f89607ea030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f89607e81d0" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f89607e81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f89607e8550"/>
        <function-ref name="stop" scoped="" ref="0x7f89607e86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f89607ea920" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f89607ea920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f89607eaca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f89607eae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f89607ec1d0" loc="41:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f89607ec1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f89607ec550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f89607ec6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f89607ec870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f89607eca00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f89607ecb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f89607ecd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f89607eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f89607f9cc0" loc="40:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f89607f9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89607ee0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89607ee230"/>
        <function-ref name="request" scoped="" ref="0x7f89607ee3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f89607ee550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89607ee6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f89607e1af0" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f89607e1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f89607e1e70"/>
        <function-ref name="configure" scoped="" ref="0x7f89607e0030"/>
        <function-ref name="dataReady" scoped="" ref="0x7f89607e01c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f89607cf0d0" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f89607cf0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f89607cf450"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f89607cf5e0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f89607cf770"/>
        <function-ref name="isBusy" scoped="" ref="0x7f89607cf900"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f89607cfa90"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f89607cfc20"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f89607cfdb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f89607dc020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f89607dc1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f89607dc340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f89607dc4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f89607dc660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f89607dc7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f89607dca80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f89607dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f89607c1c80" loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f89607c1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89607c00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f89607c0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89607c03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f89607c0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89607c06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89607c0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89607c0a00"/>
        <function-ref name="get" scoped="" ref="0x7f89607c0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89607c0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89607bf020"/>
        <function-ref name="set" scoped="" ref="0x7f89607bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89607bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89607bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89607bf760"/>
        <function-ref name="clr" scoped="" ref="0x7f89607bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f89607cbe60" loc="53:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f89607cbe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89607ca210"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89607ca3a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89607ca530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89607ca6c0"/>
        <function-ref name="fired" scoped="" ref="0x7f89607ca850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f89607ce880" loc="50:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f89607ce880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89607cec00"/>
        <function-ref name="getControl" scoped="" ref="0x7f89607ced90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89607cd020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89607cd1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89607cd340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89607cd4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89607cd660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89607cd7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f89607cd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f89607de910" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f89607de910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f89607dec90"/>
        <function-ref name="stop" scoped="" ref="0x7f89607dee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f89607c6c80" loc="56:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f89607c6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89607c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f89607c4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89607c43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f89607c4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89607c46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89607c4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89607c4a00"/>
        <function-ref name="get" scoped="" ref="0x7f89607c4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89607c4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89607c3020"/>
        <function-ref name="set" scoped="" ref="0x7f89607c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89607c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89607c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89607c3760"/>
        <function-ref name="clr" scoped="" ref="0x7f89607c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f89607e0ab0" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f89607e0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f89607e0e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f89607de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f89607bbc80" loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f89607bbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89607ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f89607ba230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89607ba3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f89607ba550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89607ba6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89607ba870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89607baa00"/>
        <function-ref name="get" scoped="" ref="0x7f89607bab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89607bad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89607b9020"/>
        <function-ref name="set" scoped="" ref="0x7f89607b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89607b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89607b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89607b9760"/>
        <function-ref name="clr" scoped="" ref="0x7f89607b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f89607cabe0" loc="54:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f89607cabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89607c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f89607c9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89607c93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f89607c9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89607c96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89607c9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89607c9a00"/>
        <function-ref name="get" scoped="" ref="0x7f89607c9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89607c9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89607c8020"/>
        <function-ref name="set" scoped="" ref="0x7f89607c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89607c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89607c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89607c8760"/>
        <function-ref name="clr" scoped="" ref="0x7f89607c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f89607e3660" loc="40:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f89607e3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f89607e39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f89607bfc80" loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f89607bfc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89607be0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f89607be230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89607be3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f89607be550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89607be6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89607be870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89607bea00"/>
        <function-ref name="get" scoped="" ref="0x7f89607beb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89607bed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89607bd020"/>
        <function-ref name="set" scoped="" ref="0x7f89607bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89607bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89607bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89607bd760"/>
        <function-ref name="clr" scoped="" ref="0x7f89607bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f89607db020" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f89607db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89607db3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f89607db530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89607db6c0"/>
        <function-ref name="get" scoped="" ref="0x7f89607db850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89607db9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89607dbb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f89607dbd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89607ce020"/>
        <function-ref name="overflow" scoped="" ref="0x7f89607ce1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f89607ce340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f89607ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f89607dd280" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f89607dd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f89607dd600"/>
        <function-ref name="userId" scoped="" ref="0x7f89607dd790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f89607cdd30" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f89607cdd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89607cc0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f89607cc270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89607cc400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89607cc590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89607cc720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89607cc8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89607cca40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89607ccbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f89607ccd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f89607e2370" loc="41:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f89607e2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f89607e26f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f89607e2880"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f89607e2a10"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f89607e2ba0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f89607e2d30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f89607e1020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f89607e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f89607c3c80" loc="57:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f89607c3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89607c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f89607c2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89607c23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f89607c2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89607c26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89607c2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89607c2a00"/>
        <function-ref name="get" scoped="" ref="0x7f89607c2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89607c2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89607c1020"/>
        <function-ref name="set" scoped="" ref="0x7f89607c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89607c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89607c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89607c1760"/>
        <function-ref name="clr" scoped="" ref="0x7f89607c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f89607cb120" loc="52:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f89607cb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89607cb4a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f89607cb630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f89607cb7c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f89607cb950"/>
        <function-ref name="fired" scoped="" ref="0x7f89607cbae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f89607c8c80" loc="55:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f89607c8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89607c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f89607c7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89607c73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f89607c7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89607c76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89607c7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89607c7a00"/>
        <function-ref name="get" scoped="" ref="0x7f89607c7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89607c7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89607c6020"/>
        <function-ref name="set" scoped="" ref="0x7f89607c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89607c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89607c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89607c6760"/>
        <function-ref name="clr" scoped="" ref="0x7f89607c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f89607bdc80" loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f89607bdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89607bc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f89607bc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89607bc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f89607bc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89607bc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89607bc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89607bca00"/>
        <function-ref name="get" scoped="" ref="0x7f89607bcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89607bcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89607bb020"/>
        <function-ref name="set" scoped="" ref="0x7f89607bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89607bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89607bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89607bb760"/>
        <function-ref name="clr" scoped="" ref="0x7f89607bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f89606fc020" loc="46:../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f89606fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f89606fc3a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f89606fc530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f89606fc6c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f89606fc850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f89606fc9e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f89606fcb70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f89606fcd00"/>
        <function-ref name="startConversion" scoped="" ref="0x7f89606fb020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f89606fb1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f89606fb340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f89606fb4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f89606fb660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f89606fb7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f89606fba80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f89606fbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f896066c3a0" loc="86:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f896066c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f896066c740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f896066c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f896066b570" loc="89:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f896066b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f896066b910"/>
        <function-ref name="configure" scoped="" ref="0x7f896066baa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f896066d520" loc="85:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f896066d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f896066d8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f896066da50"/>
        <function-ref name="request" scoped="" ref="0x7f896066dbe0"/>
        <function-ref name="granted" scoped="" ref="0x7f896066dd70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f896066c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f896066cb20" loc="87:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f896066cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f896066b020"/>
        <function-ref name="userId" scoped="" ref="0x7f896066b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f193060" loc="44:../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f193060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f1933e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f895f193670" loc="45:../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f895f193670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f895f1939f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f895f193b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f895f193d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f895f192020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f895f18f530" loc="52:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f895f18f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f895f18f8d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895f18fa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f895f18e610" loc="56:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895f18e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f895f18e9b0"/>
        <function-ref name="configure" scoped="" ref="0x7f895f18eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f895f18edd0" loc="57:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f895f18edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f895f18d180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f895f18d310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f895f18d4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f895f18d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895f1916c0" loc="51:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895f1916c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f191a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f191bf0"/>
        <function-ref name="request" scoped="" ref="0x7f895f191d80"/>
        <function-ref name="granted" scoped="" ref="0x7f895f18f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f18f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f895f18fcb0" loc="53:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895f18fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f895f18e0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f895f18e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f895f18d900" loc="68:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f895f18d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f895f18dc80"/>
        <function-ref name="runTask" scoped="" ref="0x7f895f18de10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f896064e740" loc="55:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f896064e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f896064d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f896064f1d0" loc="54:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f896064f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f896064f550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f896064f6e0"/>
        <function-ref name="request" scoped="" ref="0x7f896064f870"/>
        <function-ref name="granted" scoped="" ref="0x7f896064fa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f896064fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f8960654d20" loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f8960654d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89606510e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960651270"/>
        <function-ref name="request" scoped="" ref="0x7f8960651400"/>
        <function-ref name="granted" scoped="" ref="0x7f8960651590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960651720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f89606449a0" loc="43:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f89606449a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f8960644d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f8960643020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f89606431b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f8960643340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f89606434d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f8960643660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f89606437f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f8960643980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f8960643b10"/>
        <function-ref name="getMem" scoped="" ref="0x7f8960643ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f8960643e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f8960642020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f89606421b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f8960642440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f89606425d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f896063b020" loc="45:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f896063b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960638630"/>
        <function-ref name="fired" scoped="" ref="0x7f896063aa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960639920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f89606394a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960637020"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960638ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960639020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f896063bc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960638020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f896063a110"/>
        <function-ref name="stop" scoped="" ref="0x7f896063a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f8960645e00" loc="39:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f8960645e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89606441c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8960644350"/>
        <function-ref name="start" scoped="" ref="0x7f89606444e0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960644670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f89606376c0" loc="46:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f89606376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960633c40"/>
        <function-ref name="fired" scoped="" ref="0x7f89606341e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8960633020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8960634ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8960632590"/>
        <function-ref name="gett0" scoped="" ref="0x7f8960632110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960634660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8960635390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8960633630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960635860"/>
        <function-ref name="stop" scoped="" ref="0x7f8960635d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f8960645240" loc="38:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f8960645240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89606455c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8960645750"/>
        <function-ref name="start" scoped="" ref="0x7f89606458e0"/>
        <function-ref name="stop" scoped="" ref="0x7f8960645a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f8960642a90" loc="44:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f8960642a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f896063d020"/>
        <function-ref name="fired" scoped="" ref="0x7f896063f510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f896063e300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f896063fe10"/>
        <function-ref name="getdt" scoped="" ref="0x7f896063d920"/>
        <function-ref name="gett0" scoped="" ref="0x7f896063d4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f896063f990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f89606416b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f896063e910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8960641b80"/>
        <function-ref name="stop" scoped="" ref="0x7f896063f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f89605e2020" loc="43:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f89605e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f89605e2c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f89605e49c0" loc="42:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f89605e49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89605e4d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f89605e3020"/>
        <function-ref name="start" scoped="" ref="0x7f89605e31b0"/>
        <function-ref name="stop" scoped="" ref="0x7f89605e3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f89605e5030" loc="40:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f89605e5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89605e53b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89605e5540"/>
        <function-ref name="request" scoped="" ref="0x7f89605e56d0"/>
        <function-ref name="granted" scoped="" ref="0x7f89605e5860"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89605e59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f89605eaca0" loc="38:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f89605eaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89605e70a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89605e7230"/>
        <function-ref name="request" scoped="" ref="0x7f89605e73c0"/>
        <function-ref name="granted" scoped="" ref="0x7f89605e7550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89605e76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f89605df7f0" loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f89605df7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f89605dfb70"/>
        <function-ref name="runTask" scoped="" ref="0x7f89605dfd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f89605e5d80" loc="41:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f89605e5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89605e4180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f89605e4310"/>
        <function-ref name="start" scoped="" ref="0x7f89605e44a0"/>
        <function-ref name="stop" scoped="" ref="0x7f89605e4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f89605b04e0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f89605b04e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f89605ada20"/>
        <function-ref name="fired" scoped="" ref="0x7f89605ae020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f89605aeda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f89605ae920"/>
        <function-ref name="getdt" scoped="" ref="0x7f89605ac4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f89605ac020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f89605ae4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f89605af110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f89605ad410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f89605af5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f89605afab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f89605a9020" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f89605a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f89605a6630"/>
        <function-ref name="fired" scoped="" ref="0x7f89605a8a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f89605a7920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f89605a74a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f89605a4020"/>
        <function-ref name="gett0" scoped="" ref="0x7f89605a6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f89605a7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f89605a9c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f89605a6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f89605a8110"/>
        <function-ref name="stop" scoped="" ref="0x7f89605a85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f89605a3b40" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f89605a3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f896059f110"/>
        <function-ref name="fired" scoped="" ref="0x7f89605a15b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f89605a04a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f89605a0020"/>
        <function-ref name="getdt" scoped="" ref="0x7f896059fa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f896059f590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f89605a1a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f89605a2750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f89605a0ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f89605a2c20"/>
        <function-ref name="stop" scoped="" ref="0x7f89605a1130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f895f1a9020" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f895f1a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f895f1a9c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f895f1a72a0" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f895f1a72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f895f1a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f895f1c00e0" loc="49:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f1c00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f895f1c0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f895f1c4380" loc="48:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f895f1c4380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f895f1c2e60"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f895f1c2020"/>
        <function-ref name="read" scoped="" ref="0x7f895f1c2990"/>
        <function-ref name="readDone" scoped="" ref="0x7f895f1c1940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7f8960567c90" loc="23:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f8960567c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f89605660a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f8960566230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f89605663c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f8960566550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f89605666e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f8960566870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f8960566a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f89605685e0" loc="22:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f89605685e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f8960567240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f896056c1d0" loc="20:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f896056c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f896056bc40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f896056cdc0"/>
        <function-ref name="read" scoped="" ref="0x7f896056b770"/>
        <function-ref name="readDone" scoped="" ref="0x7f896056a730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f8960565280" loc="24:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8960565280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960565600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960565790"/>
        <function-ref name="request" scoped="" ref="0x7f8960565920"/>
        <function-ref name="granted" scoped="" ref="0x7f8960565ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960565c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f896052e380" loc="156:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7f896052e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f896052e700"/>
        <function-ref name="runTask" scoped="" ref="0x7f896052e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f896053caa0" loc="119:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7f896053caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f896053ce20"/>
        <function-ref name="runTask" scoped="" ref="0x7f896053b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f8960535100" loc="135:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7f8960535100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960535480"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960535610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f8960556020" loc="54:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f8960556020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960554870"/>
        <function-ref name="fired" scoped="" ref="0x7f8960555840"/>
        <function-ref name="startAt" scoped="" ref="0x7f8960554220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960555d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8960554d30"/>
        <function-ref name="start" scoped="" ref="0x7f8960556e30"/>
        <function-ref name="stop" scoped="" ref="0x7f8960555380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f896055f150" loc="48:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f896055f150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f89616f9800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f89616f9800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f896055f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f8960559b10" loc="53:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f8960559b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f8960558790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f896055a1d0" loc="52:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f896055a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f896055a550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f896055a6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f896055a870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f896055aa00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f896055ab90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f896055ad20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f8960559020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f896055fe70" loc="49:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f896055fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f896055d910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f896055ea90"/>
        <function-ref name="read" scoped="" ref="0x7f896055d440"/>
        <function-ref name="readDone" scoped="" ref="0x7f896055c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f89604f1970" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f89604f1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f89604ee1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f89604ef1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f89604efb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f89604ef670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f89604ee670"/>
        <function-ref name="start" scoped="" ref="0x7f89604f07c0"/>
        <function-ref name="stop" scoped="" ref="0x7f89604f0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f89604f1120" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f89604f1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f89604f14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f145ca0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f145ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f1414e0"/>
        <function-ref name="fired" scoped="" ref="0x7f895f1434e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f143e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f1439a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f1419a0"/>
        <function-ref name="start" scoped="" ref="0x7f895f144ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f895f143020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f145450" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f145450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f1457d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f895f12b440" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f12b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f895f12b7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f895f12b950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f895f12bae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f895f12bc70"/>
        <function-ref name="fired" scoped="" ref="0x7f895f12be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f895f12f880" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f12f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f12fc00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895f12fd90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f12d020"/>
        <function-ref name="get" scoped="" ref="0x7f895f12d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f12d340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f12d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f895f12d660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f12d7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f12d980"/>
        <function-ref name="setMode" scoped="" ref="0x7f895f12db10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f895f12dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f895f12c020" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f12c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f895f12c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f895f12c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f12c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f895f12c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f895f12c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f12cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f895f12cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f895f12b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f895f12b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f895f1210c0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f1210c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f895f121440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f895f1215d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f895f121760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f895f1218f0"/>
        <function-ref name="fired" scoped="" ref="0x7f895f121a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f895f125710" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f125710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f125a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895f125c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f125db0"/>
        <function-ref name="get" scoped="" ref="0x7f895f123020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f1231b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f123340"/>
        <function-ref name="getMode" scoped="" ref="0x7f895f1234d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f123660"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f1237f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f895f123980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f895f123b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f1285b0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f1285b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f126df0"/>
        <function-ref name="fired" scoped="" ref="0x7f895f127df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f1267a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f1262e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f1252e0"/>
        <function-ref name="start" scoped="" ref="0x7f895f127420"/>
        <function-ref name="stop" scoped="" ref="0x7f895f127930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f129ca0" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f129ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f1280a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f895f123da0" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f123da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f895f122180"/>
        <function-ref name="getControl" scoped="" ref="0x7f895f122310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f1224a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f895f122630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f895f1227c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f122950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f895f122ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f895f122c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f895f122e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f13e020" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f13e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f13c870"/>
        <function-ref name="fired" scoped="" ref="0x7f895f13d840"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f13c220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f13dd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f13cd30"/>
        <function-ref name="start" scoped="" ref="0x7f895f13ee30"/>
        <function-ref name="stop" scoped="" ref="0x7f895f13d380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f895f138780" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f895f138780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f134020"/>
        <function-ref name="fired" scoped="" ref="0x7f895f136020"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f1369a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f1364e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f1344e0"/>
        <function-ref name="start" scoped="" ref="0x7f895f1375d0"/>
        <function-ref name="stop" scoped="" ref="0x7f895f137ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f895f13a3d0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f895f13a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895f139240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f139bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f139700"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f1380d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f89604bebf0" loc="26:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7f89604bebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f89604bb710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f89604bd860"/>
        <function-ref name="read" scoped="" ref="0x7f89604bb220"/>
        <function-ref name="readDone" scoped="" ref="0x7f89604ba220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f89604e9cb0" loc="24:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f89604e9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f89604c0850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f89604c1940"/>
        <function-ref name="read" scoped="" ref="0x7f89604c0360"/>
        <function-ref name="readDone" scoped="" ref="0x7f89604be360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f89604ba8f0" loc="27:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f89604ba8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89604bac90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89604bae20"/>
        <function-ref name="request" scoped="" ref="0x7f89604b9020"/>
        <function-ref name="granted" scoped="" ref="0x7f89604b91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89604b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f895f153020" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f895f153020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f895f1533a0"/>
        <function-ref name="configure" scoped="" ref="0x7f895f153530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f895f1536c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f895f154020" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f895f154020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f895f1543a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f895f154530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f895f1546c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f895f154850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f895f1549e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f895f154b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f895f154d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f895f153910" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f895f153910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f895f153c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f895f153e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f895f151280" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f895f151280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f895f150020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895f155360" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895f155360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f1556e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f155870"/>
        <function-ref name="request" scoped="" ref="0x7f895f155a00"/>
        <function-ref name="granted" scoped="" ref="0x7f895f155b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f155d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f895f0e1dc0" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f895f0e1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f895f0e0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f895f0df120" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f895f0df120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f895f0dfd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f89604a0300" loc="44:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f89604a0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f896049f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f89604a48a0" loc="43:../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f89604a48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f89604a4c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f895f84c020" loc="49:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f895f84c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f84c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f84c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f84c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f84c850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f84c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f895f84cc30" loc="50:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f895f84cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f84b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f895f84b1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f84b340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f84b4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f895f84b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f895f84b8b0" loc="51:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f895f84b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f895f84bc30"/>
        <function-ref name="source" scoped="" ref="0x7f895f84bdc0"/>
        <function-ref name="address" scoped="" ref="0x7f895f84a020"/>
        <function-ref name="destination" scoped="" ref="0x7f895f84a1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f895f84a340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f895f84a4d0"/>
        <function-ref name="type" scoped="" ref="0x7f895f84a660"/>
        <function-ref name="setType" scoped="" ref="0x7f895f84a7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f895f84a980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f895f84ab10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f895f84aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f895f849020" loc="52:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f895f849020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f895f8493a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f895f849530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f895f8496c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f895f0d1730" loc="49:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f895f0d1730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f0d1ab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f0d1c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f0d1dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f0d0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f0d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f895f0d0400" loc="50:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f895f0d0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f0d0780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f895f0d0910"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f0d0aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f0d0c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f895f0d0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f895f0cf060" loc="51:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f895f0cf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f895f0cf3e0"/>
        <function-ref name="source" scoped="" ref="0x7f895f0cf570"/>
        <function-ref name="address" scoped="" ref="0x7f895f0cf700"/>
        <function-ref name="destination" scoped="" ref="0x7f895f0cf890"/>
        <function-ref name="setSource" scoped="" ref="0x7f895f0cfa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f895f0cfbb0"/>
        <function-ref name="type" scoped="" ref="0x7f895f0cfd40"/>
        <function-ref name="setType" scoped="" ref="0x7f895f0ce020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f895f0ce1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f895f0ce340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f895f0ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f895f0ce760" loc="52:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f895f0ce760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f895f0ceae0"/>
        <function-ref name="noAck" scoped="" ref="0x7f895f0cec70"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f895f0cee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f895f0c4120" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f895f0c4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f0c44a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f0c4630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f0c47c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f0c4950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f0c4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f895f0c4d90" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f895f0c4d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f0c3180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f0c3310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f0c34a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f0c3630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f0c37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f895f0c3a10" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f895f0c3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f895f0c3d90"/>
        <function-ref name="source" scoped="" ref="0x7f895f0c2020"/>
        <function-ref name="address" scoped="" ref="0x7f895f0c21b0"/>
        <function-ref name="destination" scoped="" ref="0x7f895f0c2340"/>
        <function-ref name="setSource" scoped="" ref="0x7f895f0c24d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f895f0c2660"/>
        <function-ref name="type" scoped="" ref="0x7f895f0c27f0"/>
        <function-ref name="setType" scoped="" ref="0x7f895f0c2980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f895f0c2b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f895f0c2ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f895f0c2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f89604602c0" loc="43:../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f89604602c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8960460640"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89604607d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8960460960"/>
        <function-ref name="cancel" scoped="" ref="0x7f8960460af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8960460c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f8960415a40" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f8960415a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8960415de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8960414020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89604141b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8960414340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f89604144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8960416b00" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f8960416b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8960415020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89604151b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8960415340"/>
        <function-ref name="cancel" scoped="" ref="0x7f89604154d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8960415660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f8960413d60" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f8960413d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8960412180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8960412310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89604124a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8960412630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f89604127c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f8960412a90" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f8960412a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960412e10"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960411020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f89604112f0" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f89604112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960411670"/>
        <function-ref name="runTask" scoped="" ref="0x7f8960411800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f8960414720" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f8960414720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8960414aa0"/>
        <function-ref name="source" scoped="" ref="0x7f8960414c30"/>
        <function-ref name="address" scoped="" ref="0x7f8960414dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f8960413020"/>
        <function-ref name="setSource" scoped="" ref="0x7f89604131b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8960413340"/>
        <function-ref name="type" scoped="" ref="0x7f89604134d0"/>
        <function-ref name="setType" scoped="" ref="0x7f8960413660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f89604137f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8960413980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8960413b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f896040f760" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f896040f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f896040fae0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f896040fc70"/>
        <function-ref name="start" scoped="" ref="0x7f896040fe00"/>
        <function-ref name="stop" scoped="" ref="0x7f896040c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f896040c7f0" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f896040c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f896040cb70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f896040cd00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f896040b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f896040b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f896040b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f8960409880" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f8960409880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8960409c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8960408020" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f8960408020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89604083a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8960408530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89604086c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8960408850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f89604089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f89603fc6b0" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f89603fc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8960404ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f8960403460"/>
        <function-ref name="isValid" scoped="" ref="0x7f89604045b0"/>
        <function-ref name="set" scoped="" ref="0x7f8960403b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f89603ee5b0" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f89603ee5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f89603ee930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f89603eeac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f89603eec50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f89603eede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f896040bb20" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f896040bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8960409020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f89604064e0" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89604064e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8960406860"/>
        <function-ref name="noAck" scoped="" ref="0x7f89604069f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8960406b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8960408c90" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f8960408c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f89604070a0"/>
        <function-ref name="source" scoped="" ref="0x7f8960407230"/>
        <function-ref name="address" scoped="" ref="0x7f89604073c0"/>
        <function-ref name="destination" scoped="" ref="0x7f8960407550"/>
        <function-ref name="setSource" scoped="" ref="0x7f89604076e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8960407870"/>
        <function-ref name="type" scoped="" ref="0x7f8960407a00"/>
        <function-ref name="setType" scoped="" ref="0x7f8960407b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8960407d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8960406020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f89604061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f89603fa840" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f89603fa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f89603f9dd0"/>
        <function-ref name="clear" scoped="" ref="0x7f89603f8540"/>
        <function-ref name="isValid" scoped="" ref="0x7f89603f96a0"/>
        <function-ref name="set" scoped="" ref="0x7f89603f8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f89603e32f0" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f89603e32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89603e3670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f89603e3800"/>
        <function-ref name="start" scoped="" ref="0x7f89603e3990"/>
        <function-ref name="stop" scoped="" ref="0x7f89603e3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f89603dc2c0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f89603dc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f89603dc640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f89603dc7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f89603dc960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f89603dcaf0"/>
        <function-ref name="setCca" scoped="" ref="0x7f89603dcc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f89603dce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f89603c81d0" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f89603c81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f89603c8650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f89603de020" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f89603de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89603de3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f89603de530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89603de6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89603de850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f89603de9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f89603e2320" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f89603e2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f89603e26a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89603e2830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89603e29c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f89603e2b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f89603e2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f89603e01d0" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f89603e01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f89603e0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f89603d40f0" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f89603d40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f89603d4470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f89603d4600"/>
        <function-ref name="getRssi" scoped="" ref="0x7f89603d4790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f89603d4920"/>
        <function-ref name="getPower" scoped="" ref="0x7f89603d4ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f89603d4c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f89603d3170" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f89603d3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f89603d34f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f89603d3680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f89603d3810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f89603d39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f89603e1510" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f89603e1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f89603e1890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f89603dd020" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89603dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f89603dd3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f89603dd530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f89603dd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f89603bf430" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f89603bf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f89603bf7b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f89603bf940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f89603bfad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f89603bfc60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f89603bfdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f89603e0800" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f89603e0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f89603e0b80"/>
        <function-ref name="source" scoped="" ref="0x7f89603e0d10"/>
        <function-ref name="address" scoped="" ref="0x7f89603df020"/>
        <function-ref name="destination" scoped="" ref="0x7f89603df1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f89603df340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f89603df4d0"/>
        <function-ref name="type" scoped="" ref="0x7f89603df660"/>
        <function-ref name="setType" scoped="" ref="0x7f89603df7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f89603df980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f89603dfb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f89603dfca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f89603d0170" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f89603d0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f89603d04f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f89603b9020" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f89603b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89603b93a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f89603b9530"/>
        <function-ref name="start" scoped="" ref="0x7f89603b96c0"/>
        <function-ref name="stop" scoped="" ref="0x7f89603b9850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f89603b1080" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f89603b1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f89603b1400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f89603b02e0" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f89603b02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f89603b0660"/>
        <function-ref name="setRetries" scoped="" ref="0x7f89603b07f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f89603b0980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f89603b0b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f89603b0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f89603b4670" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f89603b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f89603b49f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f89603b4b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f89603b4d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f89603b3020"/>
        <function-ref name="getPower" scoped="" ref="0x7f89603b31b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f89603b3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f89603b5170" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f89603b5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f89603b54f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89603b5680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89603b5810"/>
        <function-ref name="cancel" scoped="" ref="0x7f89603b59a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f89603b5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f89603b1700" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f89603b1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f89603b1a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f89603b1c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f89603b1da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f89603b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f89603b7d30" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f89603b7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f89603b60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f89603b3670" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f89603b3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f89603b39f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f89603b3b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f89603b3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f89603b81d0" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f89603b81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89603b8550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89603b86e0"/>
        <function-ref name="request" scoped="" ref="0x7f89603b8870"/>
        <function-ref name="granted" scoped="" ref="0x7f89603b8a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89603b8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f89603b7020" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f89603b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f89603b73a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89603b7530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89603b76c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f89603b7850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f89603b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f89603b6420" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f89603b6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89603b67a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f89603b6930"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89603b6ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89603b6c50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f89603b6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f89603b4020" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f89603b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f89603b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f89603af9e0" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f89603af9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89603afd60"/>
        <function-ref name="stopDone" scoped="" ref="0x7f89603ac020"/>
        <function-ref name="start" scoped="" ref="0x7f89603ac1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f89603ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f89603ab990" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f89603ab990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f89603abd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f89603aa020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f89603aa1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f89603aa340"/>
        <function-ref name="setCca" scoped="" ref="0x7f89603aa4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f89603aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f89603ac600" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f89603ac600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f89603ac980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89603acb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89603acca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f89603ace30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f89603ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f89603ab300" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f89603ab300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f89603ab680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f89603a7690" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f89603a7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f89603a7a10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f89603a7ba0"/>
        <function-ref name="start" scoped="" ref="0x7f89603a7d30"/>
        <function-ref name="stop" scoped="" ref="0x7f89603a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f89603a5020" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f89603a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f89603a53a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f89603a5530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f89603a56c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f89603a5850"/>
        <function-ref name="setCca" scoped="" ref="0x7f89603a59e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f89603a5b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f896039b060" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f896039b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f896039b3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f896039b570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f896039b700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f896039b890"/>
        <function-ref name="setCca" scoped="" ref="0x7f896039ba20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f896039bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8960391330" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8960391330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f89603916b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8960391840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f89603919d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8960391b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f8960391cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8960391e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f89603932a0" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f89603932a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8960393620"/>
        <function-ref name="cancel" scoped="" ref="0x7f89603937b0"/>
        <function-ref name="modify" scoped="" ref="0x7f8960393940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8960393ad0"/>
        <function-ref name="resend" scoped="" ref="0x7f8960393c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f89603a62e0" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f89603a62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f89603a6660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f89603a67f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f89603a6980"/>
        <function-ref name="cancel" scoped="" ref="0x7f89603a6b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f89603a6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f8960390420" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f8960390420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f89603907a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f8960390930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f89603a36f0" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f89603a36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f89603a3a70"/>
        <function-ref name="stop" scoped="" ref="0x7f89603a3c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8960389920" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8960389920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8960389ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8960389e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f896038e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f896039c3f0" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f896039c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f896039c770"/>
        <function-ref name="rfOff" scoped="" ref="0x7f896039c900"/>
        <function-ref name="rxOn" scoped="" ref="0x7f896039ca90"/>
        <function-ref name="startVReg" scoped="" ref="0x7f896039cc20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f896039cdb0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f89603a3020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f89603a31b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f89603a3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8960390bf0" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8960390bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8960392020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f89603921b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8960392340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f89603924d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8960392660"/>
        <function-ref name="get" scoped="" ref="0x7f89603927f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8960392980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8960391020"/>
        <function-ref name="set" scoped="" ref="0x7f8960392b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f8960392ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8960392e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f89603a5e60" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f89603a5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89603a4210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89603a43a0"/>
        <function-ref name="request" scoped="" ref="0x7f89603a4530"/>
        <function-ref name="granted" scoped="" ref="0x7f89603a46c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89603a4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f896038d110" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f896038d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f896038d590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f896038d720"/>
        <function-ref name="isState" scoped="" ref="0x7f896038d8b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f896038da40"/>
        <function-ref name="requestState" scoped="" ref="0x7f896038dbd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f896038dd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f896037fb70" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f896037fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f896037e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f896037e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f8960380ba0" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f8960380ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f896037f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f896037f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f8960382c20" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f8960382c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960380020"/>
        <function-ref name="runTask" scoped="" ref="0x7f89603801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f8960328dc0" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f8960328dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f8960334180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f8960334310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f89603344a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f8960334630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f89603347c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f8960334950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f8960334ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f8960334c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f8960334e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f8960333020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f89603331b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f8960333340"/>
        <function-ref name="sync" scoped="" ref="0x7f89603334d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f8960333760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f89603338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f8960325020" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f8960325020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8960325c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f89603240d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f8960333bf0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f8960333bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f8960326020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f89603261b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f8960326340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f89603264d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f8960326660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f89603267f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f8960326980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f8960326b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8960338950" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8960338950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960338cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960338e60"/>
        <function-ref name="request" scoped="" ref="0x7f8960335020"/>
        <function-ref name="granted" scoped="" ref="0x7f89603351b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960335340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f8960320970" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f8960320970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f8960320cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f8960320e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f896031f030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f896031f1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f896031f350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f896031f4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f896031f670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f896031f800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f896031f990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f896031fb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f896031fcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f896031fe40"/>
        <function-ref name="sync" scoped="" ref="0x7f896031e020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f896031e2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f896031e440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f89603028e0" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f89603028e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8960302c60"/>
        <function-ref name="write" scoped="" ref="0x7f8960302df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f8960319020" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8960319020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f89603193a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f8960319a10" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f8960319a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f89603152a0"/>
        <function-ref name="fired" scoped="" ref="0x7f89603172a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8960317c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960317760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8960315760"/>
        <function-ref name="start" scoped="" ref="0x7f8960318890"/>
        <function-ref name="stop" scoped="" ref="0x7f8960318da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f8960304710" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8960304710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8960304a90"/>
        <function-ref name="write" scoped="" ref="0x7f8960304c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f8960314e70" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f8960314e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960313220"/>
        <function-ref name="isInput" scoped="" ref="0x7f89603133b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960313540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89603136d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960313860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89603139f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960313b80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960313d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f896031db40" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f896031db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f896031c750"/>
        <function-ref name="readDone" scoped="" ref="0x7f896031cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f89602f0820" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f89602f0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f89602f0ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f89602f0d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f89603011c0" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f89603011c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8960301540"/>
        <function-ref name="write" scoped="" ref="0x7f89603016d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f8960301a70" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f8960301a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8960301df0"/>
        <function-ref name="write" scoped="" ref="0x7f8960300020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f8960305550" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f8960305550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f89603058d0"/>
        <function-ref name="write" scoped="" ref="0x7f8960305a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f896030caf0" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f896030caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f896030ce70"/>
        <function-ref name="changed" scoped="" ref="0x7f896030f030"/>
        <function-ref name="amGroup" scoped="" ref="0x7f896030f1c0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f896030f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f8960315c50" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f8960315c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960314020"/>
        <function-ref name="isInput" scoped="" ref="0x7f89603141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960314340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89603144d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960314660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89603147f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960314980"/>
        <function-ref name="clr" scoped="" ref="0x7f8960314b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f89602fe120" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f89602fe120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f89602fe6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f89603120f0" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f89603120f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960312470"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960312600"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960312790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960312920"/>
        <function-ref name="get" scoped="" ref="0x7f8960312ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960312c40"/>
        <function-ref name="set" scoped="" ref="0x7f8960312dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f89603214a0" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f89603214a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8960321820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f8960302020" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8960302020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f89603023a0"/>
        <function-ref name="write" scoped="" ref="0x7f8960302530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f89602fea40" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f89602fea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f89602fedc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f89602fc1d0" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f89602fc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89602fc550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89602fc6e0"/>
        <function-ref name="request" scoped="" ref="0x7f89602fc870"/>
        <function-ref name="granted" scoped="" ref="0x7f89602fca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89602fcb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f89602fbd90" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f89602fbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89602fa180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89602fa310"/>
        <function-ref name="request" scoped="" ref="0x7f89602fa4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f89602fa630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89602fa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f896031e740" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f896031e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f896031eac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f896031ec50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f896031ede0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f896031d020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f896031d1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f896031d340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f896031d4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f896031d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f8960305e00" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f8960305e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f89603041c0"/>
        <function-ref name="write" scoped="" ref="0x7f8960304350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f8960303be0" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f8960303be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8960305020"/>
        <function-ref name="write" scoped="" ref="0x7f89603051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f89602fd2b0" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f89602fd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f89602fd630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f89602faa80" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f89602faa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f89602fae00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f89602f9020"/>
        <function-ref name="led1On" scoped="" ref="0x7f89602f91b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f89602f9340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f89602f94d0"/>
        <function-ref name="get" scoped="" ref="0x7f89602f9660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f89602f97f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f89602f9e30"/>
        <function-ref name="set" scoped="" ref="0x7f89602f9980"/>
        <function-ref name="led0On" scoped="" ref="0x7f89602f9b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f89602f9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f89602f1940" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f89602f1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f89602f1cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f89602f1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8960321b10" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8960321b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960320020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89603201b0"/>
        <function-ref name="request" scoped="" ref="0x7f8960320340"/>
        <function-ref name="granted" scoped="" ref="0x7f89603204d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960320660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f896030e5a0" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f896030e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f896030e920"/>
        <function-ref name="write" scoped="" ref="0x7f896030eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f8960307c00" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f8960307c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f896030e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f896030e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f8960311400" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f8960311400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8960311780"/>
        <function-ref name="disable" scoped="" ref="0x7f8960311910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8960311aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8960311c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f89602fb020" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f89602fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89602fb3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89602fb530"/>
        <function-ref name="request" scoped="" ref="0x7f89602fb6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f89602fb850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89602fb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f89602fd9c0" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f89602fd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f89602fdd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f896027a7d0" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f896027a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f896027ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f8960277220" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8960277220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960274b30"/>
        <function-ref name="fired" scoped="" ref="0x7f8960276a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f89602744e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960274020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8960273020"/>
        <function-ref name="start" scoped="" ref="0x7f8960276090"/>
        <function-ref name="stop" scoped="" ref="0x7f89602765a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8960271260" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8960271260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f89602715e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f8960271af0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8960271af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8960236390"/>
        <function-ref name="fired" scoped="" ref="0x7f8960238360"/>
        <function-ref name="startAt" scoped="" ref="0x7f8960238ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8960238820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8960236850"/>
        <function-ref name="start" scoped="" ref="0x7f8960239970"/>
        <function-ref name="stop" scoped="" ref="0x7f8960239e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f05d690" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f05d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f05a020"/>
        <function-ref name="fired" scoped="" ref="0x7f895f05b020"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f05b9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f05b4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f05a4e0"/>
        <function-ref name="start" scoped="" ref="0x7f895f05c5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f895f05cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f05fdf0" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f05fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f05d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f056870" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f056870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f052090"/>
        <function-ref name="fired" scoped="" ref="0x7f895f053090"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f053a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f053550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f052550"/>
        <function-ref name="start" scoped="" ref="0x7f895f0556a0"/>
        <function-ref name="stop" scoped="" ref="0x7f895f055bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f056020" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f056020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f0563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f895f037020" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f037020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f895f0373a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f895f037530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f895f0376c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f895f037850"/>
        <function-ref name="fired" scoped="" ref="0x7f895f0379e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f895f03a570" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f03a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f03a8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895f03aa80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f03ac10"/>
        <function-ref name="get" scoped="" ref="0x7f895f03ada0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f039020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f0391b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f895f039340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f0394d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f039660"/>
        <function-ref name="setMode" scoped="" ref="0x7f895f0397f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f895f039980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f895f039c10" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f039c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f895f038020"/>
        <function-ref name="getControl" scoped="" ref="0x7f895f0381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f038340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f895f0384d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f895f038660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f0387f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f895f038980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f895f038b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f895f038ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f895f02eda0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f895f02eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f895f02d180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f895f02d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f895f02d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f895f02d630"/>
        <function-ref name="fired" scoped="" ref="0x7f895f02d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f895f0304c0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f895f0304c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f030840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895f0309d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f030b60"/>
        <function-ref name="get" scoped="" ref="0x7f895f030cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f030e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f02f030"/>
        <function-ref name="getMode" scoped="" ref="0x7f895f02f1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f02f350"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f02f4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f895f02f670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f895f02f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f034340" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f034340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f032ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f895f033b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f032550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f032090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f030090"/>
        <function-ref name="start" scoped="" ref="0x7f895f0331b0"/>
        <function-ref name="stop" scoped="" ref="0x7f895f0336c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f035a30" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f035a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f035db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f895f02fa90" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f895f02fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f895f02fe10"/>
        <function-ref name="getControl" scoped="" ref="0x7f895f02e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895f02e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f895f02e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f895f02e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895f02e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f895f02e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f895f02e980"/>
        <function-ref name="setControl" scoped="" ref="0x7f895f02eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f896025b080" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f896025b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f896025a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f896025a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f896025a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f896025ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f89602520f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f89602520f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960251020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89602519a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89602514e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960251e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8960256cd0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8960256cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8960255b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8960253550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8960253090"/>
        <function-ref name="overflow" scoped="" ref="0x7f8960253a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f895f050a90" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f895f050a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f04c2e0"/>
        <function-ref name="fired" scoped="" ref="0x7f895f04e2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f04ec60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f04e7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f04c7a0"/>
        <function-ref name="start" scoped="" ref="0x7f895f04f8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f895f04fde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f895f049210" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f895f049210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895f046b30"/>
        <function-ref name="fired" scoped="" ref="0x7f895f048a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f895f0464e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895f046020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895f045020"/>
        <function-ref name="start" scoped="" ref="0x7f895f048090"/>
        <function-ref name="stop" scoped="" ref="0x7f895f0485a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f895f04ce10" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f895f04ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895f04bca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895f04a670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895f04a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f895f04ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f896022f090" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f896022f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896022f410"/>
        <function-ref name="isInput" scoped="" ref="0x7f896022f5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f896022f730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896022f8c0"/>
        <function-ref name="get" scoped="" ref="0x7f896022fa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896022fbe0"/>
        <function-ref name="set" scoped="" ref="0x7f896022fd70"/>
        <function-ref name="clr" scoped="" ref="0x7f896022e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f896022e390" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f896022e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896022e710"/>
        <function-ref name="isInput" scoped="" ref="0x7f896022e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f896022ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896022ebc0"/>
        <function-ref name="get" scoped="" ref="0x7f896022ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896022d020"/>
        <function-ref name="set" scoped="" ref="0x7f896022d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f896022d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f896022d6a0" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f896022d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896022da20"/>
        <function-ref name="isInput" scoped="" ref="0x7f896022dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f896022dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896022c020"/>
        <function-ref name="get" scoped="" ref="0x7f896022c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896022c340"/>
        <function-ref name="set" scoped="" ref="0x7f896022c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f896022c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f8960231e60" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f8960231e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960230210"/>
        <function-ref name="isInput" scoped="" ref="0x7f89602303a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960230530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89602306c0"/>
        <function-ref name="get" scoped="" ref="0x7f8960230850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89602309e0"/>
        <function-ref name="set" scoped="" ref="0x7f8960230b70"/>
        <function-ref name="clr" scoped="" ref="0x7f8960230d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f896022bce0" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f896022bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896022a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f896022a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f896022a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896022a550"/>
        <function-ref name="get" scoped="" ref="0x7f896022a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896022a870"/>
        <function-ref name="set" scoped="" ref="0x7f896022aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f896022ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f8960278b10" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f8960278b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960231020"/>
        <function-ref name="isInput" scoped="" ref="0x7f89602311b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960231340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89602314d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960231660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89602317f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960231980"/>
        <function-ref name="clr" scoped="" ref="0x7f8960231b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f896022c9b0" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f896022c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896022cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f896022b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f896022b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896022b340"/>
        <function-ref name="get" scoped="" ref="0x7f896022b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896022b660"/>
        <function-ref name="set" scoped="" ref="0x7f896022b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f896022b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f89602272f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f89602272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960227670"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960227800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960227990"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960227b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960227cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960227e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960226020"/>
        <function-ref name="get" scoped="" ref="0x7f89602261b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960226340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89602264d0"/>
        <function-ref name="set" scoped="" ref="0x7f8960226660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89602267f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960226980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960226c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8960226da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960228020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960228020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89602283a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960228530"/>
        <function-ref name="toggle" scoped="" ref="0x7f89602286c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960228850"/>
        <function-ref name="get" scoped="" ref="0x7f89602289e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960228b70"/>
        <function-ref name="set" scoped="" ref="0x7f8960228d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8960227020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960222de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960222de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960221180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960221310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89602214a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960221630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89602217c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960221950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960221ae0"/>
        <function-ref name="get" scoped="" ref="0x7f8960221c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960221e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960220020"/>
        <function-ref name="set" scoped="" ref="0x7f89602201b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960220340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89602204d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960220760"/>
        <function-ref name="clr" scoped="" ref="0x7f89602208f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960224b60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960224b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960222020"/>
        <function-ref name="isInput" scoped="" ref="0x7f89602221b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960222340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89602224d0"/>
        <function-ref name="get" scoped="" ref="0x7f8960222660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89602227f0"/>
        <function-ref name="set" scoped="" ref="0x7f8960222980"/>
        <function-ref name="clr" scoped="" ref="0x7f8960222b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f896021d930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f896021d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896021dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f896021de40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f896021c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f896021c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896021c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f896021c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896021c660"/>
        <function-ref name="get" scoped="" ref="0x7f896021c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f896021c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f896021cb10"/>
        <function-ref name="set" scoped="" ref="0x7f896021cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f896021ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f896021b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f896021b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f896021b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f896021e710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f896021e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896021ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f896021ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f896021edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896021d020"/>
        <function-ref name="get" scoped="" ref="0x7f896021d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896021d340"/>
        <function-ref name="set" scoped="" ref="0x7f896021d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f896021d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960218480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960218480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960218800"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960218990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960218b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960218cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960218e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960217020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89602171b0"/>
        <function-ref name="get" scoped="" ref="0x7f8960217340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89602174d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960217660"/>
        <function-ref name="set" scoped="" ref="0x7f89602177f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960217980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960217b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960217da0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960216020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f89602191d0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f89602191d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960219550"/>
        <function-ref name="isInput" scoped="" ref="0x7f89602196e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960219870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960219a00"/>
        <function-ref name="get" scoped="" ref="0x7f8960219b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960219d20"/>
        <function-ref name="set" scoped="" ref="0x7f8960218020"/>
        <function-ref name="clr" scoped="" ref="0x7f89602181b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960213020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960213020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89602133a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960213530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89602136c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8960213850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89602139e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8960213b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960213d00"/>
        <function-ref name="get" scoped="" ref="0x7f8960212020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89602121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960212340"/>
        <function-ref name="set" scoped="" ref="0x7f89602124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960212660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89602127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8960212a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8960212c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960215d70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960215d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960214180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960214310"/>
        <function-ref name="toggle" scoped="" ref="0x7f89602144a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960214630"/>
        <function-ref name="get" scoped="" ref="0x7f89602147c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960214950"/>
        <function-ref name="set" scoped="" ref="0x7f8960214ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960214c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f896020fde0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f896020fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896020d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f896020d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f896020d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f896020d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896020d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f896020d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896020dae0"/>
        <function-ref name="get" scoped="" ref="0x7f896020dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f896020de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f896020c020"/>
        <function-ref name="set" scoped="" ref="0x7f896020c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f896020c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f896020c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f896020c760"/>
        <function-ref name="clr" scoped="" ref="0x7f896020c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8960210b60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8960210b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896020f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f896020f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f896020f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f896020f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f896020f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f896020f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f896020f980"/>
        <function-ref name="clr" scoped="" ref="0x7f896020fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8960209930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8960209930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8960209cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8960209e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8960208020"/>
        <function-ref name="toggle" scoped="" ref="0x7f89602081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960208340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89602084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960208660"/>
        <function-ref name="get" scoped="" ref="0x7f89602087f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8960208980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8960208b10"/>
        <function-ref name="set" scoped="" ref="0x7f8960208ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8960208e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8960207020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89602072b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960207440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f896020a710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f896020a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f896020aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f896020ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f896020adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8960209020"/>
        <function-ref name="get" scoped="" ref="0x7f89602091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8960209340"/>
        <function-ref name="set" scoped="" ref="0x7f89602094d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8960209660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f89601f4150" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f89601f4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f89601f44d0"/>
        <function-ref name="disable" scoped="" ref="0x7f89601f4660"/>
        <function-ref name="captured" scoped="" ref="0x7f89601f47f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f89601f4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f89601f4d60" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f89601f4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89601f3180"/>
        <function-ref name="disable" scoped="" ref="0x7f89601f3310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f89601f34a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f89601f3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f89601f3a20" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f89601f3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89601f3da0"/>
        <function-ref name="disable" scoped="" ref="0x7f89601f0020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f89601f01b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f89601f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f89601d88f0" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f89601d88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f89601d8c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f89601d8e00"/>
        <function-ref name="captured" scoped="" ref="0x7f89601d7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f89601d71b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f89601d7340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f89601d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f89601eca20" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f89601eca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f89601ecda0"/>
        <function-ref name="disable" scoped="" ref="0x7f89601d9020"/>
        <function-ref name="captured" scoped="" ref="0x7f89601d91b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f89601d9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f89601d95d0" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f89601d95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f89601d9950"/>
        <function-ref name="getControl" scoped="" ref="0x7f89601d9ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f89601d9c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f89601d9e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f89601d8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f89601d81b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f89601d8340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f89601d84d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f89601d8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f89601d77a0" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f89601d77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f89601d7b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f89601d7cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f89601d7e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f89601d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f89601d61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f89601d6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f89601d64d0"/>
        <function-ref name="get" scoped="" ref="0x7f89601d6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f89601d67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f89601d6980"/>
        <function-ref name="set" scoped="" ref="0x7f89601d6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f89601d6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f89601d6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f89601d5120"/>
        <function-ref name="clr" scoped="" ref="0x7f89601d52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f89601d1480" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f89601d1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89601d1800"/>
        <function-ref name="fired" scoped="" ref="0x7f89601d1990"/>
        <function-ref name="disable" scoped="" ref="0x7f89601d1b20"/>
        <function-ref name="edge" scoped="" ref="0x7f89601d1cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f89601d1e40"/>
        <function-ref name="getValue" scoped="" ref="0x7f89601d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f89601d28a0" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f89601d28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89601d2c20"/>
        <function-ref name="disable" scoped="" ref="0x7f89601d2db0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f89601d1020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f89601d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f89601cd480" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f89601cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f89601cd800"/>
        <function-ref name="fired" scoped="" ref="0x7f89601cd990"/>
        <function-ref name="disable" scoped="" ref="0x7f89601cdb20"/>
        <function-ref name="edge" scoped="" ref="0x7f89601cdcb0"/>
        <function-ref name="enable" scoped="" ref="0x7f89601cde40"/>
        <function-ref name="getValue" scoped="" ref="0x7f89601cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f89601cf8b0" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f89601cf8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f89601cfc30"/>
        <function-ref name="disable" scoped="" ref="0x7f89601cfdc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f89601cd020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f89601cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f895fd6ee50" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fd6ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6d410"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f895fd7a160" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f895fd7a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd7a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f895fd72e50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fd72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd71210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f895fd6c880" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fd6c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6cc00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f895fd640a0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f895fd640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd64420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd645b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f895fd6b0a0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f895fd6b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6b420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f895fd58500" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f895fd58500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd58880"/>
        <function-ref name="write" scoped="" ref="0x7f895fd58a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f895fd5b500" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f895fd5b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5b880"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f895fd79490" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f895fd79490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd79810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f895fd60880" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f895fd60880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd60c00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd60d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f895fd5c500" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fd5c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5c880"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f895fd71e50" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f895fd71e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd70210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f895fd70e50" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f895fd70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6e210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f895fd66880" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f895fd66880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd66c00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd66d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f895fd670a0" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f895fd670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd67420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd675b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f895fd6b880" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f895fd6b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6bc00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f895fd7ca90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fd7ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f895fd7ce10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f895fd7b020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f895fd7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f895fd78e00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fd78e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd741c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f895fd74490" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f895fd74490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd74910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f895fd5fc80" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fd5fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f895fd74be0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f895fd74be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f895fd5cce0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fd5cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f895fd78160" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fd78160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd784e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f895fd600a0" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f895fd600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd60420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd605b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f895fd70670" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fd70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd709f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f895fd71670" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fd71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd719f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd71b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f895fd7bad0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f895fd7bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd7be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f895fd620a0" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fd620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd62420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd625b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f895fd64880" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f895fd64880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd64c00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd64d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f895fd62880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fd62880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd62c00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd62d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f895fd59ce0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f895fd59ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd580a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd58230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f895fd5bce0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f895fd5bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd590a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd59230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f895fd67880" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f895fd67880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd67c00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd67d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f895fd630a0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f895fd630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd63420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd635b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f895fd5dce0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f895fd5dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f895fd6a880" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f895fd6a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6ac00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f895fd58ce0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f895fd58ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fd570a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fd57230"/>
        <function-ref name="write" scoped="" ref="0x7f895fd573c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fd57550"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fd576e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f895fd7b480" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f895fd7b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd7b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f895fd72670" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f895fd72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd729f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd72b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f895fd6e670" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fd6e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f895fd650a0" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f895fd650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd65420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd655b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f895fd6a0a0" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f895fd6a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6a420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f895fd65880" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f895fd65880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd65c00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd65d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f895fd6d870" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f895fd6d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6dbf0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f895fd7a7b0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f895fd7a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd7ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f895fd6c0a0" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fd6c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd6c420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd6c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895fd7de20" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895fd7de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fd7c1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fd7c350"/>
        <function-ref name="request" scoped="" ref="0x7f895fd7c4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f895fd7c670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fd7c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f895fd732f0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f895fd732f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd73670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f895fd72020" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f895fd72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f895fd5d500" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f895fd5d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5d880"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f895fd5ece0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f895fd5ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f895fd787b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fd787b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd78b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f895fd5e500" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fd5e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5e880"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f895fd59500" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f895fd59500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd59880"/>
        <function-ref name="write" scoped="" ref="0x7f895fd59a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f895fd660a0" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fd660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd66420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd665b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f895fd63880" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f895fd63880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd63c00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd63d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f895fd7ae00" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f895fd7ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd791c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f895fd79ae0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f895fd79ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd79e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f895fd690a0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f895fd690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd69420"/>
        <function-ref name="write" scoped="" ref="0x7f895fd695b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f895fd73940" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f895fd73940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd73cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f895fd69880" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f895fd69880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd69c00"/>
        <function-ref name="write" scoped="" ref="0x7f895fd69d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f895fd5f0a0" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f895fd5f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd5f820"/>
        <function-ref name="write" scoped="" ref="0x7f895fd5f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f895fd579b0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f895fd579b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fd57d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fd56020"/>
        <function-ref name="write" scoped="" ref="0x7f895fd561b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fd56340"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fd564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f896018d630" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f896018d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f896018d9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f896018db40"/>
        <function-ref name="write" scoped="" ref="0x7f896018dcd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f896018de60"/>
        <function-ref name="readDone" scoped="" ref="0x7f896018c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f896018e670" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f896018e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f896018e9f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f896018eb80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f896018ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f896018c8c0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f896018c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f896018cc40"/>
        <function-ref name="write" scoped="" ref="0x7f896018cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f896018a6f0" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f896018a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f896018aa70"/>
        <function-ref name="write" scoped="" ref="0x7f896018ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8960191950" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8960191950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960191cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960191e60"/>
        <function-ref name="request" scoped="" ref="0x7f896018e020"/>
        <function-ref name="granted" scoped="" ref="0x7f896018e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f896018e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f8960189510" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f8960189510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8960189890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f8960173680" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f8960173680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8960173a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8960173b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f8960184bb0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f8960184bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8960183020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f89601831b0"/>
        <function-ref name="write" scoped="" ref="0x7f8960183340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f89601834d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8960183660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8960188920" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8960188920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8960188ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8960188e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8960185020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f896017d080" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f896017d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f896017d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f896017c020" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f896017c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f896017c3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f896017c530"/>
        <function-ref name="isState" scoped="" ref="0x7f896017c6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f896017c850"/>
        <function-ref name="requestState" scoped="" ref="0x7f896017c9e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f896017cb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f896017f400" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f896017f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f896017f780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f896017f910"/>
        <function-ref name="request" scoped="" ref="0x7f896017faa0"/>
        <function-ref name="granted" scoped="" ref="0x7f896017fc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f896017fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f8960181020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f8960181020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f89601813a0"/>
        <function-ref name="write" scoped="" ref="0x7f8960181530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f8960181db0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f8960181db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8960180180"/>
        <function-ref name="write" scoped="" ref="0x7f8960180310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f896017cdf0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f896017cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f896017b1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f896017b350"/>
        <function-ref name="led1On" scoped="" ref="0x7f896017b4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f896017b670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f896017b800"/>
        <function-ref name="get" scoped="" ref="0x7f896017b990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f896017bb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f89601741b0"/>
        <function-ref name="set" scoped="" ref="0x7f896017bcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f896017be40"/>
        <function-ref name="led2On" scoped="" ref="0x7f8960174020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8960185810" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8960185810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960185b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960185d20"/>
        <function-ref name="request" scoped="" ref="0x7f8960184020"/>
        <function-ref name="granted" scoped="" ref="0x7f89601841b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960184340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f896016e120" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f896016e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f896016e4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f896016e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f8960180ba0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f8960180ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f896017f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f8960114770" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f8960114770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8960114af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8960114c80"/>
        <function-ref name="isState" scoped="" ref="0x7f8960114e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8960111020"/>
        <function-ref name="requestState" scoped="" ref="0x7f89601111b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f8960111340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f8960110280" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f8960110280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8960110600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8960110790"/>
        <function-ref name="isState" scoped="" ref="0x7f8960110920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8960110ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f8960110c40"/>
        <function-ref name="forceState" scoped="" ref="0x7f8960110dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f896010b020" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f896010b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f896010b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f896010bb70" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f896010bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f896010a020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f896010a1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f896010a340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f896010a4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f896010a660"/>
        <function-ref name="forceState" scoped="" ref="0x7f896010a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f895fda3020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f895fda3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895fda33a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895fda3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f89600f18f0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f89600f18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f89600f1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f89600f2c40" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f89600f2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f89600f1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89600f11b0"/>
        <function-ref name="request" scoped="" ref="0x7f89600f1340"/>
        <function-ref name="granted" scoped="" ref="0x7f89600f14d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f89600f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f895ef68440" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f895ef68440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f895ef687c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895ef68950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f895ef66d70" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f895ef66d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895ef65180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895ef65310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f895ef655a0" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f895ef655a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f895ef65920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f895ef68be0" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f895ef68be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f895ef66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895ef69770" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895ef69770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895ef69af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895ef69c80"/>
        <function-ref name="request" scoped="" ref="0x7f895ef69e10"/>
        <function-ref name="granted" scoped="" ref="0x7f895ef68020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895ef681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f895ef662b0" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f895ef662b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f895ef66630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f895ef667c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f895ef66950"/>
        <function-ref name="write" scoped="" ref="0x7f895ef66ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f8960090430" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8960090430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f89600907b0"/>
        <function-ref name="configure" scoped="" ref="0x7f8960090940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f896008d3f0" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f896008d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f896008d770"/>
        <function-ref name="sendDone" scoped="" ref="0x7f896008d900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f896008b510" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f896008b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f896008b890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f8960090c20" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f8960090c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f896008f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f896008c280" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f896008c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f896008c600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f896008c790"/>
        <function-ref name="request" scoped="" ref="0x7f896008c920"/>
        <function-ref name="granted" scoped="" ref="0x7f896008cab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f896008cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f89600911d0" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f89600911d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960091550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f89600916e0"/>
        <function-ref name="request" scoped="" ref="0x7f8960091870"/>
        <function-ref name="granted" scoped="" ref="0x7f8960091a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960091b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f896008f320" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f896008f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f896008f6a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f896008f830"/>
        <function-ref name="splitRead" scoped="" ref="0x7f896008f9c0"/>
        <function-ref name="write" scoped="" ref="0x7f896008fb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f89600876a0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f89600876a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8960087a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f8960087bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f896000cc40" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f896000cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f896000b020"/>
        <function-ref name="configure" scoped="" ref="0x7f896000b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f896000a700" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f896000a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f896000aaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f896000ac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f8960009e00" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f8960009e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f89600071c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f896000b440" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f896000b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f896000b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f8960007490" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f8960007490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8960007810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f89600079a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f8960007b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f8960007cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f8960007e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8960006020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f89600061b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f8960006340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f89600064d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f8960006660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f89600067f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f8960006980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f8960006b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f8960006da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8960005020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f89600051b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f8960005340"/>
        <function-ref name="isUart" scoped="" ref="0x7f89600054d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8960005660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f89600057f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f8960005980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8960005b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f8960005ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f8960005e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f8960004020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f89600043b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f8960004540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f89600046d0"/>
        <function-ref name="tx" scoped="" ref="0x7f8960004860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f89600049f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f8960004b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8960004d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f8960003020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f89600031b0"/>
        <function-ref name="rx" scoped="" ref="0x7f8960003340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f89600034d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f8960003660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f89600037f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f8960003980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f8960003b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f89600025a0" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f89600025a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8960002920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8960002ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8960002c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8960002dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8960001020"/>
        <function-ref name="get" scoped="" ref="0x7f89600011b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8960001340"/>
        <function-ref name="led2On" scoped="" ref="0x7f8960001980"/>
        <function-ref name="set" scoped="" ref="0x7f8960001660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f89600014d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f89600017f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f8960009060" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f8960009060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8960009400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8960009590"/>
        <function-ref name="request" scoped="" ref="0x7f8960009720"/>
        <function-ref name="granted" scoped="" ref="0x7f89600098b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8960009a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f896000de80" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f896000de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f896000c240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f896000c3d0"/>
        <function-ref name="request" scoped="" ref="0x7f896000c560"/>
        <function-ref name="granted" scoped="" ref="0x7f896000c6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f896000c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f896000ba50" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f896000ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f896000bdd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f896000a020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f896000a1b0"/>
        <function-ref name="write" scoped="" ref="0x7f896000a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f8960003de0" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f8960003de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8960002180"/>
        <function-ref name="txDone" scoped="" ref="0x7f8960002310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f8960001c50" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f8960001c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8960000020"/>
        <function-ref name="runTask" scoped="" ref="0x7f89600001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f895fff18a0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f895fff18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f895fff1c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f895fff43b0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f895fff43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f895fff4730"/>
        <function-ref name="txDone" scoped="" ref="0x7f895fff48c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f895fffb860" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f895fffb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f895fffbbe0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f895fffbd70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f895fff8020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f895fff81b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f895fff8340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f895fff84d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f895fff8660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f895fff87f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f895fff8980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f895fff8b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f895fff8ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f895fff8e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f895fff7020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f895fff72b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f895fff7440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f895fff75d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f895fff7760"/>
        <function-ref name="isUart" scoped="" ref="0x7f895fff78f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f895fff7a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f895fff7c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f895fff7da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f895fff6020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f895fff61b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f895fff6340"/>
        <function-ref name="getMode" scoped="" ref="0x7f895fff64d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f895fff6860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f895fff69f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f895fff6b80"/>
        <function-ref name="tx" scoped="" ref="0x7f895fff6d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f895fff5020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f895fff51b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f895fff5340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f895fff54d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f895fff5660"/>
        <function-ref name="rx" scoped="" ref="0x7f895fff57f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f895fff5980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f895fff5b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f895fff5ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f895fff5e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f895fff4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f895ff36670" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f895ff36670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895ff369f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895ff36b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f895ff36d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f895ff35020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895ff351b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f895ff35340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895ff354d0"/>
        <function-ref name="get" scoped="" ref="0x7f895ff35660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f895ff357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f895ff35980"/>
        <function-ref name="set" scoped="" ref="0x7f895ff35b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f895ff35ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f895ff35e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f895ff34120"/>
        <function-ref name="clr" scoped="" ref="0x7f895ff342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f895ffebdc0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f895ffebdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f895ffea180"/>
        <function-ref name="txDone" scoped="" ref="0x7f895ffea310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f895ff34670" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f895ff34670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895ff349f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895ff34b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f895ff34d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f895ff33020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895ff331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f895ff33340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895ff334d0"/>
        <function-ref name="get" scoped="" ref="0x7f895ff33660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f895ff337f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f895ff33980"/>
        <function-ref name="set" scoped="" ref="0x7f895ff33b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f895ff33ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f895ff33e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f895ff32120"/>
        <function-ref name="clr" scoped="" ref="0x7f895ff322b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f895ff32670" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f895ff32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895ff329f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895ff32b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f895ff32d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f895ff31020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895ff311b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f895ff31340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895ff314d0"/>
        <function-ref name="get" scoped="" ref="0x7f895ff31660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f895ff317f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f895ff31980"/>
        <function-ref name="set" scoped="" ref="0x7f895ff31b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f895ff31ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f895ff31e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f895ff30120"/>
        <function-ref name="clr" scoped="" ref="0x7f895ff302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f895ffef020" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f895ffef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f895ffef3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f895ffef530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f895ffef6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f895ffef850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f895ffef9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f895ffefb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f895ffefd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f895ffee020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f895ffee1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f895ffee340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f895ffee4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f895ffee660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f895ffee7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f895ffeea80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f895ffeec10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f895ffeeda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f895ffed020"/>
        <function-ref name="isUart" scoped="" ref="0x7f895ffed1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f895ffed340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f895ffed4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f895ffed660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f895ffed7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f895ffed980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f895ffedb10"/>
        <function-ref name="getMode" scoped="" ref="0x7f895ffedca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f895ffec220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f895ffec3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f895ffec540"/>
        <function-ref name="tx" scoped="" ref="0x7f895ffec6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f895ffec860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f895ffec9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f895ffecb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f895ffecd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f895ffeb020"/>
        <function-ref name="rx" scoped="" ref="0x7f895ffeb1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f895ffeb340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f895ffeb4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f895ffeb660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f895ffeb7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f895ffeb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f895ff405b0" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f895ff405b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f895ff40930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f895ff40ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f895ff40c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f895ff40de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f895ffe8020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f895ffe81b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f895ffe8340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f895ffe84d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895ffe8660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f895ffe87f0"/>
        <function-ref name="getData" scoped="" ref="0x7f895ffe8980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f895ffe8b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f895ffe8ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f895ffe7020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f895ffe71b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f895ffe7340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f895ffe74d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f895ffe7660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f895ffe77f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f895ffe7980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f895ffe7b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f895ffe7ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f895ffe7e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f895ff3e020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f895ff3e1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f895ff3e540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f895ff3e6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f895ff3e860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f895ff3e9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f895ff3eb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f895ff3ed10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f895ff3d020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f895ff3d1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f895ff3d340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f895ff3d4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f895ff3d660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f895ff3d7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f895ff3d980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f895ff3db10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f895ff3dca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f895ff3de30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f895ff3c020"/>
        <function-ref name="setData" scoped="" ref="0x7f895ff3c1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f895ff3c340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f895ff3c4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f895ff3c660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f895ff3c7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f895ff3c980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f895ff3cb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f895ff3b420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f895ff3b5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f895ff3b740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f895ff3b8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f895ff3ba60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f895ff3bbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f895ff3bd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f895ff3a020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f895ff3a1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f895ff3a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f895ff38670" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f895ff38670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895ff389f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895ff38b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f895ff38d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f895ff37020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895ff371b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f895ff37340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895ff374d0"/>
        <function-ref name="get" scoped="" ref="0x7f895ff37660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f895ff377f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f895ff37980"/>
        <function-ref name="set" scoped="" ref="0x7f895ff37b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f895ff37ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f895ff37e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f895ff36120"/>
        <function-ref name="clr" scoped="" ref="0x7f895ff362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f895ffea750" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f895ffea750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f895ffeaad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f895ff3a700" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f895ff3a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895ff3aa80"/>
        <function-ref name="isInput" scoped="" ref="0x7f895ff3ac10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f895ff3ada0"/>
        <function-ref name="toggle" scoped="" ref="0x7f895ff39020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895ff391b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f895ff39340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895ff394d0"/>
        <function-ref name="get" scoped="" ref="0x7f895ff39660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f895ff397f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f895ff39980"/>
        <function-ref name="set" scoped="" ref="0x7f895ff39b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f895ff39ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f895ff39e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f895ff38120"/>
        <function-ref name="clr" scoped="" ref="0x7f895ff382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f895ef5ed90" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f895ef5ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f895ef5d180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895ef5d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f895ef57020" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f895ef57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f895ef573a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f895ef505d0" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895ef505d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f895ef50950"/>
        <function-ref name="configure" scoped="" ref="0x7f895ef50ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f895ef57630" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f895ef57630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f895ef579b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f895ef57b40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f895ef57cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f895ef57e60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f895ef56020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f895ef561b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f895ef56340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f895ef564d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895ef56660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f895ef567f0"/>
        <function-ref name="getData" scoped="" ref="0x7f895ef56980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f895ef56b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f895ef56ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f895ef55020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f895ef551b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f895ef55340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f895ef554d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f895ef55660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f895ef557f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f895ef55980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f895ef55b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f895ef55ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f895ef55e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f895ef54020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f895ef541b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f895ef54540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f895ef546d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f895ef54860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f895ef549f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f895ef54b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f895ef54d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f895ef53020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f895ef531b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f895ef53340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f895ef534d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f895ef53660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f895ef537f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f895ef53980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f895ef53b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f895ef53ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f895ef53e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f895ef52020"/>
        <function-ref name="setData" scoped="" ref="0x7f895ef521b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f895ef52340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f895ef524d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f895ef52660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f895ef527f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f895ef52980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f895ef52b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f895ef51420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f895ef515b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f895ef51740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f895ef518d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f895ef51a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f895ef51bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f895ef51d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f895ef50020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f895ef501b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f895ef50340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f895ef58760" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f895ef58760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f895ef58ae0"/>
        <function-ref name="txDone" scoped="" ref="0x7f895ef58c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895ef5e140" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895ef5e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895ef5e4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895ef5e650"/>
        <function-ref name="request" scoped="" ref="0x7f895ef5e7e0"/>
        <function-ref name="granted" scoped="" ref="0x7f895ef5e970"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895ef5eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f895ef5dd40" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f895ef5dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f895ef5c0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f895ef5c270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f895ef5c400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f895ef5c590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f895ef5c720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f895ef5c8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f895ef5ca40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f895ef5cbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f895ef5cd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f895ef5b020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f895ef5b1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f895ef5b340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f895ef5b4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f895ef5b760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f895ef5b8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f895ef5ba80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f895ef5bc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f895ef5bda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f895ef5a020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f895ef5a1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f895ef5a340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f895ef5a4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f895ef5a660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f895ef5a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f895ef5a980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f895ef5ad10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f895ef59020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f895ef591b0"/>
        <function-ref name="tx" scoped="" ref="0x7f895ef59340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f895ef594d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f895ef59660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f895ef597f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f895ef59980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f895ef59b10"/>
        <function-ref name="rx" scoped="" ref="0x7f895ef59ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f895ef59e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f895ef58020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f895ef581b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f895ef58340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f895ef584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f895ef5d5a0" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895ef5d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f895ef5d920"/>
        <function-ref name="userId" scoped="" ref="0x7f895ef5dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f895fe922c0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f895fe922c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f895fe92640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895fe927d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f895fe918a0" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895fe918a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f895fe91c20"/>
        <function-ref name="configure" scoped="" ref="0x7f895fe91db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f895fe964d0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f895fe964d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f895fe96850"/>
        <function-ref name="txDone" scoped="" ref="0x7f895fe969e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895fe93020" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895fe93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fe933a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fe93530"/>
        <function-ref name="request" scoped="" ref="0x7f895fe936c0"/>
        <function-ref name="granted" scoped="" ref="0x7f895fe93850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fe939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f895fe953f0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f895fe953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f895fe95770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f895fe92ad0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe92ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f895fe92e50"/>
        <function-ref name="userId" scoped="" ref="0x7f895fe91020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f895fe7abf0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe7abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f895fe79020"/>
        <function-ref name="userId" scoped="" ref="0x7f895fe791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f895fe8fd60" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f895fe8fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f895fe8c180"/>
        <function-ref name="txDone" scoped="" ref="0x7f895fe8c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f895fe7a5e0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f895fe7a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f895fe7a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f895fe8c710" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f895fe8c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f895fe8cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f895fe8cd80" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f895fe8cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f895fe7a180"/>
        <function-ref name="txDone" scoped="" ref="0x7f895fe7a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f895fe766c0" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f895fe766c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f895fe76a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895fe76bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f895fe733e0" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895fe733e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f895fe73780"/>
        <function-ref name="configure" scoped="" ref="0x7f895fe73910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f895fe76e40" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f895fe76e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fe741e0"/>
        <function-ref name="requested" scoped="" ref="0x7f895fe74370"/>
        <function-ref name="granted" scoped="" ref="0x7f895fe74500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fe74690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895fe74820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895fe77890" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895fe77890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fe77c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fe77dc0"/>
        <function-ref name="request" scoped="" ref="0x7f895fe76020"/>
        <function-ref name="granted" scoped="" ref="0x7f895fe761b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fe76340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f895fe74a70" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895fe74a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f895fe74df0"/>
        <function-ref name="userId" scoped="" ref="0x7f895fe73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895eec5020" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895eec5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895eec53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f895eec5630" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f895eec5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f895eec59b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f895eec5b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f895eec5cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f895eec5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f895eec26c0" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f895eec26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f895eec2a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895eec2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f895eebf400" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f895eebf400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f895eebf7a0"/>
        <function-ref name="configure" scoped="" ref="0x7f895eebf930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f895eebfbc0" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f895eebfbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f895eebe020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f895eebe1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f895eebe340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f895eebe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f895eec2e40" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f895eec2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895eec01e0"/>
        <function-ref name="requested" scoped="" ref="0x7f895eec0370"/>
        <function-ref name="granted" scoped="" ref="0x7f895eec0500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895eec0690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f895eec0820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f895eebe720" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f895eebe720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f895eebeaa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f895eebec30"/>
        <function-ref name="led1On" scoped="" ref="0x7f895eebedc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f895eebd020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f895eebd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f895eebd340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f895eebd4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f895eebdb10"/>
        <function-ref name="set" scoped="" ref="0x7f895eebd7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f895eebd660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f895eebd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895eec3850" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895eec3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895eec3bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895eec3d80"/>
        <function-ref name="request" scoped="" ref="0x7f895eec2020"/>
        <function-ref name="granted" scoped="" ref="0x7f895eec21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895eec2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f895eec0a70" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f895eec0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f895eec0df0"/>
        <function-ref name="userId" scoped="" ref="0x7f895eebf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f895eebdde0" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f895eebdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f895eebc180"/>
        <function-ref name="runTask" scoped="" ref="0x7f895eebc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f895fe6c350" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f895fe6c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f895fe6c6d0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f895fe6c860"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f895fe6c9f0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f895fe6cb80"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f895fe6cd10"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f895fe69020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f895fe691b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f895fe69340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895fe694d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f895fe69660"/>
        <function-ref name="getData" scoped="" ref="0x7f895fe697f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f895fe69980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f895fe69b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f895fe69da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f895fe68020"/>
        <function-ref name="getIV" scoped="" ref="0x7f895fe681b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f895fe68340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f895fe684d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f895fe68660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f895fe687f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f895fe68980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f895fe68b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f895fe68ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f895fe68e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f895fe67020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f895fe673b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f895fe67540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f895fe676d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f895fe67860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f895fe679f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f895fe67b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f895fe67d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f895fe66020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f895fe661b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f895fe66340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f895fe664d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f895fe66660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f895fe667f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f895fe66980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f895fe66b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f895fe66ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f895fe66e30"/>
        <function-ref name="setData" scoped="" ref="0x7f895fe65020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f895fe651b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f895fe65340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f895fe654d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f895fe65660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f895fe657f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f895fe65980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f895fe64020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f895fe641b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f895fe64340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f895fe644d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f895fe64660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f895fe647f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f895fe64980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f895fe64b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f895fe64ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f895fe64e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f895fe590c0" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f895fe590c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f895fe59440"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f895fe595d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f895fe59760"/>
        <function-ref name="enableUart" scoped="" ref="0x7f895fe598f0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f895fe59a80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f895fe59c10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f895fe59da0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f895fe58020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f895fe581b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f895fe58340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f895fe584d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f895fe58660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f895fe587f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f895fe58a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f895fe58c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f895fe58da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f895fe57020"/>
        <function-ref name="isUart" scoped="" ref="0x7f895fe571b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f895fe57340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f895fe574d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f895fe57660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f895fe577f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f895fe57980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f895fe57b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f895fe57ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f895fe56220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f895fe563b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f895fe56540"/>
        <function-ref name="tx" scoped="" ref="0x7f895fe566d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f895fe56860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f895fe569f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f895fe56b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f895fe56d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f895fe55020"/>
        <function-ref name="rx" scoped="" ref="0x7f895fe551b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f895fe55340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f895fe554d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f895fe55660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f895fe557f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f895fe55980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f895fe53cb0" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f895fe53cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fe520a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fe52230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f895fe523c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fe52550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fe526e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f895fe52870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fe52a00"/>
        <function-ref name="get" scoped="" ref="0x7f895fe52b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f895fe52d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f895fe51020"/>
        <function-ref name="set" scoped="" ref="0x7f895fe511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f895fe51340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f895fe514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f895fe51760"/>
        <function-ref name="clr" scoped="" ref="0x7f895fe518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f895fe60020" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f895fe60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f895fe603a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f895fe60530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f895fe606c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f895fe60850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f895fe609e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f895fe60b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f895fe60d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f895fe5f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895fe5f1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f895fe5f340"/>
        <function-ref name="getData" scoped="" ref="0x7f895fe5f4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f895fe5f660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f895fe5f7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f895fe5fa80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f895fe5fc10"/>
        <function-ref name="getIV" scoped="" ref="0x7f895fe5fda0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f895fe5e020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f895fe5e1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f895fe5e340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f895fe5e4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f895fe5e660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f895fe5e7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f895fe5e980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f895fe5eb10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f895fe5eca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f895fe5d220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f895fe5d3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f895fe5d540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f895fe5d6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f895fe5d860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f895fe5d9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f895fe5db80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f895fe5dd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f895fe5c020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f895fe5c1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f895fe5c340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f895fe5c4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f895fe5c660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f895fe5c7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f895fe5c980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f895fe5cb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f895fe5cca0"/>
        <function-ref name="setData" scoped="" ref="0x7f895fe5ce30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f895fe5b020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f895fe5b1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f895fe5b340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f895fe5b4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f895fe5b660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f895fe5b7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f895fe5bd80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f895fe5a020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f895fe5a1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f895fe5a340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f895fe5a4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f895fe5a660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f895fe5a7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f895fe5a980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f895fe5ab10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f895fe5aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f895fe55d40" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f895fe55d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fe540e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fe54270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f895fe54400"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fe54590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fe54720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f895fe548b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fe54a40"/>
        <function-ref name="get" scoped="" ref="0x7f895fe54bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f895fe54d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f895fe53020"/>
        <function-ref name="set" scoped="" ref="0x7f895fe531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f895fe53340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f895fe534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f895fe53760"/>
        <function-ref name="clr" scoped="" ref="0x7f895fe538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f895fd3ec60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fd3ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3d210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f895fd49da0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f895fd49da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd47180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f895fd41b50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fd41b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd40020"/>
        <function-ref name="write" scoped="" ref="0x7f895fd401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f895fd3c670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fd3c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f895fd35e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f895fd35e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd33210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f895fd3ce50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f895fd3ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3a210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f895fd282f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f895fd282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd28670"/>
        <function-ref name="write" scoped="" ref="0x7f895fd28800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f895fd2a2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f895fd2a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2a670"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f895fd46120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f895fd46120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd464a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f895fd30670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f895fd30670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd309f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd30b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f895fd2b2f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fd2b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2b670"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f895fd40c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f895fd40c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3f020"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f895fd3fc60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f895fd3fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3e020"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f895fd36670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f895fd36670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd369f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd36b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f895fd38e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f895fd38e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd37210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f895fd3a670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f895fd3a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f895fd4a760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fd4a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f895fd4aae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f895fd4ac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f895fd4ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f895fd45aa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fd45aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd45e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f895fd44120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f895fd44120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd445a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f895fd2fa70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fd2fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2fdf0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f895fd44870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f895fd44870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd44bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f895fd2bad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fd2bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2be50"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f895fd46dc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fd46dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd45180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f895fd31e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f895fd31e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd30210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f895fd3f480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fd3f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3f800"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f895fd40480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fd40480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd40800"/>
        <function-ref name="write" scoped="" ref="0x7f895fd40990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f895fd49750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f895fd49750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd49ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f895fd32e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fd32e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd31210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f895fd33670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f895fd33670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd339f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd33b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f895fd31670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fd31670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd319f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd31b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f895fd29ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f895fd29ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd29e50"/>
        <function-ref name="write" scoped="" ref="0x7f895fd28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f895fd2aad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f895fd2aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2ae50"/>
        <function-ref name="write" scoped="" ref="0x7f895fd29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f895fd37670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f895fd37670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd379f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd37b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f895fd33e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f895fd33e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd32210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f895fd2cad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f895fd2cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2ce50"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f895fd39670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f895fd39670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd399f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd39b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f895fd28ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f895fd28ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fd28e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fd27020"/>
        <function-ref name="write" scoped="" ref="0x7f895fd271b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fd27340"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fd274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f895fd49100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f895fd49100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd49480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f895fd41370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f895fd41370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd416f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd41880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f895fd3e480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fd3e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3e800"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f895fd36e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f895fd36e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd35210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f895fd3ae50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f895fd3ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd39210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f895fd35670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f895fd35670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd359f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd35b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f895fd3d670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f895fd3d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f895fd47450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f895fd47450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd477d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f895fd3de50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fd3de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd3c210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd3c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895fd4ba80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895fd4ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fd4be00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fd4a020"/>
        <function-ref name="request" scoped="" ref="0x7f895fd4a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f895fd4a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fd4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f895fd43020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f895fd43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f895fd43cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f895fd43cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd410a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f895fd2c2f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f895fd2c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2c670"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f895fd2ead0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f895fd2ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2ee50"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f895fd45450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fd45450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd457d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f895fd2e2f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fd2e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2e670"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f895fd292f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f895fd292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd29670"/>
        <function-ref name="write" scoped="" ref="0x7f895fd29800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f895fd37e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fd37e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd36210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f895fd32670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f895fd32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd329f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd32b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f895fd47aa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f895fd47aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd47e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f895fd46770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f895fd46770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd46af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f895fd39e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f895fd39e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd38210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f895fd43670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f895fd43670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd439f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f895fd38670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f895fd38670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd389f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd38b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f895fd30e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f895fd30e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd2f610"/>
        <function-ref name="write" scoped="" ref="0x7f895fd2f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f895fd277a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f895fd277a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fd27b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fd27cb0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd27e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fd25020"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fd251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f895fd11c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fd11c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd10210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f895fd1cda0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f895fd1cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd1b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f895fd15b50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fd15b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd14020"/>
        <function-ref name="write" scoped="" ref="0x7f895fd141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f895fd0f670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fd0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f895fd08e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f895fd08e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd07210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f895fd0fe50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f895fd0fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0e210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f895fcfb2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f895fcfb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcfb670"/>
        <function-ref name="write" scoped="" ref="0x7f895fcfb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f895fcfe2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f895fcfe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcfe670"/>
        <function-ref name="write" scoped="" ref="0x7f895fcfe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f895fd1a120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f895fd1a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd1a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f895fd03670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f895fd03670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd039f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd03b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f895fcff2f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fcff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcff670"/>
        <function-ref name="write" scoped="" ref="0x7f895fcff800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f895fd14c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f895fd14c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd13020"/>
        <function-ref name="write" scoped="" ref="0x7f895fd131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f895fd13c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f895fd13c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd11020"/>
        <function-ref name="write" scoped="" ref="0x7f895fd111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f895fd09670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f895fd09670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd099f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd09b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f895fd0ce50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f895fd0ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0a210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f895fd0e670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f895fd0e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f895fd1d760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fd1d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f895fd1dae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f895fd1dc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f895fd1de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f895fd19aa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fd19aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd19e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f895fd17120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f895fd17120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd175a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f895fd02a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fd02a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd02df0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f895fd17870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f895fd17870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd17bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f895fcffad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fcffad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcffe50"/>
        <function-ref name="write" scoped="" ref="0x7f895fcfe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f895fd1adc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fd1adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd19180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f895fd04e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f895fd04e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd03210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f895fd13480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fd13480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd13800"/>
        <function-ref name="write" scoped="" ref="0x7f895fd13990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f895fd14480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fd14480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd14800"/>
        <function-ref name="write" scoped="" ref="0x7f895fd14990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f895fd1c750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f895fd1c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd1cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f895fd06e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fd06e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd04210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f895fd07670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f895fd07670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd079f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd07b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f895fd04670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fd04670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd049f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd04b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f895fcfcad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f895fcfcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcfce50"/>
        <function-ref name="write" scoped="" ref="0x7f895fcfb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f895fcfead0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f895fcfead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcfee50"/>
        <function-ref name="write" scoped="" ref="0x7f895fcfc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f895fd0a670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f895fd0a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f895fd07e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f895fd07e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd06210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f895fd00ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f895fd00ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd00e50"/>
        <function-ref name="write" scoped="" ref="0x7f895fcff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f895fd0d670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f895fd0d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f895fcfbad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f895fcfbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fcfbe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fcfa020"/>
        <function-ref name="write" scoped="" ref="0x7f895fcfa1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fcfa340"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fcfa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f895fd1c100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f895fd1c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd1c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f895fd15370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f895fd15370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd156f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd15880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f895fd11480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fd11480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd11800"/>
        <function-ref name="write" scoped="" ref="0x7f895fd11990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f895fd09e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f895fd09e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd08210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f895fd0ee50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f895fd0ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0d210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f895fd08670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f895fd08670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd089f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd08b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f895fd10670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f895fd10670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd109f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd10b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f895fd1b450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f895fd1b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd1b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f895fd10e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fd10e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0f210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895fd1e9e0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895fd1e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fd1ed60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fd1d020"/>
        <function-ref name="request" scoped="" ref="0x7f895fd1d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f895fd1d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fd1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f895fd16020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f895fd16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f895fd16cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f895fd16cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd150a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f895fd002f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f895fd002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd00670"/>
        <function-ref name="write" scoped="" ref="0x7f895fd00800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f895fd01ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f895fd01ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd01e50"/>
        <function-ref name="write" scoped="" ref="0x7f895fd00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f895fd19450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fd19450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd197d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f895fd012f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fd012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd01670"/>
        <function-ref name="write" scoped="" ref="0x7f895fd01800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f895fcfc2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f895fcfc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcfc670"/>
        <function-ref name="write" scoped="" ref="0x7f895fcfc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f895fd0ae50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fd0ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd09210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f895fd06670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f895fd06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd069f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd06b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f895fd1baa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f895fd1baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd1be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f895fd1a770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f895fd1a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd1aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f895fd0de50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f895fd0de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0c210"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f895fd16670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f895fd16670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fd169f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f895fd0c670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f895fd0c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd0c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fd0cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f895fd03e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f895fd03e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fd02610"/>
        <function-ref name="write" scoped="" ref="0x7f895fd027a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f895fcfa7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f895fcfa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fcfab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fcfacb0"/>
        <function-ref name="write" scoped="" ref="0x7f895fcfae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fcf9020"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fcf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f895fcf2b20" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f895fcf2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f895fcef020"/>
        <function-ref name="changed" scoped="" ref="0x7f895fcef1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f895fcef340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f895fcef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f895fcf1d20" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f895fcf1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f895fcdb0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f895fcd6310" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f895fcd6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f895fcd6690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f895fcd3880" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f895fcd3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcd3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f895fcc9020" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f895fcc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcc93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f895fcbfbd0" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f895fcbfbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcc2020"/>
        <function-ref name="write" scoped="" ref="0x7f895fcc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f895fcc2530" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f895fcc2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f895fcc28b0"/>
        <function-ref name="stop" scoped="" ref="0x7f895fcc2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f895fcc3140" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f895fcc3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcc34c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f895fcc8c50" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f895fcc8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcae020"/>
        <function-ref name="write" scoped="" ref="0x7f895fcae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f895fcae540" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f895fcae540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fcae8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fcaea50"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fcaebe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fcaed70"/>
        <function-ref name="get" scoped="" ref="0x7f895fcad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fcad1b0"/>
        <function-ref name="set" scoped="" ref="0x7f895fcad340"/>
        <function-ref name="clr" scoped="" ref="0x7f895fcad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f895fca5910" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f895fca5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961266290"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8961266600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f895fca8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f895fcaa150" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f895fcaa150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fcaa4d0"/>
        <function-ref name="write" scoped="" ref="0x7f895fcaa660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f895fcaa9f0" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f895fcaa9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fcaad70"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fca9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fca91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fca9340"/>
        <function-ref name="get" scoped="" ref="0x7f895fca94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fca9660"/>
        <function-ref name="set" scoped="" ref="0x7f895fca97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f895fca9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f895fcacc90" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f895fcacc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961266290"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8961266600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f895fc83ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f895fc80a90" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f895fc80a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961266290"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8961266600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f895fc7f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f895fc70020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f895fc70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961266290"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8961266600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895fc70e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895fc6f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895fc6f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f895fc6fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f895fc6b530" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f895fc6b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961266290"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8961266600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895fc693d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895fc69d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895fc69890"/>
        <function-ref name="overflow" scoped="" ref="0x7f895fc68260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f895fc63020" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f895fc63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895fc633a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f895fc63530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f895fc636c0"/>
        <function-ref name="get" scoped="" ref="0x7f895fc63850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f895fc639e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895fc63b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f895fc63d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895fc62020"/>
        <function-ref name="overflow" scoped="" ref="0x7f895fc621b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f895fc62340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f895fc624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f895fc67e50" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f895fc67e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961266290"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8961266600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895fc66ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895fc64670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895fc641b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f895fc64b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f895fcaf590" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f895fcaf590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fcaf910"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fcafaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fcafc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fcafdc0"/>
        <function-ref name="get" scoped="" ref="0x7f895fc5e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fc5e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f895fc5e340"/>
        <function-ref name="clr" scoped="" ref="0x7f895fc5e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f895fc5cc50" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f895fc5cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fc5b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fc5b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f895fc5b340"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fc5b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fc5b660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f895fc5b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fc5b980"/>
        <function-ref name="get" scoped="" ref="0x7f895fc5bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f895fc5bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f895fc5be30"/>
        <function-ref name="set" scoped="" ref="0x7f895fc5a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f895fc5a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f895fc5a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f895fc5a5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f895fc5a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f895fc5d9e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f895fc5d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fc5dd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fc5c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fc5c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fc5c340"/>
        <function-ref name="get" scoped="" ref="0x7f895fc5c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fc5c660"/>
        <function-ref name="set" scoped="" ref="0x7f895fc5c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f895fc5c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f895fc5fa10" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f895fc5fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f895fc5fd90"/>
        <function-ref name="stop" scoped="" ref="0x7f895fc55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f895fc46cb0" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f895fc46cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f895fc450a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f895fc45230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f895fc453c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f895fc45550"/>
        <function-ref name="setCca" scoped="" ref="0x7f895fc456e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f895fc45870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f895fc40990" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f895fc40990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f895fc40d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f895fc46020" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f895fc46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895fc463a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895fc46530"/>
        <function-ref name="modify" scoped="" ref="0x7f895fc466c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895fc46850"/>
        <function-ref name="resend" scoped="" ref="0x7f895fc469e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f895fc496c0" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f895fc496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f895fc49a40"/>
        <function-ref name="stop" scoped="" ref="0x7f895fc49bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f895fc43150" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f895fc43150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f895fc434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f895fc37970" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f895fc37970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f895fc37cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f895fc37e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f895fc36030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f895fc361c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f895fc36350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f895fc364e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f895fc2e950" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f895fc2e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f895fc2c020"/>
        <function-ref name="clear" scoped="" ref="0x7f895fc2c750"/>
        <function-ref name="isValid" scoped="" ref="0x7f895fc2d780"/>
        <function-ref name="set" scoped="" ref="0x7f895fc2ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f895fc15020" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fc15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fc153a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fc15530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f895fc15890" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f895fc15890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fc15c10"/>
        <function-ref name="write" scoped="" ref="0x7f895fc15da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f895fc36900" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f895fc36900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f895fc36c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f895fc18530" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f895fc18530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fc188b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f895fc29880" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f895fc29880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f895fc29c00"/>
        <function-ref name="disable" scoped="" ref="0x7f895fc29d90"/>
        <function-ref name="captured" scoped="" ref="0x7f895fc28020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f895fc281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f895fc35ae0" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f895fc35ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895fc31390"/>
        <function-ref name="fired" scoped="" ref="0x7f895fc32360"/>
        <function-ref name="startAt" scoped="" ref="0x7f895fc32ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895fc32820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f895fc31850"/>
        <function-ref name="start" scoped="" ref="0x7f895fc33970"/>
        <function-ref name="stop" scoped="" ref="0x7f895fc33e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f895fc31d00" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f895fc31d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f895fc300a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f895fc30230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f895fc303c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f895fc30550"/>
        <function-ref name="getPower" scoped="" ref="0x7f895fc306e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f895fc30870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f895fc1b550" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fc1b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fc1b8d0"/>
        <function-ref name="write" scoped="" ref="0x7f895fc1ba60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f895fc1be00" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f895fc1be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fc191c0"/>
        <function-ref name="write" scoped="" ref="0x7f895fc19350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f895fc0fd40" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f895fc0fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895fc120e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f895fc12270"/>
        <function-ref name="sfd" scoped="" ref="0x7f895fc12400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f895fc38bc0" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f895fc38bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895fc37020"/>
        <function-ref name="cancel" scoped="" ref="0x7f895fc371b0"/>
        <function-ref name="modify" scoped="" ref="0x7f895fc37340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895fc374d0"/>
        <function-ref name="resend" scoped="" ref="0x7f895fc37660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f895fc1fd10" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fc1fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f895fc1e0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f895fc1e270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f895fc1e400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f895fc18c60" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fc18c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fc17020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f895fc22820" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f895fc22820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fc22ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fc22d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fc21020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fc211b0"/>
        <function-ref name="get" scoped="" ref="0x7f895fc21340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fc214d0"/>
        <function-ref name="set" scoped="" ref="0x7f895fc21660"/>
        <function-ref name="clr" scoped="" ref="0x7f895fc217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895fc39c60" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895fc39c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895fc38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f895fc30bb0" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fc30bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f895fc2e020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f895fc2e1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f895fc2e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f895fc23be0" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f895fc23be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895fc29020"/>
        <function-ref name="isSet" scoped="" ref="0x7f895fc291b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895fc29340"/>
        <function-ref name="set" scoped="" ref="0x7f895fc294d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f895fc173e0" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fc173e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fc17960"/>
        <function-ref name="write" scoped="" ref="0x7f895fc17af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f895fc1f020" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f895fc1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fc1f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fc1f530"/>
        <function-ref name="request" scoped="" ref="0x7f895fc1f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f895fc1f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fc1f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f895fc28500" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f895fc28500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fc28980"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fc28b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fc28ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fc28e30"/>
        <function-ref name="get" scoped="" ref="0x7f895fc22020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fc221b0"/>
        <function-ref name="set" scoped="" ref="0x7f895fc22340"/>
        <function-ref name="clr" scoped="" ref="0x7f895fc224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f895fc14130" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f895fc14130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fc144b0"/>
        <function-ref name="write" scoped="" ref="0x7f895fc14640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f895fc149c0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f895fc149c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fc14d40"/>
        <function-ref name="write" scoped="" ref="0x7f895fc13020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f895fc196d0" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f895fc196d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fc19a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f895fc21b40" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f895fc21b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fc20020"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fc201b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fc20340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fc204d0"/>
        <function-ref name="get" scoped="" ref="0x7f895fc20660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fc207f0"/>
        <function-ref name="set" scoped="" ref="0x7f895fc20980"/>
        <function-ref name="clr" scoped="" ref="0x7f895fc20b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f895fc126c0" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f895fc126c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f895fc12a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f895fc12bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f895fc12d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f895fc11020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f895fc111b0"/>
        <function-ref name="get" scoped="" ref="0x7f895fc11340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f895fc114d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f895fc11b10"/>
        <function-ref name="set" scoped="" ref="0x7f895fc11660"/>
        <function-ref name="led0On" scoped="" ref="0x7f895fc117f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f895fc11980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f895fc165e0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fc165e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fc16960"/>
        <function-ref name="write" scoped="" ref="0x7f895fc16af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f895fc38320" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f895fc38320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f895fc386a0"/>
        <function-ref name="stop" scoped="" ref="0x7f895fc38830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f895fc1e780" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f895fc1e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fc1eb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fc1ec90"/>
        <function-ref name="write" scoped="" ref="0x7f895fc1ee20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fc1b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fc1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f895fc19de0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f895fc19de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fc18180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f895fc17e80" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f895fc17e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fc16220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f895fc350f0" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f895fc350f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f895fc35470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f895fb74c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fb74c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb73210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f895fb7e020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f895fb7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f895fb78c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fb78c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb77020"/>
        <function-ref name="write" scoped="" ref="0x7f895fb771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f895fb72670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fb72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb729f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb72b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f895fb6be50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f895fb6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6a210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f895fb72e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f895fb72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb71210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f895fb5e2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f895fb5e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb5e670"/>
        <function-ref name="write" scoped="" ref="0x7f895fb5e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f895fb612f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f895fb612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb61670"/>
        <function-ref name="write" scoped="" ref="0x7f895fb61800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f895fb7d370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f895fb7d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f895fb66670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f895fb66670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb669f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb66b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f895fb622f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fb622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb62670"/>
        <function-ref name="write" scoped="" ref="0x7f895fb62800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f895fb77c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f895fb77c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb76020"/>
        <function-ref name="write" scoped="" ref="0x7f895fb761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f895fb76c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f895fb76c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb74020"/>
        <function-ref name="write" scoped="" ref="0x7f895fb741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f895fb6c670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f895fb6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f895fb6fe50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f895fb6fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6d210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f895fb71670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f895fb71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb719f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb71b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f895fb808f0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fb808f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f895fb80c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f895fb80e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f895fb7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f895fb7cd00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fb7cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f895fb7a370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f895fb7a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f895fb65a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fb65a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb65df0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f895fb7aac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f895fb7aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f895fb62ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fb62ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb62e50"/>
        <function-ref name="write" scoped="" ref="0x7f895fb61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f895fb7c060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fb7c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f895fb67e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f895fb67e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb66210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f895fb76480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fb76480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb76800"/>
        <function-ref name="write" scoped="" ref="0x7f895fb76990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f895fb77480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fb77480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb77800"/>
        <function-ref name="write" scoped="" ref="0x7f895fb77990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f895fb7f940" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f895fb7f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f895fb69e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fb69e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb67210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f895fb6a670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f895fb6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f895fb67670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fb67670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb679f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb67b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f895fb5fad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f895fb5fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb5fe50"/>
        <function-ref name="write" scoped="" ref="0x7f895fb5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f895fb61ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f895fb61ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb61e50"/>
        <function-ref name="write" scoped="" ref="0x7f895fb5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f895fb6d670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f895fb6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f895fb6ae50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f895fb6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb69210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f895fb63ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f895fb63ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb63e50"/>
        <function-ref name="write" scoped="" ref="0x7f895fb62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f895fb70670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f895fb70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb709f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f895fb5ead0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f895fb5ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fb5ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fb5d020"/>
        <function-ref name="write" scoped="" ref="0x7f895fb5d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fb5d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fb5d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f895fb7f2f0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f895fb7f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f895fb78490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f895fb78490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb78810"/>
        <function-ref name="write" scoped="" ref="0x7f895fb789a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f895fb74480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fb74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb74800"/>
        <function-ref name="write" scoped="" ref="0x7f895fb74990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f895fb6ce50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f895fb6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6b210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f895fb71e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f895fb71e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb70210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f895fb6b670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f895fb6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f895fb73670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f895fb73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb739f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb73b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f895fb7e670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f895fb7e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f895fb73e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fb73e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb72210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895fb81c30" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895fb81c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fb80020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fb801b0"/>
        <function-ref name="request" scoped="" ref="0x7f895fb80340"/>
        <function-ref name="granted" scoped="" ref="0x7f895fb804d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fb80660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f895fb79160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f895fb79160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb794e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f895fb79e00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f895fb79e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb781c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f895fb632f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f895fb632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb63670"/>
        <function-ref name="write" scoped="" ref="0x7f895fb63800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f895fb64ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f895fb64ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb64e50"/>
        <function-ref name="write" scoped="" ref="0x7f895fb63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f895fb7c6b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fb7c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f895fb642f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fb642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb64670"/>
        <function-ref name="write" scoped="" ref="0x7f895fb64800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f895fb5f2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f895fb5f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb5f670"/>
        <function-ref name="write" scoped="" ref="0x7f895fb5f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f895fb6de50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fb6de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6c210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f895fb69670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f895fb69670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb699f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb69b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f895fb7ecc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f895fb7ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f895fb7d9c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f895fb7d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb7dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f895fb70e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f895fb70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6f210"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f895fb797b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f895fb797b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb79b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f895fb6f670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f895fb6f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb6f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb6fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f895fb66e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f895fb66e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb65610"/>
        <function-ref name="write" scoped="" ref="0x7f895fb657a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f895fb5d7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f895fb5d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fb5db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fb5dcb0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb5de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fb5c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fb5c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f895fb51df0" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f895fb51df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895fb4e1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f895fb4e350"/>
        <function-ref name="sfd" scoped="" ref="0x7f895fb4e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f895fb4e7c0" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f895fb4e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895fb4eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f895fb4d020" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f895fb4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f895fb4d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f895fb515c0" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f895fb515c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f895fb51940"/>
        <function-ref name="stop" scoped="" ref="0x7f895fb51ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f895fb45380" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f895fb45380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fb45700"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fb45890"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fb45a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fb45bb0"/>
        <function-ref name="get" scoped="" ref="0x7f895fb45d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fb44020"/>
        <function-ref name="set" scoped="" ref="0x7f895fb441b0"/>
        <function-ref name="clr" scoped="" ref="0x7f895fb44340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f895fb3eb90" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f895fb3eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f895fb3d020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f895fb3d1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f895fb3d340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f895fb3d4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f895fb3d660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f895fb3d7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f895fb3d980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f895fb3db10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f895fb3dca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f895fb3de30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f895fb3c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f895fb3c1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f895fb3c340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f895fb3c5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f895fb3c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f895fb279d0" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f895fb279d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f895fb27d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f895fb26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f895fb3cd70" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f895fb3cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f895fb3a330"/>
        <function-ref name="clear" scoped="" ref="0x7f895fb3aa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f895fb3bba0"/>
        <function-ref name="set" scoped="" ref="0x7f895fb38210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f895fb446b0" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f895fb446b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fb44a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fb44bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fb44d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fb43020"/>
        <function-ref name="get" scoped="" ref="0x7f895fb431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fb43340"/>
        <function-ref name="set" scoped="" ref="0x7f895fb434d0"/>
        <function-ref name="clr" scoped="" ref="0x7f895fb43660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f895fb37cb0" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fb37cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb360a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb36230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f895fb36590" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f895fb36590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb36910"/>
        <function-ref name="write" scoped="" ref="0x7f895fb36aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f895fb356d0" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f895fb356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb35a50"/>
        <function-ref name="write" scoped="" ref="0x7f895fb35be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f895fb3f330" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f895fb3f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f895fb3f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f895fb3f840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f895fb3f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f895fb3fb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f895fb3fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f895fb3fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f895fb49550" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f895fb49550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895fb498d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f895fb49a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f895fb49bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f895fb403a0" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f895fb403a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb40720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f895fb46020" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f895fb46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f895fb463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f895fb46530"/>
        <function-ref name="toggle" scoped="" ref="0x7f895fb466c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f895fb46850"/>
        <function-ref name="get" scoped="" ref="0x7f895fb469e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f895fb46b70"/>
        <function-ref name="set" scoped="" ref="0x7f895fb46d00"/>
        <function-ref name="clr" scoped="" ref="0x7f895fb45020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f895fb34020" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fb34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb343a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb34530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895fb4a620" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895fb4a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895fb4a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f895fb3e1e0" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fb3e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f895fb3e560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f895fb3e6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f895fb3e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f895fb47020" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f895fb47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895fb473a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f895fb426e0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f895fb426e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fb42a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fb42bf0"/>
        <function-ref name="request" scoped="" ref="0x7f895fb42d80"/>
        <function-ref name="granted" scoped="" ref="0x7f895fb41020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fb411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f895fb36e00" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f895fb36e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb351c0"/>
        <function-ref name="write" scoped="" ref="0x7f895fb35350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f895fb41530" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f895fb41530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fb418b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fb41a40"/>
        <function-ref name="write" scoped="" ref="0x7f895fb41bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fb41d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fb40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f895fb348b0" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f895fb348b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb34e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f895fb477c0" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f895fb477c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f895fb47b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f895fb33150" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f895fb33150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f895fb334d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f895fb33660"/>
        <function-ref name="led1On" scoped="" ref="0x7f895fb337f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f895fb33980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f895fb33b10"/>
        <function-ref name="get" scoped="" ref="0x7f895fb33ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f895fb33e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f895fb324d0"/>
        <function-ref name="set" scoped="" ref="0x7f895fb32020"/>
        <function-ref name="led0On" scoped="" ref="0x7f895fb321b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f895fb32340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f895fb373e0" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fb373e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fb37760"/>
        <function-ref name="write" scoped="" ref="0x7f895fb378f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f895fb38b10" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f895fb38b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f895fb43a50" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f895fb43a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f895fb43dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f895fb42020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f895fb421b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f895fb42340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f895fb40ad0" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fb40ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fb3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f895fb4aca0" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f895fb4aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f895fb490a0"/>
        <function-ref name="stop" scoped="" ref="0x7f895fb49230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f895fac6a70" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f895fac6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f895fac6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f895faca660" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f895faca660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f895faca9e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f895facab70"/>
        <function-ref name="getRssi" scoped="" ref="0x7f895facad00"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f895fac7020"/>
        <function-ref name="getPower" scoped="" ref="0x7f895fac71b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f895fac7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f895fac5550" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f895fac5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f895fac4b00"/>
        <function-ref name="clear" scoped="" ref="0x7f895fac32a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f895fac43d0"/>
        <function-ref name="set" scoped="" ref="0x7f895fac39d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f895fac60c0" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fac60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f895fac6440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f895fac65d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f895fac6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f895fabd480" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f895fabd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895fabd800"/>
        <function-ref name="isSet" scoped="" ref="0x7f895fabd990"/>
        <function-ref name="cancel" scoped="" ref="0x7f895fabdb20"/>
        <function-ref name="set" scoped="" ref="0x7f895fabdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f895fac1660" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f895fac1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f895fac0ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f895fabf460"/>
        <function-ref name="isValid" scoped="" ref="0x7f895fac05b0"/>
        <function-ref name="set" scoped="" ref="0x7f895fabfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f895fac76e0" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f895fac76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f895fac7a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f895fac7bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f895fac7d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f895fab7020" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f895fab7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f895fab73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f895fabcd10" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f895fabcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f895fab90e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f895fab9270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f895fab9400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f895fab9590"/>
        <function-ref name="getPower" scoped="" ref="0x7f895fab9720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f895fab98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f895faae4a0" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f895faae4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895faae820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f895faae9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895faaeb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895faaecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f895faaee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f895fab7a80" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f895fab7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f895fab4020"/>
        <function-ref name="clear" scoped="" ref="0x7f895fab4750"/>
        <function-ref name="isValid" scoped="" ref="0x7f895fab68d0"/>
        <function-ref name="set" scoped="" ref="0x7f895fab4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f895fab8640" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895fab8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f895fab89c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f895fab8b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f895fab8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f895faaf8b0" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f895faaf8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895faafc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f895faafdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895faae020"/>
        <function-ref name="set" scoped="" ref="0x7f895faae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f895faad3b0" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f895faad3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895faac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f895faac6e0" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f895faac6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895faaa3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f895fab3af0" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f895fab3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f895fab00d0"/>
        <function-ref name="clear" scoped="" ref="0x7f895fab0800"/>
        <function-ref name="isValid" scoped="" ref="0x7f895fab2970"/>
        <function-ref name="set" scoped="" ref="0x7f895faaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f895fab9c50" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f895fab9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f895fab8020"/>
        <function-ref name="noAck" scoped="" ref="0x7f895fab81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f895fab8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f895fa5ccf0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f895fa5ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895fa5b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f895fa59020" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f895fa59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8961267aa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8961267e10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f895fa59e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f895fa58800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f895fa58340"/>
        <function-ref name="overflow" scoped="" ref="0x7f895fa58cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f895fa550b0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f895fa550b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f89617a0ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8961267660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f895fa51630"/>
        <function-ref name="fired" scoped="" ref="0x7f895fa54b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f895fa52920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f895fa524a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f895fa50020"/>
        <function-ref name="gett0" scoped="" ref="0x7f895fa51ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f895fa52020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f895fa55ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f895fa51020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f895fa541b0"/>
        <function-ref name="stop" scoped="" ref="0x7f895fa54680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f895fa40620" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f895fa40620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa40ba0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa40d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f895fa4a940" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f895fa4a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa4acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f895fa43620" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f895fa43620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa439a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa43b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f895fa3d060" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f895fa3d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3d3e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f895fa36840" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f895fa36840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa36bc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa36d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f895fa3d840" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f895fa3d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3dbc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f895fa2bc60" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f895fa2bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa29020"/>
        <function-ref name="write" scoped="" ref="0x7f895fa291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f895fa2dc60" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f895fa2dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2c020"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f895fa49cc0" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f895fa49cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa480a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f895fa32060" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f895fa32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa323e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa32570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f895fa2ec60" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f895fa2ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2d020"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f895fa42620" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f895fa42620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa429a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa42b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f895fa41620" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f895fa41620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa419a0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa41b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f895fa38060" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f895fa38060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa383e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa38570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f895fa3a840" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f895fa3a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3abc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f895fa3c060" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f895fa3c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3c3e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f895fa4c2b0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f895fa4c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f895fa4c630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f895fa4c7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f895fa4c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f895fa476b0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f895fa476b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa47a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f895fa47d00" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f895fa47d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa461c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f895fa30480" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f895fa30480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa30800"/>
        <function-ref name="write" scoped="" ref="0x7f895fa30990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f895fa46490" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f895fa46490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa46810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f895fa2d480" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f895fa2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2d800"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f895fa489c0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f895fa489c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa48d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f895fa33840" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f895fa33840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa33bc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa33d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f895fa42e00" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f895fa42e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa411c0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa41350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f895fa43e00" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f895fa43e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa421c0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa42350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f895fa4a2f0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f895fa4a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa4a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f895fa34840" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f895fa34840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa34bc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa34d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f895fa35060" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f895fa35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa353e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa35570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f895fa33060" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f895fa33060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa333e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa33570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f895fa2b480" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f895fa2b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2b800"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f895fa2c480" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f895fa2c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2c800"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f895fa39060" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f895fa39060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa393e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa39570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f895fa35840" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f895fa35840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa35bc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa35d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f895fa2e480" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f895fa2e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2e800"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f895fa3b060" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f895fa3b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3b3e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f895fa29480" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f895fa29480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fa29800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fa29990"/>
        <function-ref name="write" scoped="" ref="0x7f895fa29b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fa29cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fa29e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f895fa4cc20" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f895fa4cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f895fa44e00" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f895fa44e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa431c0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa43350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f895fa41e00" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f895fa41e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa401c0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa40350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f895fa38840" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f895fa38840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa38bc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa38d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f895fa3c840" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f895fa3c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3cbc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f895fa36060" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f895fa36060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa363e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa36570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f895fa3f060" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f895fa3f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3f3e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f895fa49020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f895fa49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f895fa3f840" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f895fa3f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3fbc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895fa4d520" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895fa4d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895fa4d8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895fa4da30"/>
        <function-ref name="request" scoped="" ref="0x7f895fa4dbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f895fa4dd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895fa4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f895fa46ae0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f895fa46ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa46e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f895fa447b0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f895fa447b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa44b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f895fa2fc60" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f895fa2fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2e020"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f895fa2f480" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f895fa2f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2f800"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f895fa47060" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f895fa47060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa473e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f895fa30c60" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f895fa30c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2f020"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f895fa2cc60" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f895fa2cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa2b020"/>
        <function-ref name="write" scoped="" ref="0x7f895fa2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f895fa39840" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f895fa39840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa39bc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa39d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f895fa34060" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f895fa34060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa343e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa34570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f895fa49670" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f895fa49670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa499f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f895fa48370" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f895fa48370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa486f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f895fa3b840" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f895fa3b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3bbc0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f895fa44160" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f895fa44160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f895fa444e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f895fa3a060" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f895fa3a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa3a3e0"/>
        <function-ref name="write" scoped="" ref="0x7f895fa3a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f895fa32840" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f895fa32840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f895fa30020"/>
        <function-ref name="write" scoped="" ref="0x7f895fa301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f895fa28160" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f895fa28160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f895fa284e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f895fa28670"/>
        <function-ref name="write" scoped="" ref="0x7f895fa28800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f895fa28990"/>
        <function-ref name="readDone" scoped="" ref="0x7f895fa28b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f895f9fea20" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f895f9fea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f895f9feda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f895f9fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f895f9fd920" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f895f9fd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f9fe560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895fa03990" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895fa03990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895fa03d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f895f9f4a20" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f895f9f4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f895f9f4da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f895f9f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f895f9f5940" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f895f9f5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f9f4560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f9f5080" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f9f5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f9f5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f895fa01aa0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f895fa01aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f895fa01e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f895f9f6020"/>
        <function-ref name="isState" scoped="" ref="0x7f895f9f61b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f895f9f6340"/>
        <function-ref name="requestState" scoped="" ref="0x7f895f9f64d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f895f9f6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f895f9dc020" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f895f9dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f9dc3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f9dc530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f9dc6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f9dc850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f9dc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f895f9de220" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f895f9de220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f9de5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f9de730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f9de8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f9dea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f9debe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f895f9d8e60" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f895f9d8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f9d7210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f9d73a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f9d7530"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f9d76c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f9d7850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f895f9dba10" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f895f9dba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f9dbd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f9d8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f9d81b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f9d8340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f9d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f895f9d68f0" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f895f9d68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f895f9d6c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f895f9d6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f9d8750" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f9d8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f9d8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f895f9d5170" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895f9d5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f895f9d54f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f895f9d5680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f895f9d5810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f895f9d7ae0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f895f9d7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f895f9d7e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f895f9d6020"/>
        <function-ref name="isState" scoped="" ref="0x7f895f9d61b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f895f9d6340"/>
        <function-ref name="requestState" scoped="" ref="0x7f895f9d64d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f895f9d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f895f9d9690" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f895f9d9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f895f9d9a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f895f9d9ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f895f9d9d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f895f9c4020"/>
        <function-ref name="requestState" scoped="" ref="0x7f895f9c41b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f895f9c4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f895f9be950" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f895f9be950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f9becd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f895f9c1a90" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f895f9c1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f9c1e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f895f9be200" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f895f9be200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f9be580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f895f9b93f0" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f895f9b93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f9b9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f9bab50" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f9bab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f9b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f895f9bde20" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f895f9bde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f9ba1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f895f9b9a70" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895f9b9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f895f9b9df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f895f9b8020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f895f9b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f895f9ba550" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f895f9ba550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f9ba8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f895f98a020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f895f98a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f98a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f895f98a6b0" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f895f98a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f98aa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f98abc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f98ad50"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f989020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f9891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f895f98f8e0" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f895f98f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f98fc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f98fdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f98d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f98d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f98d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f895f98dc90" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f895f98dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f98c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f98c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f98c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f98c550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f98c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f895f98d5e0" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f895f98d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f98d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895f990be0" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895f990be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f98f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f98f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f895f98f340"/>
        <function-ref name="granted" scoped="" ref="0x7f895f98f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f98f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f895f98ca50" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f895f98ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f98cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f895f98b170" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f895f98b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f98b4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f895f98b680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f98b810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f98b9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f895f98bb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f895f980d70" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f895f980d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f97f180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f97f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f97f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f97f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f97f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f895f97fb10" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f895f97fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f97e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f895f951db0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f895f951db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f895f950180"/>
        <function-ref name="runTask" scoped="" ref="0x7f895f950310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f895f97e2f0" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f895f97e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f895f97e670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f895f97e800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f895f97e990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f895f97eb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f895f97ecb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f895f97ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f895f983a20" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f895f983a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f983da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f981020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f9811b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f981340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f9814d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f895f97db70" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f895f97db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f895f97c020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f895f97c1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f895f97c340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f895f97c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f895f97d170" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895f97d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f895f97d4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f895f97d680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f895f97d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f895f983370" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f895f983370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f9836f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f895f9857b0" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f895f9857b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f985b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f985cc0"/>
        <function-ref name="request" scoped="" ref="0x7f895f985e50"/>
        <function-ref name="granted" scoped="" ref="0x7f895f984020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f9841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f895f9844d0" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f895f9844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f984850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f9849e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f984b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f984d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f983020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f895f981840" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f895f981840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f981bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f895f980020" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f895f980020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f9803a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f895f980530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f9806c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f980850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f895f9809e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f895f931dd0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f895f931dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f895f930180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f895f930410" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f895f930410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f895f930790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f895f930920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f895f930ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f895f930c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f895f923b80" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f895f923b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f895f922020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f895f9221b0"/>
        <function-ref name="start" scoped="" ref="0x7f895f922340"/>
        <function-ref name="stop" scoped="" ref="0x7f895f9224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f895f921860" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f895f921860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f921be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f921d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f920020"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f9201b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f920340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f895f920690" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f895f920690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f920a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f895f929ce0" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f895f929ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f9250a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f925230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f9253c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f925550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f9256e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f895f923080" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f895f923080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f895f923400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f895f923590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f895f923720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f895f9238b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f895f922800" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f895f922800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f895f922b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f895f922d10"/>
        <function-ref name="isState" scoped="" ref="0x7f895f921020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f895f9211b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f895f921340"/>
        <function-ref name="forceState" scoped="" ref="0x7f895f9214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f895f920d90" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f895f920d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f895f91f180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f895f91f310"/>
        <function-ref name="start" scoped="" ref="0x7f895f91f4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f895f91f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f895f925980" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f895f925980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f925d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f895f91c2d0" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f895f91c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f895f91c650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f895f91c7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f895f91c970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f895f91cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f895f91e580" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f895f91e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f895f91e900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f895f91ea90"/>
        <function-ref name="isState" scoped="" ref="0x7f895f91ec20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f895f91edb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f895f91d020"/>
        <function-ref name="forceState" scoped="" ref="0x7f895f91d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f895f90fd70" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f895f90fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f90e180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f90e310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f90e4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f90e630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f90e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f895f912340" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f895f912340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f9126c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f912850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f9129e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f912b70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f912d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f895f90f020" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f895f90f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f895f90f3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f895f90f530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f895f90f6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f895f90f850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f895f90f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f895f90a1a0" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f895f90a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f895f90a520"/>
        <function-ref name="noAck" scoped="" ref="0x7f895f90a6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f895f90a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f895f90d400" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f895f90d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f895f90d780"/>
        <function-ref name="setRetries" scoped="" ref="0x7f895f90d910"/>
        <function-ref name="getRetries" scoped="" ref="0x7f895f90daa0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f895f90dc30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f895f90ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f895f8ea690" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f895f8ea690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f8eaa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f895f8eb860" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f895f8eb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f8ebbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f8ebd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f8ea020"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f8ea1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f8ea340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f895f8e8610" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f895f8e8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f895f8e8990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f895f8e8b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f895f8e8cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f895f8e8e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f895f8e7020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f895f8e71b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f895f8e7340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f895f8e74d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f895f8e7660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f895f8e77f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f895f8e7980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f895f8e7b10"/>
        <function-ref name="sync" scoped="" ref="0x7f895f8e7ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f895f8e6020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f895f8e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f895f8ec8b0" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f895f8ec8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f895f8ecc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f895f8ecdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f895f8eb020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f895f8eb1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f895f8eb340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f895f8eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f895f8eece0" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f895f8eece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f895f8ec0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f895f8e51f0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f895f8e51f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f895f8e5570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f895f8e5700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f895f8e5890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f895f8e5a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f895f8e5bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f895f8e5d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f895f8efa80" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f895f8efa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f8efe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f895f8ee020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f8ee1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f8ee340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f895f8ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f895f8f5e80" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f895f8f5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f895f8f2220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f8f23b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f8f2540"/>
        <function-ref name="cancel" scoped="" ref="0x7f895f8f26d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f895f8f2860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f895f8f1db0" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f895f8f1db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f8f0180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f895f8eace0" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f895f8eace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f895f8e90a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f895f8e9230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f895f8e93c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f895f8e9550"/>
        <function-ref name="getPower" scoped="" ref="0x7f895f8e96e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f895f8e9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f895f8e64d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f895f8e64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f895f8e6950"/>
        <function-ref name="changed" scoped="" ref="0x7f895f8e6ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f895f8e6c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f895f8e6e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f895f8e9b70" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f895f8e9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f895f8e8020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f895f8e81b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f895f8e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f895f8f11d0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f895f8f11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f8f1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f895f8e4d30" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f895f8e4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f895f8e30e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f895f8e3270"/>
        <function-ref name="led1On" scoped="" ref="0x7f895f8e3400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f895f8e3590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f895f8e3720"/>
        <function-ref name="get" scoped="" ref="0x7f895f8e38b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f895f8e3a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f895f8e21b0"/>
        <function-ref name="set" scoped="" ref="0x7f895f8e3bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f895f8e3d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f895f8e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f895f8f0430" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f895f8f0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f895f8f07b0"/>
        <function-ref name="source" scoped="" ref="0x7f895f8f0940"/>
        <function-ref name="address" scoped="" ref="0x7f895f8f0ad0"/>
        <function-ref name="destination" scoped="" ref="0x7f895f8f0c60"/>
        <function-ref name="setSource" scoped="" ref="0x7f895f8f0df0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f895f8ef020"/>
        <function-ref name="type" scoped="" ref="0x7f895f8ef1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f895f8ef340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f895f8ef4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f895f8ef660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f895f8ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f895f8e40f0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f895f8e40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f895f8e4470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f895f8e4600"/>
        <function-ref name="request" scoped="" ref="0x7f895f8e4790"/>
        <function-ref name="granted" scoped="" ref="0x7f895f8e4920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f895f8e4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f895f83f2f0" loc="46:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SenseAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f895f83f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f895f83f670"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f895f83f800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f895f83f990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f895f83fb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f895f83fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f895f844cc0" loc="45:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SenseAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f895f844cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f895f83f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f895f83e020" loc="47:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SenseAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f895f83e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f895f83e3a0"/>
        <function-ref name="source" scoped="" ref="0x7f895f83e530"/>
        <function-ref name="address" scoped="" ref="0x7f895f83e6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f895f83e850"/>
        <function-ref name="setSource" scoped="" ref="0x7f895f83e9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f895f83eb70"/>
        <function-ref name="type" scoped="" ref="0x7f895f83ed00"/>
        <function-ref name="setType" scoped="" ref="0x7f895f83d020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f895f83d1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f895f83d340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f895f83d4d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8961257350" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8961257350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f89612501f0" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8961255a60" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f8961252820" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8961252250" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f8961252590" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f8961254a60" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f896124f270" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f8961250980" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f8961254270" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f8961256020" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8961257c40" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f8961251820" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8961251250" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f8961251590" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f8961256ae0" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8961256860" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8961255350" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f89616ea270" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f89616eaac0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f89611d4740" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f89611fa780" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89611fa500" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f89611f9820" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89611f95a0" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f89611f5d30" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89611f5730" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f89611f5a60" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f89611f8da0" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f89611f7ca0" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89611f76e0" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f89611f7a10" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f89611f0020" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f89611f1630" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f89611f19b0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f89611f1ce0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f89611ec660" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89611ec060" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f89611ec390" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f89611eb790" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f89611ef390" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89611ef110" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f89611ed8b0" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89611ed2d0" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f89611ed620" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f89611d5020" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
              <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89611d6640" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f89611d6990" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f89611d6cc0" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f89611cd020" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f89611cd7d0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f89611cb020" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f89611ca020" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f89611c97d0" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f89611c8020" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f89611cb7b0" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f89611c8b90" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f89611c8910" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f89611ce850" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f89611ca800" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f89611c9020" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f896125b460" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f896125b1e0" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f896125aab0" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f896125a830" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f896125c7b0" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f896125bcb0" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f89611d7d90" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f89611d7d90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f89611c46c0" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f89611c3440" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f89611d7d90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f89611c4e40" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f89611c31b0" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f89611d7d90"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f89611dbd30" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f896120c930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611dbab0" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f89611e5a10" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611e5790" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f896124ae50" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f89611e7950" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611e76d0" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f89611e23a0" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611e6d70" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f89611e2110" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f89611e3e50" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611e3870" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f89611e3bc0" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f89611df810" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611df590" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f89611ddb90" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611dd5e0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f89611dd900" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f896120c550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f89611e0600" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611e0380" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f89611da2f0" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f896120c930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f89611decf0" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f89611da060" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f896120c930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f89611d8190" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f896120c930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f89611856d0" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f8961157790" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f896115aa30" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f8961157070" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f896115a350" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f89611591f0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f896115b510" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f896115bbf0" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f8961159910" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f8961378020" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f896163dc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f8961106500" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f8961106280" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f89611139c0" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f896114f5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f896114d020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f8961106d70" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f8961104c80" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f8961107b00" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f89611044f0" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f8961108190" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f8961108920" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f8961107390" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f896114f5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f896114d020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8961107110" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f896114f5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f896114d020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f89610f8520" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f89610f6ca0" loc="84:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f89610f6a20" loc="84:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f89610f49d0" loc="91:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f89610f4750" loc="91:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f89610f6270" loc="73:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f89610f7940" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f89610f7020" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f89610f8c50" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f8961101880" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f89610fe2a0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f89610fe020" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f89610fec80" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f89610fea00" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f89610fc6a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f89610fc420" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f89610fcd90" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f896110e120" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f896110da10" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f896110d790" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f896110e850" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8961112350" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f896110d020" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f8961111270" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f896110f9e0" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f8961112ae0" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f8961111980" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f896110f2e0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f896110f060" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f896110c450" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f896110c1d0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f89610cf1f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f896129ba80" loc="85:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f896129a1f0" loc="86:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f896129b2b0" loc="79:../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f89614b4810" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f89616f6020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f89616f5020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f89616f6790" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f8960fa6e30" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f8960fa55c0" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f8960fa6020" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f8960fa4480" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8960fa6720" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f8960fa5ce0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8960fa8120" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f8960fa87f0" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f8960f7a020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f8960f7a770" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f8960f752e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f8960f75060" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f8960f7c770" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f8960f79780" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f8960f75bd0" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f8960f79020" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8960f7b820" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f8960f76020" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f8960f7b020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8960f808b0" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f8960f77020" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f8960f767c0" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f8960f777e0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f8960f7c020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8960d27100" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8960d27100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f8960d27a20" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8960d24b10" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8960d24b10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8960d24d50" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f8960d1d9c0" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8960d1f950" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f8960d1d020" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8960d1e9b0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f8960d1ecf0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f8960d1e190" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f8960d1c1f0" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8960d208e0" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8960d20660" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960d24d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8960d1f190" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8960cb0100" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8960cb0100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8960cb0340" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960cb0340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f8960cb0c60" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960cb0340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f8960cafd70" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f8960caf510" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f8960cae500" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7f8960b8b020" loc="41:../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7f8960b732b0" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8960b75b60" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f8960b73020" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7f8960b73af0" loc="92:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7f8960b75390" loc="76:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7f8960b77d10" loc="61:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7f8960b713b0" loc="109:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f8960b71130" loc="109:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f8960b7eaf0" loc="47:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7f8960b71e50" loc="116:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8960b71bd0" loc="116:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7f8960b72900" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8960b72340" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f8960b72670" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7f8960b774e0" loc="54:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8960b77260" loc="54:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7f8960b76b00" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8960b76530" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f8960b76870" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f8960b7c600" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f8960b7d5e0" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f8960b80c20" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f8960b7ddd0" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f8960b7a0e0" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f8960b2e7e0" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f8960b2e020" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f8960b2f720" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f8960b32db0" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f8960a737b0" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8960a712b0" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f8960a73020" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f8960a72a60" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f8960a727e0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f8960a76820" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f8960a72020" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f8960968ae0" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f89609654e0" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f896095bd20" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f896095b500" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f8960962be0" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f8960961ca0" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f8960962350" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f8960961470" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f8960960620" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f896095e3b0" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f896095ec10" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f8960952de0" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f896095fd90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f8960952b60" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f896095fd90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f8960957e00" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f8960954960" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f896095fd90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f89609546e0" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f896095fd90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f89609522b0" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f896095fd90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f89608e5120" loc="62:../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f89608e2ca0" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f89608df4e0" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f8960891bf0" loc="57:../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8960891bf0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f896088a020" loc="89:../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8960891bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f896088d650" loc="89:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f896088d9d0" loc="90:../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8960891bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f896088dd30" loc="90:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f896088eb10" loc="68:../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8960891bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f896088e520" loc="68:../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8960891bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f896088e880" loc="68:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f896088cd90" loc="78:../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f896088cb10" loc="78:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f8960889660" loc="102:../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8960889020" loc="102:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7f89608893d0" loc="102:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f8960869d20" loc="45:../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f8960869d20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f8960866730" loc="58:../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f8960869d20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f8960860990" loc="52:../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8960860990"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f896085d2b0" loc="58:../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f896085b050" loc="66:../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8960860990"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f896085da70" loc="66:../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f896085dd90" loc="66:../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8960860990"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f89608484b0" loc="189:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f8960850450" loc="84:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f89608501d0" loc="84:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f896084f940" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f896084f340" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f896084f6b0" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f89608494c0" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f896084a260" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f896084ab00" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f896084ae80" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f8960849210" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f8960845dd0" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f8960845730" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f8960845ac0" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f896084dd30" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f896084ea30" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f896084d380" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f896084d710" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f896084da80" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f8960846120" loc="206:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960848e70" loc="206:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f89607f6e20" loc="97:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f89607f6160" loc="86:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f8960880110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f89608805e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f89607f8af0" loc="86:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f89608824e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f8960883b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f89607f7020" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f8960880110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f89608805e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f89607f7390" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f89607f7730" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f89607f7ae0" loc="88:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f89607f7e50" loc="88:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f89607f5dc0" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f89607f57a0" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f89607f5b30" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f89607f2780" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f89607f1020" loc="54:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f89607e9da0" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f89607e66a0" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f89607d9ac0" loc="63:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f896086fce0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f896086e7a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f89607d6c30" loc="82:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f8960880110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f89608805e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f89607d69b0" loc="82:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f89607d3350" loc="106:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f89607d1550" loc="118:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f89607d3d50" loc="112:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f89607d3ad0" loc="112:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f89607d8350" loc="68:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f896086ce20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f896086b770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f89607d6130" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f8960880110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f89608805e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f89607d8ac0" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f89607d8e80" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f8960880110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f89608805e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f89607d0600" loc="128:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f89607da760" loc="51:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f896086fce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f896086e7a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f89607da4e0" loc="51:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f896086fce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f896086e7a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f89607d5750" loc="89:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f89607d54d0" loc="89:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f89607d42a0" loc="95:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f89607d4020" loc="95:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f89607d4b10" loc="101:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f89607d1d10" loc="123:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f89607d0da0" loc="133:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f89607d92a0" loc="57:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f896086ce20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f896086b770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f89607d9020" loc="57:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f896086ce20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f896086b770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f896048b2a0" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f896048b020" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f896048a490" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f896048a210" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f89604885f0" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8960488370" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f896047a930" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f896047a370" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f896047a6a0" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f8960474160" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8960475ae0" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8960475e10" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f8960475270" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f8960478c40" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89604789c0" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8960477360" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8960479d10" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f89604770d0" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f8960405320" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8960405320"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8960405560" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960405560"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f8960401510" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960405560"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8960401290" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f89603ff6c0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603ff440" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f89604022a0" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8960402020" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f89603fe9c0" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960405560"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603fe3d0" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f89603fe730" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8960405560"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f89603f2b50" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603f2530" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f89603f28c0" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f89603f0d00" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603f0a80" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f89603f3c60" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f89603f32a0" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f89603f3020" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f89603ca980" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603ca700" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f89603cdc30" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603cd9b0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f89603ce350" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f89603ce0d0" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f89603d1800" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f89603d1580" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f89603ced80" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f89603ceb00" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f89603ccb10" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603cc890" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f89603be2b0" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f89603c9c50" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f89603be020" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f89603d9810" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f89603d9230" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f89603d9580" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f89603d5e20" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f89603d5820" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f89603d5b90" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f89603d8350" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f8961d78110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f89603d80d0" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f89603d7d30" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f89603d7ab0" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f89603db9c0" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f89603db740" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f89603d8e80" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f89603d8c00" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f89603c2b30" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603c28b0" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f89603c7bc0" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603c75a0" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f89603c7930" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f89603c5ad0" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603c5850" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f89603c5020" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603c49c0" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f89603c4d50" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f89603c0b70" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603c08f0" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f89603d2780" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f89603d2500" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8960399360" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f89603a2d30" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f89603990d0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f89603976a0" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f8960395e70" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f8960395060" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f89603958a0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8960395bd0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8960396840" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8960396260" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f89603965b0" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f8960399df0" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f8960399b70" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f89603900e0" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f896039a860" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f896038a2e0" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f896038a020" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f896038c710" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f8961247ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f8961245830"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f896038c410" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f8960389620" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f89612433e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f8961242c90"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8960389320" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f896039e070" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f896039c0e0" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f896039d8f0" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f89603a1730" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f89603a07e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f896039e8e0" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f896039d120" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f89603a0020" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f8960384d00" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f8960385350" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f8960384530" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f89603842b0" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f8960385ac0" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f8960387020" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f896038ec80" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f8960387ad0" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f8960387850" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f8960329870" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f8960329290" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f89603295e0" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f896032a1f0" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f896032b880" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f896032b210" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f896032b5f0" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f8960332c10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8960332990" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f896032aa70" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f896032e730" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f896032e4b0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f8960330d30" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f8960330ab0" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f8960328ae0" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f896032c9c0" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f896032c740" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f89603282b0" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f896032f4d0" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f89603ed020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f89603ed780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f896032fcc0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f89603321f0" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f8960330390" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f896032c020" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f8960306ce0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8961249090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960306a60" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f89603037f0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8961249090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960303570" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f896031ac50" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f89603ed020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f89603ed780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f896030d860" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f896030c7d0" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f896030c070" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f896120c930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f896030d020" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f896120c930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f8960310980" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f896120c930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f8960310cd0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f896120cd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f8960300e40" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8961249090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f8960308020" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8961249090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f89603090d0" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8960309940" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8960309c90" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8960307780" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8961249090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f89603088f0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8960307190" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f89603074e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f89601f2bb0" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f89601f1d70" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f89601f15c0" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f89601f1340" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f89601f2350" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f89601c00e0" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f89601c0930" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f89601bf1f0" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f8960199b00" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960199520" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8960199870" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f8960194dd0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960194490" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f89601947e0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8960194b30" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f89601956b0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8961249090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f89601950d0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8960195420" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f896019a6f0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8961249090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f896019a110" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f896019a460" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f89601962c0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f89601988f0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8960198c40" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8960196020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f896017adf0" loc="76:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f896017a480" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f896017a810" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f896017ab50" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f89601773c0" loc="88:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f89601766a0" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f8960176a30" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8960176d70" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8960177110" loc="89:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f896017ec80" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f896017ea00" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f896009abf0" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f89600cd020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f89600cd440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f8960099aa0" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960099820" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f8960098e60" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960098be0" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f8960098350" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8960097920" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f89600976a0" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f89600872a0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960087020" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f8960088720" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f8960059af0" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f8960065790" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f8960071610" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e9080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f89600e98c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8960071390" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e9080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f89600e98c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f8960067870" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f896006fa90" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e4080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f89600e48c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f896006f810" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e4080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f89600e48c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f896005ee70" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f896005a480" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f896006f070" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e7020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f89600e77b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f896006e2b0" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e4080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f89600e48c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f896006a020" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f896006bd30" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f896006b610" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f896005e740" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f8960070840" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e7020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f89600e77b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f89600705c0" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e7020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f89600e77b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f896006c420" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f896005d5d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f896006ce00" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f896006cb80" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f8960068910" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f89600670e0" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f8960060840" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f8960062790" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f89600667e0" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f896005e020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f8960063020" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f896005dcf0" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f896006a800" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f89600efdc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f89600eb680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f896005c4c0" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f8960059350" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f896006ec50" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f896006e9d0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f89600584d0" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8960058250" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f8960071df0" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f89600e9080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f89600e98c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f8960066020" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f8960063770" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f8960060020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f89600bbe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f89600ba2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f8960061cf0" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f89600bbe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f89600ba2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f89600612a0" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f89600cd020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f89600cd440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f8960061020" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f89600cd020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f89600cd440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f8960058d90" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f896005ccb0" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f8960068070" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f896005abe0" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f8960062020" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f8960065020" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f895fff1600" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f895ff48070" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f895ff5bb10" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f895ff50d50" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f895ff50ad0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f895ffe4270" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f895ff4c350" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f895ff55cf0" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f895ff5dc50" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f895ff5a9c0" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f895ff5ec00" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f895ff5e980" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f895ff5f120" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f895ff58790" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f895ff4fc80" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f895ff4a8f0" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f895ff50390" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f895ff45b60" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f895ff40270" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f895ffe30e0" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f895ff58020" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f895ff56910" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f895ff5d500" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f895ffe5020" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f895ff51ba0" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f895ff51920" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f895ffe97d0" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f895ff4db80" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f895ff487d0" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f895ff42350" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f895ff41a90" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f895ff4b270" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f895ff47020" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f895ff4f520" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f895ff46bb0" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f895ffe3800" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f895ff52020" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f895ff46020" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f895ff4a190" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f895ff55520" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f895ff552a0" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f895ff42af0" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f895ff511f0" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f895ff4cac0" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f895ffe5aa0" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f89600a7b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f89600a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f895ffe5820" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f89600a7b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f89600a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f895ff59870" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f895ff60980" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f895ff60700" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f895ff56120" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f895ff58e70" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f895ff453b0" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f895ff5e270" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f895ff60020" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f895ff529e0" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f895ff52760" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8961d77520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f895ffe49a0" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f895ff47740" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f895ff4b9e0" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f895ff4d420" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f895ff54740" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f895ff544c0" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f895ff59120" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f895ff5b3b0" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f895ff412b0" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f895ff5faa0" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f895ff5f820" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f895ff43350" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f895ff5a270" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f895ff43b10" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f895fcd35e0" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f895fcd3360" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f895fcc0b00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f895fcc01c0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f895fcc0530" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f895fcc0860" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f895fcbf880" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f895fcbf2c0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f895fcbf5f0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f895fca64d0" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f895fca64d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f895fca6710" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f895fca6710"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f895fca52a0" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f895fca6710"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f895fca5020" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f895fca6710"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f895fc40580" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f895fc0f9e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f895fc0f020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f895fc0f750" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f895fc107f0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f895fc10020" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f895fc13d30" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8961d77920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f895fc263d0" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8961d77160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f895fc26150" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f895fc273d0" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f89616fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f895fc27150" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f895fc23350" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f895fc230d0" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f895fc25390" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f895fc25110" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f89611fe720"/>
                <typename><typedef-ref name="message_t" ref="0x7f89611fcd10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f895fa005e0" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f895fa005e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f895f9fd2a0" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f89616f1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f895fa005e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f895f9fd020" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f895fa005e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
